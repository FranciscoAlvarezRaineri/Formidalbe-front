{"version":3,"file":"index.js","sources":["../src/formBuilder/checkbox/FBCheckbox.js","../src/formBuilder/FontAwesomeIcon.js","../src/formBuilder/Collapse/Collapse.js","../src/formBuilder/radio/FBRadioButton.js","../src/formBuilder/radio/FBRadioGroup.js","../src/formBuilder/Tooltip.js","../src/formBuilder/utils.js","../src/formBuilder/dependencies/DependencyWarning.js","../src/formBuilder/dependencies/CardSelector.js","../src/formBuilder/CardEnumOptions.js","../src/formBuilder/dependencies/ValueSelector.js","../src/formBuilder/dependencies/DependencyPossibility.js","../src/formBuilder/dependencies/DependencyField.js","../src/formBuilder/CardModal.js","../src/formBuilder/GeneralParameterInputs.js","../src/formBuilder/CardGeneralParameterInputs.js","../src/formBuilder/Add.js","../src/formBuilder/Card.js","../src/formBuilder/defaults/defaultInputs.js","../src/formBuilder/Section.js","../src/formBuilder/styles.js","../src/formBuilder/inputs/PlaceholderInput.js","../src/formBuilder/defaults/shortAnswerInputs.js","../src/formBuilder/defaults/longAnswerInputs.js","../src/formBuilder/defaults/numberInputs.js","../src/formBuilder/defaults/arrayInputs.js","../src/formBuilder/defaults/referenceInputs.js","../src/formBuilder/defaults/defaultFormInputs.js","../src/formBuilder/FormBuilder.js","../src/formBuilder/CardGallery.js","../src/formBuilder/PredefinedGallery.js"],"sourcesContent":["// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  onChangeValue: Function,\n  isChecked: boolean,\n  id?: string,\n  label?: string,\n  use?: string,\n  value?: string,\n  disabled?: boolean,\n  dataTest?: string,\n  labelClassName?: string,\n};\n\nexport default function FBCheckbox({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}: Props): Node {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId = potentialCheckboxId !== '' ? potentialCheckboxId : null;\n  return (\n    <div data-test='checkbox' className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type='checkbox'\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={disabled ? () => {} : onChangeValue}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className='checkbox-overlay'>\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon as FortAwesomeFontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type { Node } from 'react';\n\nexport default function FontAwesomeIcon({\n  className,\n  ...otherProps\n}: {\n  className?: string,\n  [string]: any,\n}): Node {\n  const props = Object.assign(\n    { className: classnames([className, 'fa']) },\n    otherProps,\n  );\n  return <FortAwesomeFontAwesomeIcon {...props} />;\n}\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { '.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& .toggle-collapse': {\n      fontSize: '2.3rem',\n      cursor: 'pointer',\n      marginLeft: '33px',\n      '& .fa-caret-right': {\n        marginRight: '9px',\n      },\n    },\n  },\n});\n\ntype Props = {\n  // Determines if the Collapse component is open\n  isOpen: boolean,\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: () => void,\n  // The title to display in the collapse header\n  title: Node,\n  // Anything to be rendered within the collapse\n  children: any,\n  // If true will gray out and disable */\n  disableToggle?: boolean,\n  className?: string,\n};\n\nexport default function Collapse(props: Props): Node {\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    },\n  );\n\n  return (\n    <div className={classes}>\n      <div className='d-flex'>\n        <span className='toggle-collapse'>\n          <FontAwesomeIcon\n            onClick={!props.disableToggle ? props.toggleCollapse : () => {}}\n            icon={props.isOpen ? faCaretDown : faCaretRight}\n          />\n        </span>\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport type { Node } from 'react';\n\ntype Props = {\n  label: Node,\n  value?: any,\n  name?: string,\n  checked?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioButton(props: Props): Node {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const [id] = useState(`radio-${Math.floor(Math.random() * 1000000)}`);\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <div className={classes} key={value}>\n      <input\n        id={id}\n        type='radio'\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport type { Node } from 'react';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& .fb-radio-button': {\n      display: 'block',\n      '& input[type=\"radio\"]': {\n        marginRight: '5px',\n        marginBottom: 0,\n        height: '1em',\n        verticalAlign: 'middle',\n      },\n      '& input[type=\"radio\"] + label': {\n        marginTop: 0,\n        marginBottom: 0,\n        verticalAlign: 'middle',\n      },\n    },\n  },\n});\n\ntype Props = {\n  options: Array<{ label: Node, value: string | number }>,\n  defaultValue?: any,\n  horizontal?: boolean,\n  id?: string,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioGroup(props: Props): Node {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n  return (\n    <div id={id} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          id={id}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","// @flow\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport type { Node } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faAsterisk,\n  faQuestionCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\n\nconst typeMap = {\n  alert: faAsterisk,\n  help: faQuestionCircle,\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: Node,\n  type: 'alert' | 'help',\n  id: string,\n}): Node {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span\n        style={{ textDecoration: 'underline', color: 'blue' }}\n        href='#'\n        id={id}\n      >\n        <FontAwesomeIcon icon={typeMap[type]} />\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement='top'\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport type { Node } from 'react';\nimport type {\n  CardBody,\n  CardProps,\n  ElementProps,\n  FormInput,\n  Mods,\n  ModalBody,\n  DataOptions,\n  DataType,\n} from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string): any {\n  if (!text) return {};\n  return JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any): string {\n  if (!obj) return '{}';\n  return JSON.stringify(obj);\n}\n\nexport function defaultDataProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultDataSchema;\n}\n\nexport function defaultUiProps(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: any } {\n  return allFormInputs[category].defaultUiSchema;\n}\nexport function categoryType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): DataType {\n  return allFormInputs[category].type;\n}\nexport function getCardBody(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): CardBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].cardBody) ||\n    (() => null)\n  );\n}\nexport function categoryToNameMap(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): { [string]: string } {\n  const categoryNameMap = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(allFormInputs: { [string]: FormInput }): {\n  [string]: string,\n} {\n  const categoryHash = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type === 'null' ? '' : type};widget:${\n          match.widget || ''\n        };field:${match.field || ''};format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [string]: string },\n): string {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n  '$schema',\n  'meta',\n  'additionalProperties',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:options',\n  'ui:field',\n  'ui:placeholder',\n  'ui:column',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>,\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object')\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      )\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n    });\n\n  if (uischema && typeof uischema === 'object')\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      )\n        propDefined = true;\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach((grouping) => {\n                  if (grouping.properties)\n                    if (Object.keys(grouping.properties).includes(uiProperty))\n                      propDefined = true;\n                });\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties,\n                  ).includes(uiProperty)\n                )\n                  propDefined = true;\n              }\n            },\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty))\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`,\n        );\n    });\n\n  // check for unsupported property parameters\n  if (schema.properties)\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type,\n            )\n          )\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`,\n            );\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`,\n              );\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp))\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`,\n              );\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            )\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`,\n              );\n\n            // check unsupported ui option\n            if (uiProp === 'ui:options')\n              Object.keys(uischema[parameter]['ui:options']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption))\n                    unsupportedFeatures.push(\n                      `UI Property: ui:options.${uiOption} for ${parameter}`,\n                    );\n                },\n              );\n          });\n        }\n      },\n    );\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  allFormInputs: { [string]: FormInput },\n): string[] {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  const widgets = [];\n  const fields = [];\n  const options = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget))\n        widgets.push(match.widget || ''); // || '' is redundant but here to appease flow\n      if (match.field && !fields.includes(match.field))\n        fields.push(match.field || ''); // || '' is redundant but here to appease flow\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions,\n      ),\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateDependencyElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n  useDefinitionDetails: boolean = true, // determines whether to use an element's definition details or not.\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]] &&\n      useDefinitionDetails === true\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions);\n    Object.keys(newElement.uiOptions).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n      }\n    });\n\n    newElement.dataOptions.category = getCardCategory(newElement, categoryHash);\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n}): Array<ElementProps> {\n  const { schema, uischema, definitionData, definitionUi, categoryHash } =\n    parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement = {};\n    let elementDetails =\n      element && typeof element === 'object'\n        ? (element: {\n            ...any,\n            $ref?: string,\n          })\n        : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      )\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`,\n        );\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...definitionData[pathArr[2]],\n          ...elementDetails,\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n    newElement.dataOptions = elementDetails;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement,\n        categoryHash,\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    const useDefinitionDetails = false;\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (\n                !elementDict[parameter] ||\n                (parameter !== parent &&\n                  Object.keys(elementDict[parameter]).length === 1 &&\n                  elementDict[parameter].dependents)\n              ) {\n                const newElement = generateDependencyElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                  useDefinitionDetails,\n                );\n                if (\n                  elementDict[parameter] &&\n                  elementDict[parameter].dependents\n                ) {\n                  newElement.dependents = elementDict[parameter].dependents;\n                }\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter,\n                );\n              }\n            },\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateDependencyElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            definitionData,\n            definitionUi,\n            categoryHash,\n            useDefinitionDetails,\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name] = newElement;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList);\n  return (cardPropList: Array<ElementProps>);\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any): number {\n  if (!schemaData.properties) return 0;\n  const elementDict = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!(elementDict[parent] || {}).dependents) {\n            elementDict[parent] = elementDict[parent] || {};\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter,\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = elementDict[parameter] || {};\n          elementCount += 1;\n          if (elementDict[parent]) {\n            if (elementDict[parent].dependents) {\n              elementDict[parent].dependents[0].children.push(parameter);\n            } else {\n              elementDict[parent].dependents = [{ children: [parameter] }];\n            }\n          } else {\n            elementDict[parent] = {};\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return (elementCount: number);\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    const title =\n      element.schema !== undefined && element.schema.title !== undefined\n        ? element.schema.title\n        : element.dataOptions.title;\n    const description =\n      element.schema !== undefined && element.schema.description !== undefined\n        ? element.schema.description\n        : element.dataOptions.description;\n\n    let returnElement = {\n      $ref: element.$ref,\n      title: title,\n      description: description,\n    };\n\n    const length = element?.schema?.required?.length;\n    if (length !== undefined && length > 0) {\n      returnElement = { ...returnElement, required: element.schema.required };\n    }\n    return returnElement;\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'allFormInputs',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n  const newSchema = {};\n\n  const props = {};\n  const dependencies = {};\n  const elementDict = {};\n  const dependentElements = new Set([]);\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility) => {\n            const childrenComponents = {};\n            const requiredValues = [];\n            possibility.children.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child],\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents = {};\n        const requiredValues = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child],\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName))\n      props[element.name] = generateSchemaElementFromElement(element);\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any,\n): { [string]: any, definitions?: { [string]: any }, ... } {\n  if (!elementArr) return {};\n\n  const uiSchema = {};\n  const uiOrder = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]])\n        uiSchema[element.name] = definitions[pathArr[2]];\n    }\n    if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (\n      element.propType === 'section' &&\n      Object.keys(element.uischema).length > 0\n    ) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  allFormInputs: { [string]: FormInput },\n): ModalBody {\n  return (\n    (allFormInputs[category] && allFormInputs[category].modalBody) ||\n    (() => null)\n  );\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: Array<ElementProps>,\n  parameters: {\n    schema: { [string]: any, definitions?: { [string]: any }, ... },\n    uischema: { [string]: any, definitions?: { [string]: any }, ... },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n  },\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const newSchema = Object.assign(\n    { ...schema },\n    generateSchemaFromElementProps(elementArr),\n  );\n\n  const newUiSchema: {\n    [string]: any,\n    definitions?: { [string]: any },\n    ...\n  } = generateUiSchemaFromElementProps(elementArr, definitionUi);\n  if (uischema.definitions) {\n    newUiSchema.definitions = uischema.definitions;\n  }\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n  onChange(newSchema, newUiSchema);\n}\n\nexport const DEFAULT_INPUT_NAME = 'newInput';\n\n// ensure that each added block has a unique name\nfunction getIdFromElementsBlock(elements: Array<ElementProps>) {\n  const names = elements.map((element) => element.name);\n  const defaultNameLength = DEFAULT_INPUT_NAME.length;\n\n  return names.length > 0\n    ? Math.max(\n        ...names.map((name) => {\n          if (name.startsWith(DEFAULT_INPUT_NAME)) {\n            const index = name.substring(defaultNameLength, name.length);\n            const value = Number.parseInt(index);\n\n            if (!isNaN(value)) {\n              return value;\n            }\n          }\n\n          return 0;\n        }),\n      ) + 1\n    : 1;\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  mods?: Mods,\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    mods,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n  const dataOptions = getNewElementDefaultDataOptions(i, mods);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: dataOptions,\n    uiOptions: (mods && mods.newElementDefaultUiSchema) || {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const i = getIdFromElementsBlock(newElementObjArr);\n\n  const newElement = ({\n    name: `${DEFAULT_INPUT_NAME}${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [string]: any },\n  uiSchemaData: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  hideKey?: boolean,\n  path: string,\n  cardOpenArray: Array<boolean>,\n  setCardOpenArray: (newArr: Array<boolean>) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n  Card: React.AbstractComponent<{ [string]: any }>,\n  Section: React.AbstractComponent<{ [string]: any }>,\n}): Node[] {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData));\n  const uischema = parse(stringify(uiSchemaData));\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map((elementProp, index) => {\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        allFormInputs,\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={Object.assign(\n            {\n              name: elementPropArr[index].name,\n              required: elementPropArr[index].required,\n              hideKey,\n              path: `${path}_${elementPropArr[index].name}`,\n              definitionData,\n              definitionUi,\n              neighborNames: elementPropArr[index].neighborNames,\n              dependents: elementPropArr[index].dependents,\n              dependent: elementPropArr[index].dependent,\n              parent: elementPropArr[index].parent,\n            },\n            elementPropArr[index].uiOptions,\n            elementPropArr[index].dataOptions,\n          )}\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps = {};\n            const newUiProps = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          mods={mods}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [string]: any },\n            newUiSchema: { [string]: any },\n            newRef?: string,\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>,\n              value?: any,\n            }>,\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              ...cardOpenArray.slice(index + 1),\n            ]);\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                mods,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          allFormInputs={allFormInputs}\n          categoryHash={categoryHash}\n          mods={mods}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n    categoryHash: { [string]: string },\n  },\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: Array<ElementProps>,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  categoryHash: { [string]: string },\n) {\n  const updatedElementArr = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      );\n      const newUiSchema = Object.assign(\n        { ...element.uischema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newSchema = Object.assign(\n        { ...element.schema },\n        generateSchemaFromElementProps(updatedChildren),\n      );\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  categoryHash: { [string]: string },\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// Member-wise subtraction of array2 from array1\nexport function subtractArray(\n  array1: Array<string>,\n  array2?: Array<string>,\n): Array<string> {\n  if (array2 === undefined || array2 === null) return array1;\n\n  const keys = array2.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return array1.filter((v) => !keys[v]);\n}\n\nexport function excludeKeys(\n  obj: { [string]: any },\n  keys: ?(string[]),\n): { [string]: any } {\n  if (!keys) return { ...obj };\n\n  const keysHash = keys.reduce((acc, curr) => {\n    acc[curr] = true;\n    return acc;\n  }, {});\n\n  return Object.keys(obj).reduce(\n    (acc, curr) => (keysHash[curr] ? acc : { ...acc, [curr]: obj[curr] }),\n    {},\n  );\n}\n\nexport function getNewElementDefaultDataOptions(\n  i: number,\n  mods?: Mods,\n): DataOptions {\n  if (mods && mods.newElementDefaultDataOptions !== undefined) {\n    const title = `${mods.newElementDefaultDataOptions.title} ${i}`;\n    return { ...mods.newElementDefaultDataOptions, ...{ title: title } };\n  } else {\n    return {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    };\n  }\n}\n\nexport function getRandomId(): string {\n  const chars = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ];\n  const numberOfChars = chars.length;\n  const randomIdLength = 50;\n\n  return Array.from({ length: randomIdLength })\n    .map(() => chars[Math.floor(Math.random() * numberOfChars)])\n    .join('');\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport type { Node } from 'react';\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: {\n  parameters: {\n    [string]: any,\n    name?: string,\n    dependents?: Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n    type?: string,\n    enum?: Array<string | number>,\n    neighborNames?: Array<string>,\n    schema?: string,\n  },\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    (parameters.dependents || []).forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val) => definedVals.add(val));\n    });\n    const undefinedVals = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val)) undefinedVals.push(val);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${elementId}_valuewarning`}\n            type='help'\n            text='Each possible value for a value-based dependency must be defined to work properly'\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val, index) => (\n            <li key={index}>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>,\n  chosenChoices: Array<string>,\n  onChange: (chosenChoices: Array<string>) => void,\n  placeholder: string,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${elementId}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className='card-modal-select'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  cardEnumOption: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '.5em',\n    '& input': { width: '80%', marginRight: '1em', marginBottom: 0 },\n    '& .delete-button': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n    },\n  },\n});\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: {\n  initialValues: Array<any>,\n  names?: Array<string>,\n  showNames: boolean,\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void,\n  type: string,\n}): Node {\n  const classes = useStyles();\n\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className={classes.cardEnumOption}>\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder='Possible Value'\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                if (Number.isNaN(newVal)) newVal = type === 'string' ? '' : 0;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names,\n            );\n          }}\n          className='card-text'\n        />\n        <Input\n          value={name || ''}\n          placeholder='Label'\n          key={`name-${index}`}\n          type='text'\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className='card-text'\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <div className='delete-button'>\n          <FontAwesomeIcon\n            icon={faTimes}\n            onClick={() => {\n              // remove this value\n              onChange(\n                [\n                  ...initialValues.slice(0, index),\n                  ...initialValues.slice(index + 1),\n                ],\n                names\n                  ? [...names.slice(0, index), ...names.slice(index + 1)]\n                  : undefined,\n              );\n            }}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {possibleValues}\n      <FontAwesomeIcon\n        icon={faPlus}\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, type === 'string' ? '' : 0],\n            names ? [...names, ''] : undefined,\n          );\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>,\n    value: any,\n  },\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n  path: string,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder='Allowed value'\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr = (possibility.value.enum: Array<any>);\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${elementId}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val = combination[key];\n                return (\n                  <div key={key}>\n                    <h5>{key}:</h5>\n                    {\n                      {\n                        string: (\n                          <Input\n                            value={val || ''}\n                            placeholder='String value'\n                            type='string'\n                            onChange={(ev: any) => {\n                              const newVal = ev.target.value;\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        number: (\n                          <Input\n                            value={val || ''}\n                            placeholder='Number value'\n                            type='number'\n                            onChange={(ev: any) => {\n                              const newVal = Number.parseFloat(ev.target.value);\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-number'\n                          />\n                        ),\n                        array: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Array in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON array input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                        object: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder='Object in JSON'\n                            type='string'\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON object input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className='card-modal-text'\n                          />\n                        ),\n                      }[typeof val]\n                    }\n                  </div>\n                );\n              })}\n              <FontAwesomeIcon\n                icon={faTimes}\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newCase = {};\n              const propArr = parentSchema ? parentSchema.properties : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>,\n    value?: any,\n  },\n  neighborNames: Array<string>,\n  path: string,\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  onDelete: () => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: any,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div className='form-dependency-condition'>\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${elementId}_bulk`}\n          type='help'\n          text='Choose the other form elements that depend on this one'\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder='Choose a dependent...'\n        path={path}\n      />\n      <h5>\n        If \"{parentName}\" has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'block' : 'none' }}>\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>,\n            value?: any,\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onDelete()} />\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\nimport FontAwesomeIcon from '../FontAwesomeIcon';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& .fa': { cursor: 'pointer' },\n    '& .plus': { marginLeft: '1em' },\n    '& h4': { marginBottom: '.5em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [string]: any,\n  name?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  type?: string,\n  enum?: Array<string | number>,\n  neighborNames?: Array<string>,\n  schema?: any,\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams,\n  onChange: (newParams: DependencyParams) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h4>\n        Dependencies{' '}\n        <Tooltip\n          id={`${elementId}_dependent`}\n          type='help'\n          text='Control whether other form elements show based on this one'\n        />\n      </h4>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: (\n                  <React.Fragment>\n                    Specific value dependency{' '}\n                    <Tooltip\n                      id={`${elementId}_valuebased`}\n                      type='help'\n                      text=\"Specify whether these elements should show based on this element's value\"\n                    />\n                  </React.Fragment>\n                ),\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className='form-dependency-conditions'>\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${elementId}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>,\n                  value?: any,\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <span className='plus' id={`${elementId}_adddependency`}>\n          <FontAwesomeIcon\n            icon={faPlus}\n            onClick={() => {\n              const newDependents = parameters.dependents\n                ? [...parameters.dependents]\n                : [];\n              newDependents.push({\n                children: [],\n                value: valueBased ? { enum: [] } : undefined,\n              });\n              onChange({\n                ...parameters,\n                dependents: newDependents,\n              });\n            }}\n          />\n        </span>\n        <UncontrolledTooltip\n          placement='top'\n          target={`${elementId}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n  Input,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { Node } from 'react';\nimport type { Parameters } from './types';\nimport Tooltip from './Tooltip';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-header': { paddingTop: '.5em', paddingBottom: '.5em' },\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { marginTop: '.5em', marginBottom: '.5em' },\n    '& h5, p, label, li': { fontSize: '14px' },\n    '& h4': { fontSize: '16px' },\n    '& h3': { fontSize: '18px', marginBottom: 0 },\n    '& .card-modal-entries > div > input': {\n      marginBottom: '1em',\n      height: '32px',\n    },\n    '& .fa-question-circle, & .fa-circle-question': { color: 'gray' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nexport default function CardModal({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}: {\n  componentProps: {\n    [string]: any,\n  },\n  onChange: (any) => void,\n  isOpen: boolean,\n  onClose: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n}): Node {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] =\n    React.useState(componentProps);\n\n  React.useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n  return (\n    <Modal isOpen={isOpen} data-test='card-modal' className={classes.cardModal}>\n      <ModalHeader className='card-modal-header'>\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h3>Additional Settings</h3>\n        </div>\n      </ModalHeader>\n      <ModalBody className='card-modal-entries'>\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <div>\n          <h4>\n            Column Size{' '}\n            <a\n              href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip\n                id='column_size_tooltip'\n                type='help'\n                text='Set the column size of the input'\n              />\n            </a>\n          </h4>\n          <Input\n            value={\n              componentPropsState['ui:column']\n                ? componentPropsState['ui:column']\n                : ''\n            }\n            placeholder='Column size'\n            key='ui:column'\n            type='number'\n            min={0}\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              setComponentProps({\n                ...componentPropsState,\n                'ui:column': ev.target.value,\n              });\n            }}\n            className='card-modal-text'\n          />\n        </div>\n        <DependencyField\n          parameters={(componentPropsState: { [string]: any })}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n            setComponentProps(componentProps);\n          }}\n          color='secondary'\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { getCardBody } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\n// specify the inputs required for any type of object\nexport default function GeneralParameterInputs({\n  category,\n  parameters,\n  onChange,\n  mods,\n  allFormInputs,\n}: {\n  category: string,\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n}): Node {\n  const CardBody = getCardBody(category, allFormInputs);\n  return (\n    <div>\n      <CardBody parameters={parameters} onChange={onChange} mods={mods || {}} />\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input, FormGroup, FormFeedback } from 'reactstrap';\nimport classnames from 'classnames';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n  subtractArray,\n  getRandomId,\n} from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [keyError, setKeyError] = React.useState(null);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description,\n  );\n  const [elementId] = React.useState(getRandomId());\n  const categoryMap = categoryToNameMap(parameters.category, allFormInputs);\n\n  const fetchLabel = (labelName: string, defaultLabel: string): string => {\n    return mods && mods.labels && typeof mods.labels[labelName] === 'string'\n      ? mods.labels[labelName]\n      : defaultLabel;\n  };\n\n  const objectNameLabel = fetchLabel('objectNameLabel', 'Object Name');\n  const displayNameLabel = fetchLabel('displayNameLabel', 'Display Name');\n  const descriptionLabel = fetchLabel('descriptionLabel', 'Description');\n  const inputTypeLabel = fetchLabel('inputTypeLabel', 'Input Type');\n\n  const availableInputTypes = () => {\n    const definitionsInSchema =\n      parameters.definitionData &&\n      Object.keys(parameters.definitionData).length !== 0;\n\n    // Hide the \"Reference\" option if there are no definitions in the schema\n    let inputKeys = Object.keys(categoryMap).filter(\n      (key) => key !== 'ref' || definitionsInSchema,\n    );\n    // Exclude hidden inputs based on mods\n    if (mods) inputKeys = subtractArray(inputKeys, mods.deactivatedFormInputs);\n\n    return inputKeys\n      .map((key) => ({ value: key, label: categoryMap[key] }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  return (\n    <React.Fragment>\n      <div className='card-entry-row'>\n        {showObjectNameInput && (\n          <div className='card-entry'>\n            <h5>\n              {`${objectNameLabel} `}\n              <Tooltip\n                text={\n                  mods &&\n                  mods.tooltipDescriptions &&\n                  typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                    ? mods.tooltipDescriptions.cardObjectName\n                    : 'The back-end name of the object'\n                }\n                id={`${elementId}_nameinfo`}\n                type='help'\n              />\n            </h5>\n\n            <FormGroup>\n              <Input\n                invalid={keyError !== null}\n                value={keyState || ''}\n                placeholder='Key'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  setKeyState(ev.target.value)\n                }\n                onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                  const { value } = ev.target;\n                  if (\n                    value === parameters.name ||\n                    !(\n                      parameters.neighborNames &&\n                      parameters.neighborNames.includes(value)\n                    )\n                  ) {\n                    setKeyError(null);\n                    onChange({\n                      ...parameters,\n                      name: value,\n                    });\n                  } else {\n                    setKeyState(parameters.name);\n                    setKeyError(`\"${value}\" is already in use.`);\n                    onChange({ ...parameters });\n                  }\n                }}\n                className='card-text'\n              />\n              <FormFeedback>{keyError}</FormFeedback>\n            </FormGroup>\n          </div>\n        )}\n        <div\n          className={`card-entry ${\n            parameters.$ref === undefined ? '' : 'disabled-input'\n          }`}\n        >\n          <h5>\n            {`${displayNameLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                  ? mods.tooltipDescriptions.cardDisplayName\n                  : 'The user-facing name of this object'\n              }\n              id={`${elementId}-titleinfo`}\n              type='help'\n            />\n          </h5>\n          <Input\n            value={titleState || ''}\n            placeholder='Title'\n            type='text'\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n              setTitleState(ev.target.value)\n            }\n            onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              onChange({ ...parameters, title: ev.target.value });\n            }}\n            className='card-text'\n          />\n        </div>\n      </div>\n      <div className='card-entry-row'>\n        <div\n          className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}\n        >\n          <h5>\n            {`${descriptionLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardDescription === 'string'\n                  ? mods.tooltipDescriptions.cardDescription\n                  : 'This will appear as help text on the form'\n              }\n              id={`${elementId}-descriptioninfo`}\n              type='help'\n            />\n          </h5>\n          <FormGroup>\n            <Input\n              value={descriptionState || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                setDescriptionState(ev.target.value)\n              }\n              onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange({ ...parameters, description: ev.target.value });\n              }}\n              className='card-text'\n            />\n          </FormGroup>\n        </div>\n        <div\n          className={classnames('card-entry', {\n            'wide-card-entry': !showObjectNameInput,\n          })}\n        >\n          <h5>\n            {`${inputTypeLabel} `}\n            <Tooltip\n              text={\n                mods &&\n                mods.tooltipDescriptions &&\n                typeof mods.tooltipDescriptions.cardInputType === 'string'\n                  ? mods.tooltipDescriptions.cardInputType\n                  : 'The type of form input displayed on the form'\n              }\n              id={`${elementId}-inputinfo`}\n              type='help'\n            />\n          </h5>\n          <Select\n            value={{\n              value: parameters.category,\n              label: categoryMap[parameters.category],\n            }}\n            placeholder={inputTypeLabel}\n            options={availableInputTypes()}\n            onChange={(val: any) => {\n              // figure out the new 'type'\n              const newCategory = val.value;\n\n              const newProps = {\n                ...defaultUiProps(newCategory, allFormInputs),\n                ...defaultDataProps(newCategory, allFormInputs),\n                name: parameters.name,\n                required: parameters.required,\n              };\n              if (newProps.$ref !== undefined && !newProps.$ref) {\n                // assign an initial reference\n                const firstDefinition = Object.keys(\n                  parameters.definitionData,\n                )[0];\n                newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n              }\n              onChange({\n                ...newProps,\n                title: newProps.title || parameters.title,\n                default: newProps.default || '',\n                type: newProps.type || categoryType(newCategory, allFormInputs),\n                category: newProps.category || newCategory,\n              });\n            }}\n            className='card-select'\n          />\n        </div>\n      </div>\n\n      <div className='card-category-options'>\n        <GeneralParameterInputs\n          category={parameters.category}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n          allFormInputs={allFormInputs}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport FBRadioGroup from './radio/FBRadioGroup';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      'z-index': '1051 !important',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .action-buttons': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '.5em',\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  addElem,\n  hidden,\n  tooltipDescription,\n}: {\n  addElem: (choice: string) => void,\n  hidden?: boolean,\n  tooltipDescription?: string,\n}): Node {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n  const [elementId] = useState(getRandomId());\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <span id={`${elementId}_add`}>\n        <FontAwesomeIcon\n          icon={faPlusSquare}\n          onClick={() => setPopoverOpen(true)}\n        />\n      </span>\n      <UncontrolledTooltip placement='top' target={`${elementId}_add`}>\n        {tooltipDescription || 'Create new form element'}\n      </UncontrolledTooltip>\n      <Popover\n        placement='bottom'\n        target={`${elementId}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${elementId}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className='choose-create'\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: 'Form element',\n              },\n              {\n                value: 'section',\n                label: 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className='action-buttons'>\n            <Button onClick={() => setPopoverOpen(false)} color='secondary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color='primary'\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport Tooltip from './Tooltip';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { Parameters, Mods, FormInput } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n    },\n    '& .card-entry-row': {\n      display: 'flex',\n    },\n    '& .card-entry': {\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n      '&.wide-card-entry': {\n        width: '100%',\n      },\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-array': {\n      '& .fa-plus-square, & .fa-square-plus': { display: 'none' },\n      '& .section-entries': {\n        '& .fa-plus-square, & .fa-square-plus': { display: 'initial' },\n      },\n    },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'lightGray',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0 0 .5em 0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& .fa': { cursor: 'pointer' },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': {\n      marginRight: '1em',\n      borderRadius: '4px',\n      padding: '.25em',\n      height: '25px',\n      width: '25px',\n    },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  showObjectNameInput = true,\n}: {\n  componentProps: {\n    [string]: string | number | boolean | Array<string | number>,\n    path: string,\n  },\n  onChange: ({ [string]: any }) => void,\n  onDelete?: () => void,\n  onMoveUp?: () => void,\n  onMoveDown?: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n  allFormInputs: { [string]: FormInput },\n  showObjectNameInput?: boolean,\n}): Node {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${(componentProps.parent: any)}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${(componentProps.$ref: any)}`}\n                  id={`${elementId}_refinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={(componentProps: any)}\n            onChange={onChange}\n            allFormInputs={allFormInputs}\n            mods={mods}\n            showObjectNameInput={showObjectNameInput}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <span id={`${elementId}_editinfo`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              onClick={() => setModalOpen(true)}\n            />\n          </span>\n          <UncontrolledTooltip placement='top' target={`${elementId}_editinfo`}>\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <span id={`${elementId}_trashinfo`}>\n            <FontAwesomeIcon icon={faTrash} onClick={onDelete || (() => {})} />\n          </span>\n          <UncontrolledTooltip\n            placement='top'\n            target={`${elementId}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label='Required'\n            id={`${elementId}_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: {\n            [string]: string | number | boolean | Array<string | number>,\n          }) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport { getRandomId } from '../utils';\nimport type { Node } from 'react';\nimport type { Parameters, FormInput } from '../types';\n\nconst useStyles = createUseStyles({\n  hidden: {\n    display: 'none',\n  },\n});\n\n// specify the inputs required for a string type object\nexport function CardDefaultParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return <div />;\n}\n\nconst getInputCardBodyComponent = ({ type }: { type: string }) =>\n  function InputCardBodyComponent({\n    parameters,\n    onChange,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }) {\n    return (\n      <React.Fragment>\n        <h5>Default value</h5>\n        <Input\n          value={parameters.default || ''}\n          placeholder='Default'\n          type={type}\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            onChange({ ...parameters, default: ev.target.value })\n          }\n          className='card-text'\n        />\n      </React.Fragment>\n    );\n  };\n\nfunction Checkbox({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className='card-boolean'>\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label='Default'\n      />\n    </div>\n  );\n}\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const classes = useStyles();\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => isNaN(val));\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString,\n  );\n  const [elementId] = React.useState(getRandomId());\n  return (\n    <div className='card-enum'>\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label='Display label is different from value'\n        id={`${elementId}_different`}\n      />\n      <div\n        className={\n          containsUnparsableString || !enumArray.length ? classes.hidden : ''\n        }\n      >\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString || !isNumber) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val) || 0;\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val || 0}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label='Force number'\n          id={`${elementId}_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nconst defaultInputs: { [string]: FormInput } = {\n  dateTime: {\n    displayName: 'Date-Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'datetime-local' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  date: {\n    displayName: 'Date',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'date' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: getInputCardBodyComponent({ type: 'time' }),\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', 'null'],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default defaultInputs;\n","// @flow\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Alert,\n  Input,\n  UncontrolledTooltip,\n  FormGroup,\n  FormFeedback,\n} from 'reactstrap';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faPencilAlt,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/defaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport Card from './Card';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport FontAwesomeIcon from './FontAwesomeIcon';\nimport { getRandomId } from './utils';\nimport type { Node } from 'react';\nimport type { FormInput, Mods } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      display: 'flex',\n      borderBottom: '1px solid gray',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n      },\n      '& .section-entry': {\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid gray',\n      paddingTop: '1em',\n      '& .fa': {\n        marginRight: '1em',\n        borderRadius: '4px',\n        padding: '0.25em',\n        height: '25px',\n        width: '25px',\n      },\n      '& .fa-pencil-alt, &.fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  neighborNames,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  allFormInputs,\n  mods,\n  categoryHash,\n}: {\n  name: string,\n  required: boolean,\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: (\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    ref?: string,\n  ) => void,\n  onNameChange: (string) => void,\n  onDependentsChange: (\n    Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n  ) => void,\n  onRequireToggle: () => any,\n  onDelete: () => any,\n  onMoveUp?: () => any,\n  onMoveDown?: () => any,\n  path: string,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  hideKey?: boolean,\n  reference?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  dependent?: boolean,\n  parent?: string,\n  neighborNames?: Array<string>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  allFormInputs: { [string]: FormInput },\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    allFormInputs,\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  const [keyError, setKeyError] = React.useState(null);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [elementId] = React.useState(getRandomId());\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className='label'>\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${elementId}_parentinfo`}\n                  type='alert'\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className='arrows'>\n              <span id={`${elementId}_moveupbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowUp}\n                  onClick={() => (onMoveUp ? onMoveUp() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <span id={`${elementId}_movedownbiginfo`}>\n                <FontAwesomeIcon\n                  icon={faArrowDown}\n                  onClick={() => (onMoveDown ? onMoveDown() : {})}\n                />\n              </span>\n              <UncontrolledTooltip\n                placement='top'\n                target={`${elementId}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className='section-head'>\n            {reference ? (\n              <div className='section-entry section-reference'>\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder='Reference'\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className='section-select'\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className='section-entry' data-test='section-object-name'>\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionObjectName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionObjectName\n                      : 'The key to the object that will represent this form section.'\n                  }\n                  id={`${elementId}_nameinfo`}\n                  type='help'\n                />\n              </h5>\n              <FormGroup>\n                <Input\n                  invalid={keyError !== null}\n                  value={keyName || ''}\n                  placeholder='Key'\n                  type='text'\n                  onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                    setKeyName(ev.target.value)\n                  }\n                  onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                    const { value } = ev.target;\n                    if (\n                      value === name ||\n                      !(neighborNames && neighborNames.includes(value))\n                    ) {\n                      setKeyError(null);\n                      onNameChange(value);\n                    } else {\n                      setKeyName(name);\n                      setKeyError(`\"${value}\" is already in use.`);\n                      onNameChange(name);\n                    }\n                  }}\n                  className='card-text'\n                  readOnly={hideKey}\n                />\n                <FormFeedback>{keyError}</FormFeedback>\n              </FormGroup>\n            </div>\n            <div className='section-entry' data-test='section-display-name'>\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDisplayName ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDisplayName\n                      : 'The name of the form section that will be shown to users of the form.'\n                  }\n                  id={`${elementId}_titleinfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder='Title'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <div className='section-entry' data-test='section-description'>\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text={\n                    mods &&\n                    mods.tooltipDescriptions &&\n                    mods.tooltipDescriptions &&\n                    typeof mods.tooltipDescriptions.cardSectionDescription ===\n                      'string'\n                      ? mods.tooltipDescriptions.cardSectionDescription\n                      : 'A description of the section which will be visible on the form.'\n                  }\n                  id={`${elementId}_descriptioninfo`}\n                  type='help'\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder='Description'\n                type='text'\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema,\n                  )\n                }\n                className='card-text'\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color='warning'\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${elementId}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className='section-body'>\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n              className='section-body'\n            >\n              <Droppable droppableId='droppable'>\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      allFormInputs,\n                      mods,\n                      categoryHash,\n                      Card,\n                      Section,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className='section-footer'>\n            <Add\n              tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n              addElem={(choice: string) => {\n                if (choice === 'card') {\n                  addCardObj({\n                    schema,\n                    uischema,\n                    mods,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                } else if (choice === 'section') {\n                  addSectionObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                }\n              }}\n              hidden={\n                schemaData.properties &&\n                Object.keys(schemaData.properties).length !== 0\n              }\n            />\n          </div>\n          <div className='section-interactions'>\n            <span id={`${elementId}_editinfo`}>\n              <FontAwesomeIcon\n                icon={faPencilAlt}\n                onClick={() => setModalOpen(true)}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_editinfo`}\n            >\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <span id={`${elementId}_trashinfo`}>\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => (onDelete ? onDelete() : {})}\n              />\n            </span>\n            <UncontrolledTooltip\n              placement='top'\n              target={`${elementId}_trashinfo`}\n            >\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label='Required'\n              id={`${elementId}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n            'ui:column': uischema['ui:column'] ?? '',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n            onChange(schema, {\n              ...uischema,\n              'ui:column': newComponentProps['ui:column'],\n            });\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\n\nexport const arrows = {\n  '& .arrows': {\n    float: 'right',\n    '& .fa-arrow-up, & .fa-arrow-down': {\n      'border-radius': '4px',\n      padding: '.25em',\n      margin: '0 .5em 0 0',\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n      height: '28px',\n      width: '28px',\n    },\n  },\n};\n","// @flow\n\nimport React, { useState } from 'react';\nimport type { Node } from 'react';\nimport type { Parameters } from '../types';\nimport { getRandomId } from '../utils';\nimport Tooltip from '../Tooltip';\nimport { Input } from 'reactstrap';\n\nexport function PlaceholderInput({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  const [elementId] = useState(getRandomId());\n  return (\n    <React.Fragment>\n      <h4>\n        Placeholder{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-placeholder'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_placeholder`}\n            type='help'\n            text='Hint to the user as to what kind of information is expected in the field'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:placeholder']}\n        placeholder='Placeholder'\n        key='placeholder'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:placeholder': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nconst formatDictionary = {\n  '': 'None',\n  email: 'Email',\n  hostname: 'Hostname',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\nconst formatTypeDictionary = {\n  email: 'email',\n  url: 'uri',\n};\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\n// specify the inputs required for a string type object\nfunction CardShortAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${elementId}_format`}\n          type='help'\n          text='Require string input to match a certain common format'\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Format'\n        key='format'\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_autocomplete`}\n            type='help'\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder='Auto Complete'\n        key='ui:autocomplete'\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className='card-modal-select'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <h4>\n        Column Size{' '}\n        <a\n          href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <Tooltip\n            id={`${elementId}_column_size`}\n            type='help'\n            text='Set the column size of the input'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters['ui:column'] ? parameters['ui:column'] : ''}\n        placeholder='Column size'\n        key='ui:column'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            'ui:column': ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction ShortAnswerField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type={formatTypeDictionary[parameters.format] || 'text'}\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Password({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='password'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-text'\n      />\n    </React.Fragment>\n  );\n}\n\nconst shortAnswerInput: { [string]: FormInput } = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n      ...['email', 'hostname', 'uri', 'regex'].map((format) => ({\n        types: ['string'],\n        format,\n      })),\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default shortAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder='Minimum Length'\n        key='minLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder='Maximum Length'\n        key='maxLength'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>\n        Regular Expression Pattern{' '}\n        <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions'>\n          <Tooltip\n            id={`${elementId}_regex`}\n            type='help'\n            text='Regular expression pattern that this must satisfy'\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder='Regular Expression Pattern'\n        key='pattern'\n        type='text'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className='card-modal-text'\n      />\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label='Auto Focus'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction LongAnswer({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='textarea'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className='card-textarea'\n      />\n    </React.Fragment>\n  );\n}\n\nconst longAnswerInput: { [string]: FormInput } = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs,\n  },\n};\n\nexport default longAnswerInput;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport { getRandomId } from '../utils';\nimport type { Parameters, FormInput } from '../types';\n\n// specify the inputs required for a number type object\nfunction CardNumberParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const [elementId] = useState(getRandomId());\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${elementId}_multiple`}\n          type='help'\n          text='Require number to be a multiple of this number'\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder='ex: 2'\n        key='multipleOf'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder='ex: 3'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMinimum'\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label='Exclusive Minimum'\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder='ex: 8'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal: null | number = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className='card-modal-number'\n      />\n      <div className='card-modal-boolean'>\n        <FBCheckbox\n          key='exclusiveMaximum'\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label='Exclusive Maximum'\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction NumberField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={parameters.default}\n        placeholder='Default'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className='card-number'\n      />\n    </React.Fragment>\n  );\n}\n\nconst numberInputs: { [string]: FormInput } = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default numberInputs;\n","// @flow\n\nimport React, { useState } from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  excludeKeys,\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport Card from '../Card';\nimport Section from '../Section';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport defaultInputs from './defaultInputs';\nimport { getRandomId } from '../utils';\nimport type { CardBody, Parameters, Mods, FormInput } from '../types';\n\n// specify the inputs required for a string type object\nfunction CardArrayParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: ({ [string]: any }) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder='ex: 2'\n        key='minimum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder='ex: 2'\n        key='maximum'\n        type='number'\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className='card-modal-number'\n      />\n    </div>\n  );\n}\n\nfunction getInnerCardComponent({\n  defaultFormInputs,\n}: {\n  defaultFormInputs: { [string]: FormInput },\n}): CardBody {\n  return function InnerCard({\n    parameters,\n    onChange,\n    mods,\n  }: {\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n    mods?: Mods,\n  }) {\n    const [elementId] = useState(getRandomId);\n    const newDataProps = {};\n    const newUiProps = {};\n    const allFormInputs = excludeKeys(\n      Object.assign(\n        {},\n        defaultFormInputs,\n        (mods && mods.customFormInputs) || {},\n      ),\n      mods && mods.deactivatedFormInputs,\n    );\n\n    // parse components into data and ui relevant pieces\n    Object.keys(parameters).forEach((propName) => {\n      if (propName.startsWith('ui:*')) {\n        newUiProps[propName.substring(4)] = parameters[propName];\n      } else if (propName.startsWith('ui:')) {\n        newUiProps[propName] = parameters[propName];\n      } else if (!['name', 'required'].includes(propName)) {\n        newDataProps[propName] = parameters[propName];\n      }\n    });\n\n    const definitionData = parameters.definitionData\n      ? parameters.definitionData\n      : {};\n    const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n    const [cardOpen, setCardOpen] = React.useState(false);\n    if (parameters.type !== 'array') {\n      return <h4>Not an array </h4>;\n    }\n    return (\n      <div className='card-array'>\n        <FBCheckbox\n          onChangeValue={() => {\n            if (newDataProps.items.type === 'object') {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'string',\n                },\n              });\n            } else {\n              onChange({\n                ...parameters,\n                items: {\n                  ...newDataProps.items,\n                  type: 'object',\n                },\n              });\n            }\n          }}\n          isChecked={newDataProps.items.type === 'object'}\n          label='Section'\n          id={`${elementId}_issection`}\n        />\n        {generateElementComponentsFromSchemas({\n          schemaData: { properties: { item: newDataProps.items } },\n          uiSchemaData: { item: newUiProps.items },\n          onChange: (schema, uischema) => {\n            onChange({\n              ...parameters,\n              items: schema.properties.item,\n              'ui:*items': uischema.item || {},\n            });\n          },\n          path: elementId,\n          definitionData,\n          definitionUi,\n          hideKey: true,\n          cardOpenArray: [cardOpen],\n          setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n          allFormInputs,\n          mods,\n          categoryHash: generateCategoryHash(allFormInputs),\n          Card: (props) => <Card {...props} showObjectNameInput={false} />,\n          Section,\n        })}\n      </div>\n    );\n  };\n}\n\nconst defaultFormInputs = ({\n  ...defaultInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n}: { [string]: FormInput });\ndefaultFormInputs.array = {\n  displayName: 'Array',\n  matchIf: [\n    {\n      types: ['array'],\n    },\n  ],\n  defaultDataSchema: {\n    items: { type: 'string' },\n  },\n  defaultUiSchema: {},\n  type: 'array',\n  cardBody: getInnerCardComponent({ defaultFormInputs }),\n  modalBody: CardArrayParameterInputs,\n};\n\nconst ArrayInputs: { [string]: FormInput } = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: getInnerCardComponent({ defaultFormInputs }),\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","// @flow\n\nimport type { FormInput, Parameters } from '../types';\nimport Select from 'react-select';\nimport React from 'react';\nimport type { Node } from 'react';\nimport { PlaceholderInput } from '../inputs/PlaceholderInput';\n\nexport function CardReferenceParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (Parameters) => void,\n}): Node {\n  return (\n    <div>\n      <PlaceholderInput parameters={parameters} onChange={onChange} />\n    </div>\n  );\n}\n\nfunction RefChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const pathArr = (parameters.$ref || '').split('/');\n  const currentValueLabel =\n    pathArr.length === 3 &&\n    pathArr[0] === '#' &&\n    pathArr[1] === 'definitions' &&\n    (parameters.definitionData || {})[pathArr[2]]\n      ? parameters.definitionData[pathArr[2]].title || parameters.$ref\n      : parameters.$ref;\n\n  return (\n    <div className='card-select'>\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: currentValueLabel,\n        }}\n        placeholder='Reference'\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label: parameters.definitionData[key].title || `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className='card-select'\n      />\n    </div>\n  );\n}\n\nconst referenceInputs: { [string]: FormInput } = {\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: ['null'],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n      title: '',\n      description: '',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: RefChoice,\n    modalBody: CardReferenceParameterInputs,\n  },\n};\n\nexport default referenceInputs;\n","// @flow\nimport shortAnswerInputs from './shortAnswerInputs';\nimport longAnswerInputs from './longAnswerInputs';\nimport numberInputs from './numberInputs';\nimport arrayInputs from './arrayInputs';\nimport defaultInputs from './defaultInputs';\nimport referenceInputs from './referenceInputs';\nimport type { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS = ({\n  ...defaultInputs,\n  ...referenceInputs,\n  ...shortAnswerInputs,\n  ...longAnswerInputs,\n  ...numberInputs,\n  ...arrayInputs,\n}: { [string]: FormInput });\n\nexport default DEFAULT_FORM_INPUTS;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport { arrows as arrowsStyle } from './styles';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square, & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    ...arrowsStyle,\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-container:hover': { border: '1px solid green' },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .fa': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'gray',\n      '& div::before': { backgroundColor: 'lightGray' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'lightGray' },\n      '& input:focus': {\n        backgroundColor: 'lightGray',\n        border: '1px solid gray',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onChange,\n  mods,\n  className,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n  className?: string,\n}): Node {\n  const classes = useStyles();\n  const schemaData = (parse(schema): { [string]: any }) || {};\n  schemaData.type = 'object';\n  const uiSchemaData = (parse(uischema): { [string]: any }) || {};\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    allFormInputs,\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color='warning'\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      {(!mods || mods.showFormHead !== false) && (\n        <div className={classes.formHead} data-test='form-head'>\n          <div>\n            <h5 data-test='form-name-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formNameLabel === 'string'\n                ? mods.labels.formNameLabel\n                : 'Form Name'}\n            </h5>\n            <Input\n              value={schemaData.title || ''}\n              placeholder='Title'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    title: ev.target.value,\n                  }),\n                  uischema,\n                );\n              }}\n              className='form-title'\n            />\n          </div>\n          <div>\n            <h5 data-test='form-description-label'>\n              {mods &&\n              mods.labels &&\n              typeof mods.labels.formDescriptionLabel === 'string'\n                ? mods.labels.formDescriptionLabel\n                : 'Form Description'}\n            </h5>\n            <Input\n              value={schemaData.description || ''}\n              placeholder='Description'\n              type='text'\n              onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                onChange(\n                  stringify({\n                    ...schemaData,\n                    description: ev.target.value,\n                  }),\n                  uischema,\n                )\n              }\n              className='form-description'\n            />\n          </div>\n        </div>\n      )}\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(stringify(newSchema), stringify(newUiSchema)),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n          className='form-body'\n        >\n          <Droppable droppableId='droppable'>\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(stringify(newSchema), stringify(newUiSchema)),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  allFormInputs,\n                  mods,\n                  categoryHash,\n                  Card,\n                  Section,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                mods: mods,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(stringify(newSchema), stringify(newUiSchema)),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            schemaData.properties &&\n            Object.keys(schemaData.properties).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Card from './Card';\nimport Section from './Section';\nimport Add from './Add';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: {\n  definitionSchema: { [string]: any },\n  definitionUiSchema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}): Node {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates,\n  );\n  const allFormInputs = Object.assign(\n    {},\n    DEFAULT_FORM_INPUTS,\n    (mods && mods.customFormInputs) || {},\n  );\n  const componentArr = generateElementComponentsFromSchemas({\n    schemaData: { properties: definitionSchema },\n    uiSchemaData: definitionUiSchema,\n    onChange: (newDefinitions, newDefinitionUis) => {\n      const oldUi = newDefinitionUis;\n      const newUi = {};\n\n      Object.keys(oldUi).forEach((definedUi) => {\n        if (!['definitions', 'ui:order'].includes(definedUi))\n          newUi[definedUi] = oldUi[definedUi];\n      });\n      onChange(newDefinitions.properties, newUi);\n    },\n    path: 'definitions',\n    definitionData: definitionSchema,\n    definitionUi: definitionUiSchema,\n    cardOpenArray,\n    setCardOpenArray,\n    allFormInputs,\n    mods,\n    categoryHash,\n    Card,\n    Section,\n  }).map((element: any) => (\n    <div\n      key={typeof element.key === 'string' ? element.key : ''}\n      className='form_gallery_container'\n    >\n      {element}\n    </div>\n  ));\n\n  return (\n    <div className='form_gallery'>\n      {componentArr}\n      {componentArr.length === 0 && <h5>No components in \"definitions\"</h5>}\n      <div className='form_footer'>\n        <Add\n          tooltipDescription={((mods || {}).tooltipDescriptions || {}).add}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                mods: mods,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            !!definitionSchema && Object.keys(definitionSchema).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n  excludeKeys,\n} from './utils';\nimport { arrows as arrowsStyle } from './styles';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { Node } from 'react';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    flexDirection: 'column',\n    'text-align': 'center',\n    '& .fa': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle, & .fa-circle-question': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    ...arrowsStyle,\n    '& .form_footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      '& .fa': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n    },\n    '& .fa-plus-square & .fa-square-plus': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil-alt, & .fa-pencil': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid green' },\n    '& .card-dependent': { border: '1px dashed gray' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid green' },\n  },\n});\n\nexport default function PredefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  mods,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  mods?: Mods,\n}): Node {\n  const classes = useStyles();\n  const schemaData = React.useMemo(\n    () => (parse(schema): { [string]: any }) || {},\n    [schema],\n  );\n  const uiSchemaData = React.useMemo(\n    () => (parse(uischema): { [string]: any }) || {},\n    [uischema],\n  );\n  const allFormInputs = excludeKeys(\n    Object.assign(\n      {},\n      DEFAULT_FORM_INPUTS,\n      (mods && mods.customFormInputs) || {},\n    ),\n    mods && mods.deactivatedFormInputs,\n  );\n  const categoryHash = generateCategoryHash(allFormInputs);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name, schemaObject) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n      if (!Object.keys(uiSchemaData.definitions).length) {\n        uiSchemaData.definitions = undefined;\n      }\n      onChange(stringify(schemaData), stringify(uiSchemaData));\n    }\n  }, [uiSchemaData, schemaData, onChange]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions || {}}\n        definitionUiSchema={uiSchemaData.definitions || {}}\n        onChange={(\n          newDefinitions: { [string]: any },\n          newDefinitionsUi: { [string]: any },\n        ) => {\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            { ...schemaData, definitions: newDefinitions },\n            { ...uiSchemaData, definitions: newDefinitionsUi },\n            (newSchema, newUiSchema) =>\n              onChange(stringify(newSchema), stringify(newUiSchema)),\n            categoryHash,\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n"],"names":["useStyles","createUseStyles","checkbox","display","marginRight","FBCheckbox","onChangeValue","value","isChecked","label","use","disabled","id","dataTest","labelClassName","classjss","classes","classnames","potentialCheckboxId","checkboxId","React","undefined","FontAwesomeIcon","className","otherProps","props","Object","assign","FortAwesomeFontAwesomeIcon","collapseElement","cursor","marginTop","padding","fontSize","marginLeft","Collapse","disableToggle","toggleCollapse","isOpen","faCaretDown","faCaretRight","title","RSCollapse","children","FBRadioButton","checked","name","onChange","required","autoFocus","useState","Math","floor","random","radio","marginBottom","height","verticalAlign","FBRadioGroup","options","defaultValue","horizontal","toString","map","option","index","typeMap","alert","faAsterisk","help","faQuestionCircle","toolTip","color","Example","text","type","textDecoration","UncontrolledTooltip","parse","JSON","stringify","obj","defaultDataProps","category","allFormInputs","defaultDataSchema","defaultUiProps","defaultUiSchema","categoryType","getCardBody","cardBody","categoryToNameMap","categoryNameMap","keys","forEach","inputName","displayName","updateElementNames","elementArray","elementNames","elem","newElem","neighborNames","generateCategoryHash","categoryHash","categoryName","formInput","matchIf","match","types","hash","widget","field","format","$ref","Error","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","console","error","supportedPropertyParameters","Set","supportedUiParameters","checkObjectForUnsupportedFeatures","schema","uischema","supportedWidgets","supportedFields","supportedOptions","unsupportedFeatures","property","has","push","uiProperty","propDefined","properties","includes","dependencies","dependencyKey","parameter","oneOf","grouping","entries","element","key","uiProp","uiOption","checkForUnsupportedFeatures","widgets","fields","inputType","possibleOptions","Array","isArray","generateDependencyElement","dataProps","uiProperties","requiredNames","definitionData","definitionUi","useDefinitionDetails","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","parameters","elementDict","startsWith","parent","group","possibilityIndex","possibility","dependents","requiredValues","length","dependent","cardPropList","remainder","remCard","countElementsFromSchema","schemaData","elementCount","generateSchemaElementFromElement","description","returnElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","add","elementName","childrenComponents","child","filter","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","substring","getCardParameterInputComponentForType","modalBody","updateSchemas","newUiSchema","DEFAULT_INPUT_NAME","getIdFromElementsBlock","elements","names","defaultNameLength","max","Number","parseInt","isNaN","addCardObj","mods","newElementObjArr","i","getNewElementDefaultDataOptions","newElementDefaultUiSchema","splice","addSectionObj","generateElementComponentsFromSchemas","uiSchemaData","hideKey","path","cardOpenArray","setCardOpenArray","Card","Section","elementPropArr","elementList","elementProp","expanded","TypeSpecificParameters","newCardObj","newDataProps","newUiProps","propName","oldElement","slice","tempBlock","choice","newState","newRef","oldSection","newName","newDependents","onDragEnd","result","details","src","source","dest","destination","propagateElementChange","updatedElementArr","childrenElements","updatedChildren","propagateDefinitionChanges","bodyElements","updatedBodyElements","subtractArray","array1","array2","reduce","acc","curr","v","excludeKeys","keysHash","newElementDefaultDataOptions","getRandomId","chars","numberOfChars","randomIdLength","from","join","DependencyWarning","elementId","definedVals","val","undefinedVals","Tooltip","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","faTimes","Select","cardEnumOption","width","flexDirection","justifyContent","CardEnumOptions","initialValues","showNames","possibleValues","Input","ev","newVal","target","parseFloat","isInteger","faPlus","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","combination","string","oldCombo","number","array","object","newCase","propArr","newEnum","DependencyPossibility","onDelete","newPossibility","dependencyField","textAlign","border","borderRadius","margin","checkIfValueBasedDependency","valueBased","DependencyField","selection","cardModal","paddingTop","paddingBottom","CardModal","componentProps","onClose","componentPropsState","setComponentProps","useEffect","Modal","ModalHeader","ModalBody","ModalFooter","Button","GeneralParameterInputs","CardBody","CardGeneralParameterInputs","showObjectNameInput","keyState","setKeyState","keyError","setKeyError","titleState","setTitleState","descriptionState","setDescriptionState","categoryMap","fetchLabel","labelName","defaultLabel","labels","objectNameLabel","displayNameLabel","descriptionLabel","inputTypeLabel","availableInputTypes","definitionsInSchema","inputKeys","deactivatedFormInputs","sort","a","b","localeCompare","tooltipDescriptions","cardObjectName","FormGroup","FormFeedback","cardDisplayName","cardDescription","cardInputType","newCategory","newProps","firstDefinition","addDetails","borderBottom","Add","addElem","hidden","tooltipDescription","popoverOpen","setPopoverOpen","createChoice","setCreateChoice","faPlusSquare","Popover","PopoverHeader","PopoverBody","cardEntries","backgroundColor","fontWeight","cardInteractions","onMoveUp","onMoveDown","cardOpen","setCardOpen","modalOpen","setModalOpen","faArrowUp","faArrowDown","faPencilAlt","faTrash","newComponentProps","CardDefaultParameterInputs","getInputCardBodyComponent","InputCardBodyComponent","Checkbox","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","defaultInputs","dateTime","date","time","dropdown","sectionContainer","borderTop","onNameChange","onRequireToggle","onDependentsChange","reference","elementNum","defaultCollapseStates","keyName","setKeyName","cardSectionObjectName","cardSectionDisplayName","cardSectionDescription","Alert","message","DragDropContext","Droppable","providedDroppable","innerRef","droppableProps","Draggable","providedDraggable","draggableProps","dragHandleProps","arrows","PlaceholderInput","formatDictionary","email","hostname","uri","regex","formatTypeDictionary","url","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","pattern","ShortAnswerField","Password","shortAnswerInput","shortAnswer","CardLongAnswerParameterInputs","LongAnswer","longAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","numberInputs","integer","CardArrayParameterInputs","minItems","maxItems","getInnerCardComponent","defaultFormInputs","InnerCard","customFormInputs","items","item","newArr","_Card","shortAnswerInputs","longAnswerInputs","ArrayInputs","CardReferenceParameterInputs","RefChoice","currentValueLabel","referenceInputs","ref","DEFAULT_FORM_INPUTS","arrayInputs","formBuilder","arrowsStyle","formHead","formBody","maxHeight","overflowY","formFooter","FormBuilder","showFormHead","formNameLabel","formDescriptionLabel","CardGallery","definitionSchema","definitionUiSchema","componentArr","newDefinitions","newDefinitionUis","oldUi","newUi","definedUi","definedUiSchemaKey","preDefinedGallery","PredefinedGallery","useMemo","log","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,WAAS,GAAGC,wBAAe,CAAC;AAChCC,EAAAA,QAAQ,EAAE;AACR,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,cAAA;KACV;AACD,IAAA,SAAS,EAAE;AACTC,MAAAA,WAAW,EAAE,KAAA;AACf,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAca,SAASC,UAAU,CAUlB,IAAA,EAAA;EAAA,IATdC,aAAa,QAAbA,aAAa;AAAA,IAAA,UAAA,GAAA,IAAA,CACbC,KAAK;AAALA,IAAAA,KAAK,2BAAG,EAAE,GAAA,UAAA;AAAA,IAAA,cAAA,GAAA,IAAA,CACVC,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AAAA,IAAA,UAAA,GAAA,IAAA,CACjBC,KAAK;AAALA,IAAAA,KAAK,2BAAG,EAAE,GAAA,UAAA;AAAA,IAAA,QAAA,GAAA,IAAA,CACVC,GAAG;AAAHA,IAAAA,GAAG,yBAAG,QAAQ,GAAA,QAAA;AAAA,IAAA,aAAA,GAAA,IAAA,CACdC,QAAQ;AAARA,IAAAA,QAAQ,8BAAG,KAAK,GAAA,aAAA;AAAA,IAAA,OAAA,GAAA,IAAA,CAChBC,EAAE;AAAFA,IAAAA,EAAE,wBAAG,EAAE,GAAA,OAAA;AAAA,IAAA,aAAA,GAAA,IAAA,CACPC,QAAQ;AAARA,IAAAA,QAAQ,8BAAG,EAAE,GAAA,aAAA;AAAA,IAAA,mBAAA,GAAA,IAAA,CACbC,cAAc;AAAdA,IAAAA,cAAc,oCAAG,EAAE,GAAA,mBAAA,CAAA;EAEnB,IAAMC,QAAQ,GAAGf,WAAS,EAAE,CAAA;AAC5B,EAAA,IAAMgB,OAAO,GAAGC,8BAAU,CAAC,aAAa,EAAE;AACxC,IAAA,eAAe,EAAE,CAACN,QAAQ,IAAID,GAAG,KAAK,MAAM;AAC5C,IAAA,iBAAiB,EAAE,CAACC,QAAQ,IAAID,GAAG,KAAK,QAAQ;IAChD,2BAA2B,EAAEC,QAAQ,IAAIH,SAAS;IAClD,6BAA6B,EAAEG,QAAQ,IAAI,CAACH,SAAAA;AAC9C,GAAC,CAAC,CAAA;EACF,IAAMU,mBAAmB,GAAGN,EAAE,KAAK,EAAE,GAAGA,EAAE,GAAGH,KAAK,CAAA;EAClD,IAAMU,UAAU,GAAGD,mBAAmB,KAAK,EAAE,GAAGA,mBAAmB,GAAG,IAAI,CAAA;EAC1E,oBACEE,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,WAAA,EAAU,UAAU;AAAC,IAAA,SAAS,EAAKJ,OAAO,GAAID,GAAAA,GAAAA,QAAQ,CAACb,QAAAA;GAC1D,eAAAkB,yBAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,IAAI,EAAC,UAAU;AACf,IAAA,EAAE,EAAED,UAAW;IACf,WAAWN,EAAAA,QAAQ,IAAIQ,SAAU;AACjC,IAAA,QAAQ,EAAEV,QAAQ,GAAG,YAAM,EAAE,GAAGL,aAAc;AAC9C,IAAA,KAAK,EAAEC,KAAM;AACb,IAAA,QAAQ,EAAEI,QAAS;AACnB,IAAA,OAAO,EAAEH,SAAAA;AAAU,GAAA,CACnB,eACFY,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,kBAAA;AAAkB,GAAA,EAC9BX,KAAK,iBACJW,yBAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,OAAO,EAAED,UAAW;IAAC,SAAS,EAAEL,cAAc,IAAIO,SAAAA;GACtDZ,EAAAA,KAAK,CAET,CACG,CACF,CAAA;AAEV;;;AC/De,SAASa,eAAe,CAM9B,IAAA,EAAA;EAAA,IALPC,SAAS,QAATA,SAAS;IACNC,UAAU,GAAA,6BAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AAKb,EAAA,IAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CACzB;AAAEJ,IAAAA,SAAS,EAAEN,8BAAU,CAAC,CAACM,SAAS,EAAE,IAAI,CAAC,CAAA;GAAG,EAC5CC,UAAU,CACX,CAAA;AACD,EAAA,oBAAOJ,yBAAC,CAAA,aAAA,CAAAQ,gCAA0B,EAAKH,KAAK,CAAI,CAAA;AAClD;;ACTA,IAAMzB,WAAS,GAAGC,wBAAe,CAAC;AAChC4B,EAAAA,eAAe,EAAE;AACf,IAAA,aAAa,EAAE;AAAE,MAAA,kBAAkB,EAAE;AAAEC,QAAAA,MAAM,EAAE,SAAA;AAAU,OAAA;KAAG;AAC5D,IAAA,MAAM,EAAE;AAAEC,MAAAA,SAAS,EAAE,KAAK;AAAEC,MAAAA,OAAO,EAAE,qBAAA;KAAuB;AAC5D,IAAA,oBAAoB,EAAE;AACpBC,MAAAA,QAAQ,EAAE,QAAQ;AAClBH,MAAAA,MAAM,EAAE,SAAS;AACjBI,MAAAA,UAAU,EAAE,MAAM;AAClB,MAAA,mBAAmB,EAAE;AACnB9B,QAAAA,WAAW,EAAE,KAAA;AACf,OAAA;AACF,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAgBa,SAAS+B,QAAQ,CAACV,KAAY,EAAQ;AACnD,EAAA,IAAMT,OAAO,GAAGC,8BAAU,CAAA,mBAAA,IACJQ,KAAK,CAACF,SAAS,IAAI,EAAE,CAAIvB,GAAAA,GAAAA,GAAAA,WAAS,EAAE,CAAC6B,eAAe,EACxE;IACElB,QAAQ,EAAEc,KAAK,CAACW,aAAAA;AAClB,GAAC,CACF,CAAA;EAED,oBACEhB,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEJ,OAAAA;GACd,eAAAI,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,QAAA;GACb,eAAAA,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC,iBAAA;AAAiB,GAAA,eAC/BA,wCAAC,eAAe,EAAA;AACd,IAAA,OAAO,EAAE,CAACK,KAAK,CAACW,aAAa,GAAGX,KAAK,CAACY,cAAc,GAAG,YAAM,EAAG;AAChE,IAAA,IAAI,EAAEZ,KAAK,CAACa,MAAM,GAAGC,6BAAW,GAAGC,8BAAAA;GACnC,CAAA,CACG,eACPpB,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAKK,KAAK,CAACgB,KAAK,CAAM,CAClB,eACNrB,yBAAA,CAAA,aAAA,CAACsB,mBAAU,EAAA;IAAC,MAAM,EAAEjB,KAAK,CAACa,MAAAA;AAAO,GAAA,eAC/BlB,qDAAMK,KAAK,CAACkB,QAAQ,CAAO,CAChB,CACT,CAAA;AAEV;;AC9Ce,SAASC,aAAa,CAACnB,KAAY,EAAQ;AACxD,EAAA,IACEhB,KAAK,GAQHgB,KAAK,CARPhB,KAAK;IACLF,KAAK,GAOHkB,KAAK,CAPPlB,KAAK;IACLsC,OAAO,GAMLpB,KAAK,CANPoB,OAAO;IACPC,IAAI,GAKFrB,KAAK,CALPqB,IAAI;IACJC,SAAQ,GAINtB,KAAK,CAJPsB,QAAQ;IACRC,QAAQ,GAGNvB,KAAK,CAHPuB,QAAQ;IACRrC,QAAQ,GAENc,KAAK,CAFPd,QAAQ;IACRsC,SAAS,GACPxB,KAAK,CADPwB,SAAS,CAAA;AAEX,EAAA,IAAA,SAAA,GAAaC,cAAQ,CAAA,QAAA,GAAUC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC,CAAG;IAA9DzC,EAAE,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AACT,EAAA,IAAMI,OAAO,GAAGC,8BAAU,CAAC,iBAAiB,EAAE;AAAEN,IAAAA,QAAQ,EAARA,QAAAA;AAAS,GAAC,CAAC,CAAA;EAC3D,oBACES,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEJ,OAAQ;AAAC,IAAA,GAAG,EAAET,KAAAA;GAC5B,eAAAa,yBAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,EAAE,EAAER,EAAG;AACP,IAAA,IAAI,EAAC,OAAO;AACZ,IAAA,IAAI,EAAEkC,IAAK;AACX,IAAA,KAAK,EAAEvC,KAAM;AACb,IAAA,OAAO,EAAEsC,OAAQ;AACjB,IAAA,QAAQ,EAAEG,QAAS;AACnB,IAAA,QAAQ,EAAErC,QAAS;AACnB,IAAA,SAAS,EAAEsC,SAAU;AACrB,IAAA,QAAQ,EAAE,SAAA,QAAA,GAAA;MAAA,OAAMF,SAAQ,CAACxC,KAAK,CAAC,CAAA;AAAA,KAAA;AAAC,GAAA,CAChC,eACFa,yBAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,OAAO,EAAER,EAAAA;GAAKH,EAAAA,KAAK,CAAS,CAC/B,CAAA;AAEV;;ACtCA,IAAMT,WAAS,GAAGC,wBAAe,CAAC;AAChCqD,EAAAA,KAAK,EAAE;AACL,IAAA,oBAAoB,EAAE;AACpBnD,MAAAA,OAAO,EAAE,OAAO;AAChB,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,WAAW,EAAE,KAAK;AAClBmD,QAAAA,YAAY,EAAE,CAAC;AACfC,QAAAA,MAAM,EAAE,KAAK;AACbC,QAAAA,aAAa,EAAE,QAAA;OAChB;AACD,MAAA,+BAA+B,EAAE;AAC/B1B,QAAAA,SAAS,EAAE,CAAC;AACZwB,QAAAA,YAAY,EAAE,CAAC;AACfE,QAAAA,aAAa,EAAE,QAAA;AACjB,OAAA;AACF,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAaa,SAASC,YAAY,CAACjC,KAAY,EAAQ;AACvD,EAAA,IACEkC,OAAO,GAOLlC,KAAK,CAPPkC,OAAO;IACPC,YAAY,GAMVnC,KAAK,CANPmC,YAAY;IACZb,QAAQ,GAKNtB,KAAK,CALPsB,QAAQ;IACRc,UAAU,GAIRpC,KAAK,CAJPoC,UAAU;IACVjD,EAAE,GAGAa,KAAK,CAHPb,EAAE;IACFqC,SAAS,GAEPxB,KAAK,CAFPwB,SAAS;IACTtC,QAAQ,GACNc,KAAK,CADPd,QAAQ,CAAA;EAEV,IAAMmC,IAAI,GAAGK,IAAI,CAACE,MAAM,EAAE,CAACS,QAAQ,EAAE,CAAA;EACrC,IAAM/C,QAAQ,GAAGf,WAAS,EAAE,CAAA;AAC5B,EAAA,IAAMgB,OAAO,GAAGC,8BAAU,CAAC,gBAAgB,EAAE;AAC3C4C,IAAAA,UAAU,EAAVA,UAAAA;AACF,GAAC,CAAC,CAAA;EACF,oBACEzC,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,EAAE,EAAER,EAAG;AAAC,IAAA,SAAS,EAAKI,OAAO,GAAID,GAAAA,GAAAA,QAAQ,CAACuC,KAAAA;AAAQ,GAAA,EACpDK,OAAO,CAACI,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK,EAAA;AAAA,IAAA,oBACzB7C,wCAAC,aAAa,EAAA;MACZ,KAAK,EAAE4C,MAAM,CAACzD,KAAM;MACpB,KAAK,EAAEyD,MAAM,CAACvD,KAAM;AACpB,MAAA,EAAE,EAAEG,EAAG;AACP,MAAA,IAAI,EAAEkC,IAAK;MACX,GAAG,EAAEkB,MAAM,CAACzD,KAAM;AAClB,MAAA,OAAO,EAAEyD,MAAM,CAACzD,KAAK,KAAKqD,YAAa;AACvC,MAAA,SAAS,EAAEX,SAAS,IAAIgB,KAAK,KAAK,CAAE;AACpC,MAAA,QAAQ,EAAElB,QAAS;AACnB,MAAA,QAAQ,EAAEpC,QAAAA;KACV,CAAA,CAAA;AAAA,GACH,CAAC,CACE,CAAA;AAEV;;ACzDA,IAAMuD,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAEC,4BAAU;AACjBC,EAAAA,IAAI,EAAEC,kCAAAA;AACR,CAAC,CAAA;AAED,IAAMtE,WAAS,GAAGC,wBAAe,CAAC;AAChCsE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,OAAO;AACd,IAAA,kBAAkB,EAAE,OAAA;AACtB,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAASC,OAAO,CAQtB,IAAA,EAAA;EAAA,IAPPC,IAAI,QAAJA,IAAI;AACJC,IAAAA,IAAI,QAAJA,IAAI;AACJ/D,IAAAA,EAAE,QAAFA,EAAE,CAAA;EAMF,IAAMI,OAAO,GAAGhB,WAAS,EAAE,CAAA;AAE3B,EAAA,oBACEoB,yBAAC,CAAA,aAAA,CAAAA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,KAAK,EAAE;AAAEwD,MAAAA,cAAc,EAAE,WAAW;AAAEJ,MAAAA,KAAK,EAAE,MAAA;KAAS;AACtD,IAAA,IAAI,EAAC,GAAG;AACR,IAAA,EAAE,EAAE5D,EAAAA;AAAG,GAAA,eAEPQ,wCAAC,eAAe,EAAA;IAAC,IAAI,EAAE8C,OAAO,CAACS,IAAI,CAAA;GAAK,CAAA,CACnC,eACPvD,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,IAAA,QAAQ,EAAE,KAAM;IAChB,SAAS,EAAE7D,OAAO,CAACuD,OAAQ;AAC3B,IAAA,SAAS,EAAC,KAAK;AACf,IAAA,MAAM,EAAE3D,EAAAA;GAEP8D,EAAAA,IAAI,CACe,CACP,CAAA;AAErB;;ACzCA;AACO,SAASI,KAAK,CAACJ,IAAY,EAAO;AACvC,EAAA,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE,CAAA;AACpB,EAAA,OAAOK,IAAI,CAACD,KAAK,CAACJ,IAAI,CAAC,CAAA;AACzB,CAAA;;AAEA;AACO,SAASM,SAAS,CAACC,GAAQ,EAAU;AAC1C,EAAA,IAAI,CAACA,GAAG,EAAE,OAAO,IAAI,CAAA;AACrB,EAAA,OAAOF,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,CAAA;AAC5B,CAAA;AAEO,SAASC,gBAAgB,CAC9BC,QAAgB,EAChBC,aAAsC,EACnB;AACnB,EAAA,OAAOA,aAAa,CAACD,QAAQ,CAAC,CAACE,iBAAiB,CAAA;AAClD,CAAA;AAEO,SAASC,cAAc,CAC5BH,QAAgB,EAChBC,aAAsC,EACnB;AACnB,EAAA,OAAOA,aAAa,CAACD,QAAQ,CAAC,CAACI,eAAe,CAAA;AAChD,CAAA;AACO,SAASC,YAAY,CAC1BL,QAAgB,EAChBC,aAAsC,EAC5B;AACV,EAAA,OAAOA,aAAa,CAACD,QAAQ,CAAC,CAACR,IAAI,CAAA;AACrC,CAAA;AACO,SAASc,WAAW,CACzBN,QAAgB,EAChBC,aAAsC,EAC5B;EACV,OACGA,aAAa,CAACD,QAAQ,CAAC,IAAIC,aAAa,CAACD,QAAQ,CAAC,CAACO,QAAQ,IAC3D,YAAA;AAAA,IAAA,OAAM,IAAI,CAAA;GAAC,CAAA;AAEhB,CAAA;AACO,SAASC,iBAAiB,CAC/BR,QAAgB,EAChBC,aAAsC,EAChB;EACtB,IAAMQ,eAAe,GAAG,EAAE,CAAA;EAC1BlE,MAAM,CAACmE,IAAI,CAACT,aAAa,CAAC,CAACU,OAAO,CAAC,UAACC,SAAS,EAAK;IAChDH,eAAe,CAACG,SAAS,CAAC,GAAGX,aAAa,CAACW,SAAS,CAAC,CAACC,WAAW,CAAA;AACnE,GAAC,CAAC,CAAA;AACF,EAAA,OAAOJ,eAAe,CAAA;AACxB,CAAA;AAEA,SAASK,kBAAkB,CAACC,YAAiC,EAAE;AAC7D,EAAA,IAAMC,YAAY,GAAGD,YAAY,CAACnC,GAAG,CAAC,UAACqC,IAAI,EAAA;IAAA,OAAKA,IAAI,CAACtD,IAAI,CAAA;GAAC,CAAA,CAAA;AAC1D,EAAA,OAAOoD,YAAY,CAACnC,GAAG,CAAC,UAACqC,IAAI,EAAK;IAChC,IAAMC,OAAO,GAAGD,IAAI,CAAA;IACpBC,OAAO,CAACC,aAAa,GAAGH,YAAY,CAAA;AACpC,IAAA,OAAOE,OAAO,CAAA;AAChB,GAAC,CAAC,CAAA;AACJ,CAAA;AAEO,SAASE,oBAAoB,CAACnB,aAAsC,EAEzE;EACA,IAAMoB,YAAY,GAAG,EAAE,CAAA;EACvB9E,MAAM,CAACmE,IAAI,CAACT,aAAa,CAAC,CAACU,OAAO,CAAC,UAACW,YAAY,EAAK;AACnD,IAAA,IAAMC,SAAS,GAAGtB,aAAa,CAACqB,YAAY,CAAC,CAAA;AAC7CC,IAAAA,SAAS,CAACC,OAAO,CAACb,OAAO,CAAC,UAACc,KAAK,EAAK;AACnCA,MAAAA,KAAK,CAACC,KAAK,CAACf,OAAO,CAAC,UAACnB,IAAI,EAAK;AAC5B,QAAA,IAAMmC,IAAI,GAAWnC,OAAAA,IAAAA,IAAI,KAAK,MAAM,GAAG,EAAE,GAAGA,IAAI,kBAC9CiC,KAAK,CAACG,MAAM,IAAI,EAAE,iBACVH,KAAK,CAACI,KAAK,IAAI,EAAE,CAAWJ,GAAAA,UAAAA,IAAAA,KAAK,CAACK,MAAM,IAAI,EAAE,CACtDL,GAAAA,QAAAA,IAAAA,KAAK,CAACM,IAAI,GAAG,MAAM,GAAG,OAAO,gBACtBN,KAAK,CAAA,MAAA,CAAK,GAAG,MAAM,GAAG,OAAO,CAAE,CAAA;AACxC,QAAA,IAAIJ,YAAY,CAACM,IAAI,CAAC,EAAE;AACtB,UAAA,MAAM,IAAIK,KAAK,CAAoBL,kBAAAA,GAAAA,IAAI,CAAG,CAAA;AAC5C,SAAA;AACAN,QAAAA,YAAY,CAACM,IAAI,CAAC,GAAGL,YAAY,CAAA;AACnC,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAC,CAAC,CAAA;AACF,EAAA,OAAOD,YAAY,CAAA;AACrB,CAAA;;AAEA;AACA;AACO,SAASY,eAAe,CAC7BC,SAAoB,EACpBb,YAAkC,EAC1B;EACR,IAAMc,WAAW,GAAWD,OAAAA,IAAAA,SAAS,CAACE,WAAW,CAAC5C,IAAI,IAAI,EAAE,CAAA,GAAA,UAAA,IAC1D0C,SAAS,CAACG,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAA,GAAA,SAAA,IAC9BH,SAAS,CAACG,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,kBAC7CH,SAAS,CAACE,WAAW,CAACN,MAAM,IAAI,EAAE,CAC3BI,GAAAA,QAAAA,IAAAA,SAAS,CAACH,IAAI,KAAK7F,SAAS,GAAG,MAAM,GAAG,OAAO,CAAA,GAAA,QAAA,IACtDgG,SAAS,CAACE,WAAW,CAAA,MAAA,CAAK,GAAG,MAAM,GAAG,OAAO,CAC7C,CAAA;AACF,EAAA,IAAMpC,QAAQ,GAAGqB,YAAY,CAACc,WAAW,CAAC,CAAA;EAC1C,IAAI,CAACnC,QAAQ,EAAE;AACb,IAAA,IAAIkC,SAAS,CAACH,IAAI,EAAE,OAAO,KAAK,CAAA;AAChC;AACAO,IAAAA,OAAO,CAACC,KAAK,CAAwBJ,sBAAAA,GAAAA,WAAW,GAAa,YAAA,CAAA,CAAA;AAC7D,IAAA,OAAO,aAAa,CAAA;AACtB,GAAA;AACA,EAAA,OAAOnC,QAAQ,CAAA;AACjB,CAAA;;AAEA;AACA,IAAMwC,2BAA2B,GAAG,IAAIC,GAAG,CAAC,CAC1C,OAAO,EACP,aAAa,EACb,MAAM,EACN,WAAW,EACX,WAAW,EACX,YAAY,EACZ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,kBAAkB,EAClB,kBAAkB,EAClB,MAAM,EACN,SAAS,EACT,SAAS,EACT,UAAU,EACV,YAAY,EACZ,OAAO,EACP,aAAa,EACb,MAAM,EACN,UAAU,EACV,UAAU,EACV,WAAW,EACX,cAAc,EACd,KAAK,EACL,SAAS,EACT,MAAM,EACN,sBAAsB,CACvB,CAAC,CAAA;AAEF,IAAMC,qBAAqB,GAAG,IAAID,GAAG,CAAC,CACpC,UAAU,EACV,WAAW,EACX,cAAc,EACd,iBAAiB,EACjB,YAAY,EACZ,UAAU,EACV,gBAAgB,EAChB,WAAW,EACX,OAAO,EACP,aAAa,CACd,CAAC,CAAA;;AAEF;AACA,SAASE,iCAAiC,CACxCC,MAAyB,EACzBC,QAA2B,EAC3BC,gBAA6B,EAC7BC,eAA4B,EAC5BC,gBAA6B,EAC7B;AACA;EACA,IAAMC,mBAAmB,GAAG,EAAE,CAAA;;AAE9B;AACA,EAAA,IAAIL,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EACtCrG,MAAM,CAACmE,IAAI,CAACkC,MAAM,CAAC,CAACjC,OAAO,CAAC,UAACuC,QAAQ,EAAK;AACxC,IAAA,IACE,CAACV,2BAA2B,CAACW,GAAG,CAACD,QAAQ,CAAC,IAC1CA,QAAQ,KAAK,YAAY,EAEzBD,mBAAmB,CAACG,IAAI,CAAA,gCAAA,GAAkCF,QAAQ,CAAG,CAAA;AACzE,GAAC,CAAC,CAAA;AAEJ,EAAA,IAAIL,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAC1CtG,MAAM,CAACmE,IAAI,CAACmC,QAAQ,CAAC,CAAClC,OAAO,CAAC,UAAC0C,UAAU,EAAK;IAC5C,IAAIC,WAAW,GAAG,KAAK,CAAA;AACvB;IACA,IACEV,MAAM,CAACW,UAAU,IACjBhH,MAAM,CAACmE,IAAI,CAACkC,MAAM,CAACW,UAAU,CAAC,CAACC,QAAQ,CAACH,UAAU,CAAC,EAEnDC,WAAW,GAAG,IAAI,CAAA;IACpB,IAAIV,MAAM,CAACa,YAAY,EAAE;AACvBlH,MAAAA,MAAM,CAACmE,IAAI,CAACkC,MAAM,CAACa,YAAY,CAAC,CAAC9C,OAAO,CAAC,UAAC+C,aAAa,EAAK;AAC1DnH,QAAAA,MAAM,CAACmE,IAAI,CAACkC,MAAM,CAACa,YAAY,CAACC,aAAa,CAAC,CAAC,CAAC/C,OAAO,CACrD,UAACgD,SAAS,EAAK;UACb,IAAIA,SAAS,KAAK,OAAO,EAAE;AACzBf,YAAAA,MAAM,CAACa,YAAY,CAACC,aAAa,CAAC,CAACE,KAAK,CAACjD,OAAO,CAAC,UAACkD,QAAQ,EAAK;cAC7D,IAAIA,QAAQ,CAACN,UAAU,EACrB,IAAIhH,MAAM,CAACmE,IAAI,CAACmD,QAAQ,CAACN,UAAU,CAAC,CAACC,QAAQ,CAACH,UAAU,CAAC,EACvDC,WAAW,GAAG,IAAI,CAAA;AACxB,aAAC,CAAC,CAAA;AACJ,WAAC,MAAM,IAAIK,SAAS,KAAK,YAAY,EAAE;YACrC,IACEpH,MAAM,CAACmE,IAAI,CACTkC,MAAM,CAACa,YAAY,CAACC,aAAa,CAAC,CAACH,UAAU,CAC9C,CAACC,QAAQ,CAACH,UAAU,CAAC,EAEtBC,WAAW,GAAG,IAAI,CAAA;AACtB,WAAA;AACF,SAAC,CACF,CAAA;AACH,OAAC,CAAC,CAAA;AACJ,KAAA;AAEA,IAAA,IAAI,CAACA,WAAW,IAAI,CAACZ,qBAAqB,CAACS,GAAG,CAACE,UAAU,CAAC,EACxDJ,mBAAmB,CAACG,IAAI,CAAA,mCAAA,GACcC,UAAU,CAC/C,CAAA;AACL,GAAC,CAAC,CAAA;;AAEJ;AACA,EAAA,IAAIT,MAAM,CAACW,UAAU,EACnBhH,MAAM,CAACuH,OAAO,CAAClB,MAAM,CAACW,UAAU,CAAC,CAAC5C,OAAO,CACvC,UAAyC,IAAA,EAAA;AAAA,IAAA,IAAvCgD,SAAS,GAAA,IAAA,CAAA,CAAA,CAAA;MAAEI,OAAO,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AAClB,IAAA,IACEA,OAAO,IACP,OAAOA,OAAO,KAAK,QAAQ,IAC3BA,OAAO,CAACvE,IAAI,IACZuE,OAAO,CAACvE,IAAI,KAAK,QAAQ,EACzB;AACA;AACA,MAAA,IACE,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACgE,QAAQ,CAC3DO,OAAO,CAACvE,IAAI,CACb,EAEDyD,mBAAmB,CAACG,IAAI,CAAA,qBAAA,GACAW,OAAO,CAACvE,IAAI,GAAA,MAAA,GAAOmE,SAAS,CACnD,CAAA;AACH;MACApH,MAAM,CAACmE,IAAI,CAACqD,OAAO,CAAC,CAACpD,OAAO,CAAC,UAACqD,GAAG,EAAK;AACpC,QAAA,IAAI,CAACxB,2BAA2B,CAACW,GAAG,CAACa,GAAG,CAAC,EACvCf,mBAAmB,CAACG,IAAI,CAAA,sBAAA,GACCY,GAAG,GAAA,MAAA,GAAOL,SAAS,CAC3C,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAC,MAAM;AACL;MACApH,MAAM,CAACmE,IAAI,CAACqD,OAAO,CAAC,CAACpD,OAAO,CAAC,UAACqD,GAAG,EAAK;AACpC,QAAA,IAAI,CAACxB,2BAA2B,CAACW,GAAG,CAACa,GAAG,CAAC,EACvCf,mBAAmB,CAACG,IAAI,CAAA,sBAAA,GACCY,GAAG,GAAA,MAAA,GAAOL,SAAS,CAC3C,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAA;;AAEA;IACA,IACEd,QAAQ,IACRA,QAAQ,CAACc,SAAS,CAAC,IACnBI,OAAO,KACN,CAACA,OAAO,CAACvE,IAAI,IAAIuE,OAAO,CAACvE,IAAI,KAAK,QAAQ,CAAC,EAC5C;AACA;AACAjD,MAAAA,MAAM,CAACmE,IAAI,CAACmC,QAAQ,CAACc,SAAS,CAAC,CAAC,CAAChD,OAAO,CAAC,UAACsD,MAAM,EAAK;AACnD,QAAA,IAAI,CAACvB,qBAAqB,CAACS,GAAG,CAACc,MAAM,CAAC,EACpChB,mBAAmB,CAACG,IAAI,CAAA,eAAA,GACNa,MAAM,GAAA,OAAA,GAAQN,SAAS,CACxC,CAAA;;AAEH;AACA,QAAA,IACEM,MAAM,KAAK,WAAW,IACtB,CAACnB,gBAAgB,CAACK,GAAG,CAACN,QAAQ,CAACc,SAAS,CAAC,CAACM,MAAM,CAAC,CAAC,EAClD;AACAhB,UAAAA,mBAAmB,CAACG,IAAI,CACRP,aAAAA,GAAAA,QAAQ,CAACc,SAAS,CAAC,CAACM,MAAM,CAAC,GAAQN,OAAAA,GAAAA,SAAS,CAC3D,CAAA;AACH,SAAA;;AAEA;AACA,QAAA,IACEM,MAAM,KAAK,UAAU,IACrB,CAAClB,eAAe,CAACI,GAAG,CAACN,QAAQ,CAACc,SAAS,CAAC,CAACM,MAAM,CAAC,CAAC,EAEjDhB,mBAAmB,CAACG,IAAI,gBACTP,QAAQ,CAACc,SAAS,CAAC,CAACM,MAAM,CAAC,GAAA,OAAA,GAAQN,SAAS,CAC1D,CAAA;;AAEH;QACA,IAAIM,MAAM,KAAK,YAAY,EACzB1H,MAAM,CAACmE,IAAI,CAACmC,QAAQ,CAACc,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC,CAAChD,OAAO,CACpD,UAACuD,QAAQ,EAAK;AACZ,UAAA,IAAI,CAAClB,gBAAgB,CAACG,GAAG,CAACe,QAAQ,CAAC,EACjCjB,mBAAmB,CAACG,IAAI,CAAA,0BAAA,GACKc,QAAQ,GAAA,OAAA,GAAQP,SAAS,CACrD,CAAA;AACL,SAAC,CACF,CAAA;AACL,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAC,CACF,CAAA;AACH,EAAA,OAAOV,mBAAmB,CAAA;AAC5B,CAAA;;AAEA;AACO,SAASkB,2BAA2B,CACzCvB,MAAyB,EACzBC,QAA2B,EAC3B5C,aAAsC,EAC5B;AACV;EACA,IAAMgD,mBAAmB,GAAG,EAAE,CAAA;EAE9B,IAAMmB,OAAO,GAAG,EAAE,CAAA;EAClB,IAAMC,MAAM,GAAG,EAAE,CAAA;EACjB,IAAM7F,OAAO,GAAG,EAAE,CAAA;EAClBjC,MAAM,CAACmE,IAAI,CAACT,aAAa,CAAC,CAACU,OAAO,CAAC,UAAC2D,SAAS,EAAK;IAChDrE,aAAa,CAACqE,SAAS,CAAC,CAAC9C,OAAO,CAACb,OAAO,CAAC,UAACc,KAAK,EAAK;MAClD,IAAIA,KAAK,CAACG,MAAM,IAAI,CAACwC,OAAO,CAACZ,QAAQ,CAAC/B,KAAK,CAACG,MAAM,CAAC,EACjDwC,OAAO,CAAChB,IAAI,CAAC3B,KAAK,CAACG,MAAM,IAAI,EAAE,CAAC,CAAC;MACnC,IAAIH,KAAK,CAACI,KAAK,IAAI,CAACwC,MAAM,CAACb,QAAQ,CAAC/B,KAAK,CAACI,KAAK,CAAC,EAC9CwC,MAAM,CAACjB,IAAI,CAAC3B,KAAK,CAACI,KAAK,IAAI,EAAE,CAAC,CAAC;AACnC,KAAC,CAAC,CAAA;;AACF,IAAA,IACE5B,aAAa,CAACqE,SAAS,CAAC,CAACC,eAAe,IACxCC,KAAK,CAACC,OAAO,CAACxE,aAAa,CAACqE,SAAS,CAAC,CAACC,eAAe,CAAC,EACvD;MACA/F,OAAO,CAAC4E,IAAI,CAAA,KAAA,CAAZ5E,OAAO,EAASyB,aAAa,CAACqE,SAAS,CAAC,CAACC,eAAe,CAAC,CAAA;AAC3D,KAAA;AACF,GAAC,CAAC,CAAA;AACF,EAAA,IAAMzB,gBAAgB,GAAG,IAAIL,GAAG,CAAC2B,OAAO,CAAC,CAAA;AACzC,EAAA,IAAMrB,eAAe,GAAG,IAAIN,GAAG,CAAC4B,MAAM,CAAC,CAAA;AACvC,EAAA,IAAMrB,gBAAgB,GAAG,IAAIP,GAAG,CAACjE,OAAO,CAAC,CAAA;;AAEzC;AACA,EAAA,IAAIoE,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACpD,IAAI,KAAK,QAAQ,EAAE;AACpEyD,IAAAA,mBAAmB,CAACG,IAAI,CAAA,KAAA,CAAxBH,mBAAmB,EACdN,iCAAiC,CAClCC,MAAM,EACNC,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,EACfC,gBAAgB,CACjB,CACF,CAAA;AACH,GAAC,MAAM;AACLC,IAAAA,mBAAmB,CAACG,IAAI,CAAC,uCAAuC,CAAC,CAAA;AACnE,GAAA;AAEA,EAAA,OAAOH,mBAAmB,CAAA;AAC5B,CAAA;;AAEA;AACA,SAASyB,yBAAyB,CAChC/G,IAAY,EACZgH,SAAc,EACdC,YAAiB,EACjBC,aAAkB,EAClBC,cAAkC,EAClCC,YAAgC,EAChC1D,YAAkC,EAClC2D,oBAA6B;AAAS,EACtC;AAAA,EAAA,IADAA,oBAA6B,KAAA,KAAA,CAAA,EAAA;AAA7BA,IAAAA,oBAA6B,GAAG,IAAI,CAAA;AAAA,GAAA;EAEpC,IAAIC,OAAO,GACNL,QAAAA,CAAAA,EAAAA,EAAAA,YAAY,CAChB,CAAA;EACD,IAAMM,UAAU,GAAG,EAAE,CAAA;AACrB,EAAA,IAAIC,cAAc,GAChBR,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAG,EAAE,CAAA;;AAE7D;AACA,EAAA,IAAIQ,cAAc,CAACpD,IAAI,KAAK7F,SAAS,IAAI4I,cAAc,EAAE;AACvD,IAAA,IAAMM,OAAO,GACX,OAAOD,cAAc,CAACpD,IAAI,KAAK,QAAQ,GACnCoD,cAAc,CAACpD,IAAI,CAACsD,KAAK,CAAC,GAAG,CAAC,GAC9B,EAAE,CAAA;IACR,IACED,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAClBA,OAAO,CAAC,CAAC,CAAC,KAAK,aAAa,IAC5BN,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,IAC1BJ,oBAAoB,KAAK,IAAI,EAC7B;MACAG,cAAc,GAAA,QAAA,CAAA,EAAA,EACTA,cAAc,EACdL,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAA;AACH,KAAA;AAEA,IAAA,IAAME,cAAc,GAAG,CAACP,YAAY,IAAI,EAAE,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;AACvDH,IAAAA,OAAO,gBACDK,cAAc,IAAI,EAAE,EACrBL,OAAO,CACX,CAAA;AACH,GAAA;EAEAC,UAAU,CAACvH,IAAI,GAAGA,IAAI,CAAA;EACtBuH,UAAU,CAACrH,QAAQ,GAAGgH,aAAa,CAACrB,QAAQ,CAAC7F,IAAI,CAAC,CAAA;AAClDuH,EAAAA,UAAU,CAACnD,IAAI,GACb,OAAOoD,cAAc,CAACpD,IAAI,KAAK,QAAQ,GAAGoD,cAAc,CAACpD,IAAI,GAAG7F,SAAS,CAAA;EAE3E,IAAIiJ,cAAc,CAAC3F,IAAI,IAAI2F,cAAc,CAAC3F,IAAI,KAAK,QAAQ,EAAE;AAC3D;IACA0F,UAAU,CAACtC,MAAM,GAAGuC,cAAc,CAAA;AAClCD,IAAAA,UAAU,CAACrC,QAAQ,GAAGoC,OAAO,IAAI,EAAE,CAAA;IACnCC,UAAU,CAACK,QAAQ,GAAG,SAAS,CAAA;AACjC,GAAC,MAAM;AACL;IACAL,UAAU,CAAC9C,WAAW,GAAG+C,cAAc,CAAA;AACvCD,IAAAA,UAAU,CAAC7C,SAAS,GAAG4C,OAAO,IAAI,EAAE,CAAA;;AAEpC;IACA,IAAMO,YAAY,GAAGjJ,MAAM,CAACmE,IAAI,CAACwE,UAAU,CAAC9C,WAAW,CAAC,CAAA;AACxD7F,IAAAA,MAAM,CAACmE,IAAI,CAACwE,UAAU,CAAC7C,SAAS,CAAC,CAAC1B,OAAO,CAAC,UAAC8E,KAAK,EAAK;AACnD,MAAA,IAAID,YAAY,CAAChC,QAAQ,CAACiC,KAAK,CAAC,EAAE;QAChCP,UAAU,CAAC7C,SAAS,CAAA,MAAA,GAAQoD,KAAK,CAAG,GAAGP,UAAU,CAAC7C,SAAS,CAACoD,KAAK,CAAC,CAAA;AACpE,OAAA;AACF,KAAC,CAAC,CAAA;IAEFP,UAAU,CAAC9C,WAAW,CAACpC,QAAQ,GAAGiC,eAAe,CAACiD,UAAU,EAAE7D,YAAY,CAAC,CAAA;IAC3E6D,UAAU,CAACK,QAAQ,GAAG,MAAM,CAAA;AAC9B,GAAA;AACA,EAAA,OAAOL,UAAU,CAAA;AACnB,CAAA;;AAEA;AACO,SAASQ,+BAA+B,CAACC,UAM/C,EAAuB;AACtB,EAAA,IAAQ/C,MAAM,GACZ+C,UAAU,CADJ/C,MAAM;IAAEC,QAAQ,GACtB8C,UAAU,CADI9C,QAAQ;IAAEiC,cAAc,GACtCa,UAAU,CADcb,cAAc;IAAEC,YAAY,GACpDY,UAAU,CAD8BZ,YAAY;IAAE1D,YAAY,GAClEsE,UAAU,CAD4CtE,YAAY,CAAA;AAGpE,EAAA,IAAI,CAACuB,MAAM,CAACW,UAAU,EAAE,OAAO,EAAE,CAAA;EAEjC,IAAMqC,WAAW,GAAG,EAAE,CAAA;EACtB,IAAMf,aAAa,GAAGjC,MAAM,CAAC/E,QAAQ,GAAG+E,MAAM,CAAC/E,QAAQ,GAAG,EAAE,CAAA;;AAE5D;EACAtB,MAAM,CAACuH,OAAO,CAAClB,MAAM,CAACW,UAAU,CAAC,CAAC5C,OAAO,CAAC,UAA0B,KAAA,EAAA;AAAA,IAAA,IAAxBgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA;MAAEI,OAAO,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;IAC5D,IAAMmB,UAAU,GAAG,EAAE,CAAA;AACrB,IAAA,IAAIC,cAAc,GAChBpB,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,GACjCA,OAAO,GAIR,EAAE,CAAA;;AAER;AACA,IAAA,IAAIoB,cAAc,CAACpD,IAAI,KAAK7F,SAAS,IAAI4I,cAAc,EAAE;MACvD,IACEK,cAAc,CAACpD,IAAI,IACnB,CAACoD,cAAc,CAACpD,IAAI,CAAC8D,UAAU,CAAC,eAAe,CAAC,EAEhD,MAAM,IAAI7D,KAAK,CACkCmD,8CAAAA,GAAAA,cAAc,CAACpD,IAAI,CACnE,CAAA;AACH,MAAA,IAAMqD,OAAO,GACXD,cAAc,CAACpD,IAAI,KAAK7F,SAAS,GAAGiJ,cAAc,CAACpD,IAAI,CAACsD,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;MACzE,IACED,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAClBA,OAAO,CAAC,CAAC,CAAC,KAAK,aAAa,IAC5BN,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAC1B;QACAD,cAAc,GAAA,QAAA,CAAA,EAAA,EACTL,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAC1BD,cAAc,CAClB,CAAA;AACH,OAAA;AAEA,MAAA,IAAMG,cAAc,GAAG,CAACP,YAAY,IAAI,EAAE,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;AACvDvC,MAAAA,QAAQ,CAACc,SAAS,CAAC,GAAA,QAAA,CAAA,EAAA,EACb2B,cAAc,IAAI,EAAE,EACrBzC,QAAQ,CAACc,SAAS,CAAC,CACvB,CAAA;AACH,KAAA;IACAuB,UAAU,CAACvH,IAAI,GAAGgG,SAAS,CAAA;IAC3BuB,UAAU,CAACrH,QAAQ,GAAGgH,aAAa,CAACrB,QAAQ,CAACG,SAAS,CAAC,CAAA;AACvDuB,IAAAA,UAAU,CAACnD,IAAI,GAAGoD,cAAc,CAACpD,IAAI,CAAA;IACrCmD,UAAU,CAAC9C,WAAW,GAAG+C,cAAc,CAAA;IAEvC,IAAIA,cAAc,CAAC3F,IAAI,IAAI2F,cAAc,CAAC3F,IAAI,KAAK,QAAQ,EAAE;AAC3D;MACA0F,UAAU,CAACtC,MAAM,GAAGuC,cAAc,CAAA;MAClCD,UAAU,CAACrC,QAAQ,GAAGA,QAAQ,CAACc,SAAS,CAAC,IAAI,EAAE,CAAA;MAC/CuB,UAAU,CAACK,QAAQ,GAAG,SAAS,CAAA;AACjC,KAAC,MAAM;AACL;MACAL,UAAU,CAAC7C,SAAS,GAAGQ,QAAQ,CAACc,SAAS,CAAC,IAAI,EAAE,CAAA;;AAEhD;MACA,IAAM6B,YAAY,GAAGjJ,MAAM,CAACmE,IAAI,CAACwE,UAAU,CAAC9C,WAAW,CAAC,CAAA;AACxD7F,MAAAA,MAAM,CAACmE,IAAI,CAACwE,UAAU,CAAC7C,SAAS,CAAC,CAAC1B,OAAO,CAAC,UAAC8E,KAAK,EAAK;AACnD,QAAA,IAAID,YAAY,CAAChC,QAAQ,CAACiC,KAAK,CAAC,EAAE;UAChCP,UAAU,CAAC7C,SAAS,CAAA,MAAA,GAAQoD,KAAK,CAAG,GAAGP,UAAU,CAAC7C,SAAS,CAACoD,KAAK,CAAC,CAAA;AACpE,SAAA;AACF,OAAC,CAAC,CAAA;MAEFP,UAAU,CAAC9C,WAAW,CAACpC,QAAQ,GAAGiC,eAAe,CAC/CiD,UAAU,EACV7D,YAAY,CACb,CAAA;MACD6D,UAAU,CAACK,QAAQ,GAAG,MAAM,CAAA;AAC9B,KAAA;AACAK,IAAAA,WAAW,CAACV,UAAU,CAACvH,IAAI,CAAC,GAAGuH,UAAU,CAAA;AAC3C,GAAC,CAAC,CAAA;AACF;EACA,IAAItC,MAAM,CAACa,YAAY,EAAE;IACvB,IAAMuB,oBAAoB,GAAG,KAAK,CAAA;AAClCzI,IAAAA,MAAM,CAACmE,IAAI,CAACkC,MAAM,CAACa,YAAY,CAAC,CAAC9C,OAAO,CAAC,UAACmF,MAAM,EAAK;AACnD,MAAA,IAAMC,KAAK,GAAGnD,MAAM,CAACa,YAAY,CAACqC,MAAM,CAAC,CAAA;MACzC,IAAIC,KAAK,CAACnC,KAAK,EAAE;QACf,IAAIoC,gBAAgB,GAAG,CAAC,CAAA;AACxBD,QAAAA,KAAK,CAACnC,KAAK,CAACjD,OAAO,CAAC,UAACsF,WAAW,EAAK;UACnC,IAAI,CAAC,CAACL,WAAW,CAACE,MAAM,CAAC,IAAI,EAAE,EAAEI,UAAU,EAAE;YAC3CN,WAAW,CAACE,MAAM,CAAC,GAAGF,WAAW,CAACE,MAAM,CAAC,IAAI,EAAE,CAAA;AAC/CF,YAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,EAAE,CAAA;AACrC,WAAA;AACAN,UAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAAC9C,IAAI,CAAC;AAClC5F,YAAAA,QAAQ,EAAE,EAAE;AACZpC,YAAAA,KAAK,EAAE6K,WAAW,CAAC1C,UAAU,CAACuC,MAAM,CAAA;AACtC,WAAC,CAAC,CAAA;AACF,UAAA,IAAMK,cAAc,GAAGF,WAAW,CAACpI,QAAQ,IAAI,EAAE,CAAA;UACjDtB,MAAM,CAACuH,OAAO,CAACmC,WAAW,CAAC1C,UAAU,CAAC,CAAC5C,OAAO,CAC5C,UAA0B,KAAA,EAAA;AAAA,YAAA,IAAxBgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA;cAAEI,OAAO,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAClB;AACA,YAAA,IACE,CAAC6B,WAAW,CAACjC,SAAS,CAAC,IACtBA,SAAS,KAAKmC,MAAM,IACnBvJ,MAAM,CAACmE,IAAI,CAACkF,WAAW,CAACjC,SAAS,CAAC,CAAC,CAACyC,MAAM,KAAK,CAAC,IAChDR,WAAW,CAACjC,SAAS,CAAC,CAACuC,UAAW,EACpC;cACA,IAAMhB,UAAU,GAAGR,yBAAyB,CAC1Cf,SAAS,EACTI,OAAO,EACPlB,QAAQ,CAACc,SAAS,CAAC,EACnBkB,aAAa,EACbC,cAAc,EACdC,YAAY,EACZ1D,YAAY,EACZ2D,oBAAoB,CACrB,CAAA;cACD,IACEY,WAAW,CAACjC,SAAS,CAAC,IACtBiC,WAAW,CAACjC,SAAS,CAAC,CAACuC,UAAU,EACjC;gBACAhB,UAAU,CAACgB,UAAU,GAAGN,WAAW,CAACjC,SAAS,CAAC,CAACuC,UAAU,CAAA;AAC3D,eAAA;cACAhB,UAAU,CAACrH,QAAQ,GAAGsI,cAAc,CAAC3C,QAAQ,CAAC0B,UAAU,CAACvH,IAAI,CAAC,CAAA;AAC9DiI,cAAAA,WAAW,CAACV,UAAU,CAACvH,IAAI,CAAC,GAAGuH,UAAU,CAAA;AAC3C,aAAA;YACA,IAAIvB,SAAS,KAAKmC,MAAM,EAAE;AACxB,cAAA,IAAMZ,WAAU,GAAGU,WAAW,CAACjC,SAAS,CAAC,CAAA;cACzCuB,WAAU,CAACmB,SAAS,GAAG,IAAI,CAAA;cAC3BnB,WAAU,CAACY,MAAM,GAAGA,MAAM,CAAA;AAC1BF,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAACF,gBAAgB,CAAC,CAACxI,QAAQ,CAAC4F,IAAI,CAC5DO,SAAS,CACV,CAAA;AACH,aAAA;AACF,WAAC,CACF,CAAA;AACDqC,UAAAA,gBAAgB,IAAI,CAAC,CAAA;AACvB,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAID,KAAK,CAACxC,UAAU,EAAE;AAC3B,QAAA,IAAM4C,cAAc,GAAGJ,KAAK,CAAClI,QAAQ,IAAI,EAAE,CAAA;QAC3CtB,MAAM,CAACuH,OAAO,CAACiC,KAAK,CAACxC,UAAU,CAAC,CAAC5C,OAAO,CAAC,UAA0B,KAAA,EAAA;AAAA,UAAA,IAAxBgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA;YAAEI,OAAO,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;UAC3D,IAAMmB,UAAU,GAAGR,yBAAyB,CAC1Cf,SAAS,EACTI,OAAO,EACPlB,QAAQ,CAACc,SAAS,CAAC,EACnBkB,aAAa,EACbC,cAAc,EACdC,YAAY,EACZ1D,YAAY,EACZ2D,oBAAoB,CACrB,CAAA;UACDE,UAAU,CAACrH,QAAQ,GAAGsI,cAAc,CAAC3C,QAAQ,CAAC0B,UAAU,CAACvH,IAAI,CAAC,CAAA;UAC9DuH,UAAU,CAACmB,SAAS,GAAG,IAAI,CAAA;UAC3BnB,UAAU,CAACY,MAAM,GAAGA,MAAM,CAAA;AAC1BF,UAAAA,WAAW,CAACV,UAAU,CAACvH,IAAI,CAAC,GAAGuH,UAAU,CAAA;AACzC,UAAA,IAAIU,WAAW,CAACE,MAAM,CAAC,EAAE;AACvB,YAAA,IAAIF,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,EAAE;AAClCN,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC1I,QAAQ,CAAC4F,IAAI,CAACO,SAAS,CAAC,CAAA;AAC5D,aAAC,MAAM;AACLiC,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,CAAC;gBAAE1I,QAAQ,EAAE,CAACmG,SAAS,CAAA;AAAE,eAAC,CAAC,CAAA;AAC9D,aAAA;AACF,WAAC,MAAM;AACLiC,YAAAA,WAAW,CAACE,MAAM,CAAC,GAAG,EAAE,CAAA;AACxBF,YAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,CAAC;cAAE1I,QAAQ,EAAE,CAACmG,SAAS,CAAA;AAAE,aAAC,CAAC,CAAA;AAC9D,WAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM;AACL;AACArB,QAAAA,OAAO,CAACC,KAAK,CAAC,yCAAyC,CAAC,CAAA;AAC1D,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;;AAEA;EACA,IAAM+D,YAAY,GAAG,EAAE,CAAA;AACvB,EAAA,IAAIzD,QAAQ,CAAC,UAAU,CAAC,EAAE;AACxB;IACA,IAAM0D,SAAS,GAAG,EAAE,CAAA;IACpBhK,MAAM,CAACmE,IAAI,CAACkF,WAAW,CAAC,CAACjF,OAAO,CAAC,UAAChD,IAAI,EAAK;AACzC,MAAA,IAAI,CAACkF,QAAQ,CAAC,UAAU,CAAC,CAACW,QAAQ,CAAC7F,IAAI,CAAC,EACtC4I,SAAS,CAACnD,IAAI,CAACwC,WAAW,CAACjI,IAAI,CAAC,CAAC,CAAA;AACrC,KAAC,CAAC,CAAA;;AAEF;IACAkF,QAAQ,CAAC,UAAU,CAAC,CAAClC,OAAO,CAAC,UAAChD,IAAI,EAAK;AACrC;MACA,IAAIA,IAAI,KAAK,GAAG,EAAE;AAChB4I,QAAAA,SAAS,CAAC5F,OAAO,CAAC,UAAC6F,OAAO,EAAK;AAC7BF,UAAAA,YAAY,CAAClD,IAAI,CAACoD,OAAO,CAAC,CAAA;AAC5B,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAIZ,WAAW,CAACjI,IAAI,CAAC,EAAE;AAC5B2I,QAAAA,YAAY,CAAClD,IAAI,CAACwC,WAAW,CAACjI,IAAI,CAAC,CAAC,CAAA;AACtC,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAC,MAAM;IACLpB,MAAM,CAACmE,IAAI,CAACkF,WAAW,CAAC,CAACjF,OAAO,CAAC,UAAChD,IAAI,EAAK;AACzC2I,MAAAA,YAAY,CAAClD,IAAI,CAACwC,WAAW,CAACjI,IAAI,CAAC,CAAC,CAAA;AACtC,KAAC,CAAC,CAAA;AACJ,GAAA;EAEAmD,kBAAkB,CAACwF,YAAY,CAAC,CAAA;AAChC,EAAA,OAAQA,YAAY,CAAA;AACtB,CAAA;;AAEA;AACO,SAASG,uBAAuB,CAACC,UAAe,EAAU;AAC/D,EAAA,IAAI,CAACA,UAAU,CAACnD,UAAU,EAAE,OAAO,CAAC,CAAA;EACpC,IAAMqC,WAAW,GAAG,EAAE,CAAA;EACtB,IAAIe,YAAY,GAAG,CAAC,CAAA;;AAEpB;EACApK,MAAM,CAACuH,OAAO,CAAC4C,UAAU,CAACnD,UAAU,CAAC,CAAC5C,OAAO,CAAC,UAAiB,KAAA,EAAA;AAAA,IAAA,IAAfgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACvDiC,IAAAA,WAAW,CAACjC,SAAS,CAAC,GAAG,EAAE,CAAA;AAC3BgD,IAAAA,YAAY,IAAI,CAAC,CAAA;AACnB,GAAC,CAAC,CAAA;AACF;EACA,IAAID,UAAU,CAACjD,YAAY,EAAE;AAC3BlH,IAAAA,MAAM,CAACmE,IAAI,CAACgG,UAAU,CAACjD,YAAY,CAAC,CAAC9C,OAAO,CAAC,UAACmF,MAAM,EAAK;AACvD,MAAA,IAAMC,KAAK,GAAGW,UAAU,CAACjD,YAAY,CAACqC,MAAM,CAAC,CAAA;MAC7C,IAAIC,KAAK,CAACnC,KAAK,EAAE;QACf,IAAIoC,gBAAgB,GAAG,CAAC,CAAA;AACxBD,QAAAA,KAAK,CAACnC,KAAK,CAACjD,OAAO,CAAC,UAACsF,WAAW,EAAK;UACnC,IAAI,CAAC,CAACL,WAAW,CAACE,MAAM,CAAC,IAAI,EAAE,EAAEI,UAAU,EAAE;YAC3CN,WAAW,CAACE,MAAM,CAAC,GAAGF,WAAW,CAACE,MAAM,CAAC,IAAI,EAAE,CAAA;AAC/CF,YAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,EAAE,CAAA;AACrC,WAAA;AACAN,UAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAAC9C,IAAI,CAAC;AAClC5F,YAAAA,QAAQ,EAAE,EAAE;AACZpC,YAAAA,KAAK,EAAE6K,WAAW,CAAC1C,UAAU,CAACuC,MAAM,CAAA;AACtC,WAAC,CAAC,CAAA;UACFvJ,MAAM,CAACuH,OAAO,CAACmC,WAAW,CAAC1C,UAAU,CAAC,CAAC5C,OAAO,CAAC,UAAiB,KAAA,EAAA;AAAA,YAAA,IAAfgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACxD;AACA,YAAA,IAAI,CAACpH,MAAM,CAACmE,IAAI,CAACkF,WAAW,CAAC,CAACpC,QAAQ,CAACG,SAAS,CAAC,EAAE;AACjDiC,cAAAA,WAAW,CAACjC,SAAS,CAAC,GAAG,EAAE,CAAA;AAC3BgD,cAAAA,YAAY,IAAI,CAAC,CAAA;AACnB,aAAA;YACA,IAAIhD,SAAS,KAAKmC,MAAM,EAAE;AACxB,cAAA,IAAMZ,UAAU,GAAGU,WAAW,CAACjC,SAAS,CAAC,CAAA;cACzCuB,UAAU,CAACmB,SAAS,GAAG,IAAI,CAAA;cAC3BnB,UAAU,CAACY,MAAM,GAAGA,MAAM,CAAA;AAC1BF,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAACF,gBAAgB,CAAC,CAACxI,QAAQ,CAAC4F,IAAI,CAC5DO,SAAS,CACV,CAAA;AACH,aAAA;AACF,WAAC,CAAC,CAAA;AACFqC,UAAAA,gBAAgB,IAAI,CAAC,CAAA;AACvB,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAID,KAAK,CAACxC,UAAU,EAAE;QAC3BhH,MAAM,CAACuH,OAAO,CAACiC,KAAK,CAACxC,UAAU,CAAC,CAAC5C,OAAO,CAAC,UAAiB,KAAA,EAAA;AAAA,UAAA,IAAfgD,SAAS,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;UAClDiC,WAAW,CAACjC,SAAS,CAAC,GAAGiC,WAAW,CAACjC,SAAS,CAAC,IAAI,EAAE,CAAA;AACrDgD,UAAAA,YAAY,IAAI,CAAC,CAAA;AACjB,UAAA,IAAIf,WAAW,CAACE,MAAM,CAAC,EAAE;AACvB,YAAA,IAAIF,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,EAAE;AAClCN,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC1I,QAAQ,CAAC4F,IAAI,CAACO,SAAS,CAAC,CAAA;AAC5D,aAAC,MAAM;AACLiC,cAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,CAAC;gBAAE1I,QAAQ,EAAE,CAACmG,SAAS,CAAA;AAAE,eAAC,CAAC,CAAA;AAC9D,aAAA;AACF,WAAC,MAAM;AACLiC,YAAAA,WAAW,CAACE,MAAM,CAAC,GAAG,EAAE,CAAA;AACxBF,YAAAA,WAAW,CAACE,MAAM,CAAC,CAACI,UAAU,GAAG,CAAC;cAAE1I,QAAQ,EAAE,CAACmG,SAAS,CAAA;AAAE,aAAC,CAAC,CAAA;AAC9D,WAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM;AACL;AACArB,QAAAA,OAAO,CAACC,KAAK,CAAC,yCAAyC,CAAC,CAAA;AAC1D,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AAEA,EAAA,OAAQoE,YAAY,CAAA;AACtB,CAAA;;AAEA;AACA,SAASC,gCAAgC,CAAC7C,OAAqB,EAAE;AAC/D,EAAA,IAAIA,OAAO,CAAChC,IAAI,KAAK7F,SAAS,EAAE;AAAA,IAAA,IAAA,eAAA,EAAA,qBAAA,CAAA;IAC9B,IAAMoB,KAAK,GACTyG,OAAO,CAACnB,MAAM,KAAK1G,SAAS,IAAI6H,OAAO,CAACnB,MAAM,CAACtF,KAAK,KAAKpB,SAAS,GAC9D6H,OAAO,CAACnB,MAAM,CAACtF,KAAK,GACpByG,OAAO,CAAC3B,WAAW,CAAC9E,KAAK,CAAA;IAC/B,IAAMuJ,WAAW,GACf9C,OAAO,CAACnB,MAAM,KAAK1G,SAAS,IAAI6H,OAAO,CAACnB,MAAM,CAACiE,WAAW,KAAK3K,SAAS,GACpE6H,OAAO,CAACnB,MAAM,CAACiE,WAAW,GAC1B9C,OAAO,CAAC3B,WAAW,CAACyE,WAAW,CAAA;AAErC,IAAA,IAAIC,aAAa,GAAG;MAClB/E,IAAI,EAAEgC,OAAO,CAAChC,IAAI;AAClBzE,MAAAA,KAAK,EAAEA,KAAK;AACZuJ,MAAAA,WAAW,EAAEA,WAAAA;KACd,CAAA;AAED,IAAA,IAAMT,MAAM,GAAGrC,OAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,eAAA,GAAPA,OAAO,CAAEnB,MAAM,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAf,eAAiB/E,CAAAA,QAAQ,KAAzB,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAA2BuI,MAAM,CAAA;AAChD,IAAA,IAAIA,MAAM,KAAKlK,SAAS,IAAIkK,MAAM,GAAG,CAAC,EAAE;AACtCU,MAAAA,aAAa,gBAAQA,aAAa,EAAA;AAAEjJ,QAAAA,QAAQ,EAAEkG,OAAO,CAACnB,MAAM,CAAC/E,QAAAA;OAAU,CAAA,CAAA;AACzE,KAAA;AACA,IAAA,OAAOiJ,aAAa,CAAA;AACtB,GAAC,MAAM,IAAI/C,OAAO,CAACwB,QAAQ,KAAK,MAAM,EAAE;AACtC,IAAA,IAAIxB,OAAO,CAAC3B,WAAW,CAACpC,QAAQ,KAAK,SAAS,EAAE;MAC9C,OAAO;AACLR,QAAAA,IAAI,EAAE,QAAA;OACP,CAAA;AACH,KAAC,MAAM;MACL,IAAMuH,IAAI,GAAG,EAAE,CAAA;AAEfxK,MAAAA,MAAM,CAACmE,IAAI,CAACqD,OAAO,CAAC3B,WAAW,CAAC,CAACzB,OAAO,CAAC,UAACqD,GAAG,EAAK;AAChD,QAAA,IACE,CAAC,CACC,UAAU,EACV,SAAS,EACT,MAAM,EACN,gBAAgB,EAChB,cAAc,EACd,eAAe,CAChB,CAACR,QAAQ,CAACQ,GAAG,CAAC,IACfD,OAAO,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,KAAK,EAAE,EAE/B+C,IAAI,CAAC/C,GAAG,CAAC,GAAGD,OAAO,CAAC3B,WAAW,CAAC4B,GAAG,CAAC,CAAA;AACxC,OAAC,CAAC,CAAA;AACF,MAAA,OAAO+C,IAAI,CAAA;AACb,KAAA;AACF,GAAC,MAAM,IAAIhD,OAAO,CAACwB,QAAQ,KAAK,SAAS,EAAE;IACzC,OAAOxB,OAAO,CAACnB,MAAM,CAAA;AACvB,GAAC,MAAM;AACL,IAAA,MAAM,IAAIZ,KAAK,CAAC,gDAAgD,CAAC,CAAA;AACnE,GAAA;AACF,CAAA;;AAEA;AACO,SAASgF,8BAA8B,CAC5CC,UAA+B,EAC0B;AACzD,EAAA,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE,CAAA;EAC1B,IAAMC,SAAS,GAAG,EAAE,CAAA;EAEpB,IAAM5K,KAAK,GAAG,EAAE,CAAA;EAChB,IAAMmH,YAAY,GAAG,EAAE,CAAA;EACvB,IAAMmC,WAAW,GAAG,EAAE,CAAA;AACtB,EAAA,IAAMuB,iBAAiB,GAAG,IAAI1E,GAAG,CAAC,EAAE,CAAC,CAAA;AACrC,EAAA,KAAK,IAAI3D,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGmI,UAAU,CAACb,MAAM,EAAEtH,KAAK,IAAI,CAAC,EAAE;AACzD,IAAA,IAAMiF,OAAO,GAAGkD,UAAU,CAACnI,KAAK,CAAC,CAAA;AACjC8G,IAAAA,WAAW,CAAC7B,OAAO,CAACpG,IAAI,CAAC,GAAA,QAAA,CAAA,EAAA,EAAQoG,OAAO,CAAE,CAAA;AAC1C,IAAA,IAAIA,OAAO,CAACmC,UAAU,EACpBnC,OAAO,CAACmC,UAAU,CAACvF,OAAO,CAAC,UAACsF,WAAW,EAAK;AAC1CA,MAAAA,WAAW,CAACzI,QAAQ,CAACmD,OAAO,CAAC,UAACyG,gBAAgB,EAAK;AACjDD,QAAAA,iBAAiB,CAACE,GAAG,CAACD,gBAAgB,CAAC,CAAA;AACzC,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAA;EACA7K,MAAM,CAACmE,IAAI,CAACkF,WAAW,CAAC,CAACjF,OAAO,CAAC,UAAC2G,WAAW,EAAK;AAChD,IAAA,IAAMvD,OAAO,GAAG6B,WAAW,CAAC0B,WAAW,CAAC,CAAA;IACxC,IAAIvD,OAAO,CAACmC,UAAU,IAAInC,OAAO,CAACmC,UAAU,CAAC,CAAC,CAAC,EAAE;MAC/C,IAAInC,OAAO,CAACmC,UAAU,CAAC,CAAC,CAAC,CAAC9K,KAAK,EAAE;AAC/B;QACAqI,YAAY,CAAC6D,WAAW,CAAC,GAAG;UAC1B1D,KAAK,EAAEG,OAAO,CAACmC,UAAU,CAACtH,GAAG,CAAC,UAACqH,WAAW,EAAK;AAAA,YAAA,IAAA,SAAA,CAAA;YAC7C,IAAMsB,kBAAkB,GAAG,EAAE,CAAA;YAC7B,IAAMpB,cAAc,GAAG,EAAE,CAAA;AACzBF,YAAAA,WAAW,CAACzI,QAAQ,CAACmD,OAAO,CAAC,UAAC6G,KAAK,EAAK;AACtC,cAAA,IAAI5B,WAAW,CAAC4B,KAAK,CAAC,EAAE;gBACtBD,kBAAkB,CAACC,KAAK,CAAC,GAAGZ,gCAAgC,CAC1DhB,WAAW,CAAC4B,KAAK,CAAC,CACnB,CAAA;AACD,gBAAA,IAAI5B,WAAW,CAAC4B,KAAK,CAAC,CAAC3J,QAAQ,EAAEsI,cAAc,CAAC/C,IAAI,CAACoE,KAAK,CAAC,CAAA;AAC7D,eAAA;AACF,aAAC,CAAC,CAAA;YACF,OAAO;cACLjE,UAAU,EAAA,QAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CACP+D,WAAW,CAAGrB,GAAAA,WAAW,CAAC7K,KAAK,EAAA,SAAA,GAC7BmM,kBAAkB,CACtB;AACD1J,cAAAA,QAAQ,EAAEsI,cAAAA;aACX,CAAA;WACF,CAAA;SACF,CAAA;AACH,OAAC,MAAM;AACL;QACA,IAAMoB,kBAAkB,GAAG,EAAE,CAAA;QAC7B,IAAMpB,cAAc,GAAG,EAAE,CAAA;AACzBpC,QAAAA,OAAO,CAACmC,UAAU,CAAC,CAAC,CAAC,CAAC1I,QAAQ,CAACmD,OAAO,CAAC,UAAC6G,KAAK,EAAK;UAChDD,kBAAkB,CAACC,KAAK,CAAC,GAAGZ,gCAAgC,CAC1DhB,WAAW,CAAC4B,KAAK,CAAC,CACnB,CAAA;AACD,UAAA,IAAI5B,WAAW,CAAC4B,KAAK,CAAC,CAAC3J,QAAQ,EAAEsI,cAAc,CAAC/C,IAAI,CAACoE,KAAK,CAAC,CAAA;AAC7D,SAAC,CAAC,CAAA;QACF/D,YAAY,CAAC6D,WAAW,CAAC,GAAG;AAC1B/D,UAAAA,UAAU,EAAEgE,kBAAkB;AAC9B1J,UAAAA,QAAQ,EAAEsI,cAAAA;SACX,CAAA;AACH,OAAA;AACF,KAAA;AACA,IAAA,IAAI,CAACgB,iBAAiB,CAAChE,GAAG,CAACmE,WAAW,CAAC,EACrChL,KAAK,CAACyH,OAAO,CAACpG,IAAI,CAAC,GAAGiJ,gCAAgC,CAAC7C,OAAO,CAAC,CAAA;AACnE,GAAC,CAAC,CAAA;EAEFmD,SAAS,CAAC3D,UAAU,GAAGjH,KAAK,CAAA;EAC5B4K,SAAS,CAACzD,YAAY,GAAGA,YAAY,CAAA;AACrCyD,EAAAA,SAAS,CAACrJ,QAAQ,GAAGoJ,UAAU,CAC5BQ,MAAM,CAAC,UAAA,KAAA,EAAA;IAAA,IAAG5J,QAAQ,SAARA,QAAQ;AAAEwI,MAAAA,SAAS,SAATA,SAAS,CAAA;IAAA,OAAOxI,QAAQ,IAAI,CAACwI,SAAS,CAAA;GAAC,CAAA,CAC3DzH,GAAG,CAAC,UAAA,KAAA,EAAA;IAAA,IAAGjB,IAAI,SAAJA,IAAI,CAAA;AAAA,IAAA,OAAOA,IAAI,CAAA;GAAC,CAAA,CAAA;AAE1B,EAAA,OAAOuJ,SAAS,CAAA;AAClB,CAAA;AAEO,SAASQ,gCAAgC,CAC9CT,UAA+B,EAC/BlC,YAAiB,EACwC;AACzD,EAAA,IAAI,CAACkC,UAAU,EAAE,OAAO,EAAE,CAAA;EAE1B,IAAMU,QAAQ,GAAG,EAAE,CAAA;EACnB,IAAMC,OAAO,GAAG,EAAE,CAAA;EAClB,IAAMC,WAAW,GAAG9C,YAAY,CAAA;AAEhCkC,EAAAA,UAAU,CAACtG,OAAO,CAAC,UAACoD,OAAO,EAAK;AAC9B6D,IAAAA,OAAO,CAACxE,IAAI,CAACW,OAAO,CAACpG,IAAI,CAAC,CAAA;AAC1B,IAAA,IAAIoG,OAAO,CAAChC,IAAI,KAAK7F,SAAS,EAAE;AAC9B;AACA,MAAA,IAAMkJ,OAAO,GACX,OAAOrB,OAAO,CAAChC,IAAI,KAAK,QAAQ,GAAGgC,OAAO,CAAChC,IAAI,CAACsD,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;MACjE,IAAIwC,WAAW,IAAIA,WAAW,CAACzC,OAAO,CAAC,CAAC,CAAC,CAAC,EACxCuC,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,GAAGkK,WAAW,CAACzC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;AACpD,KAAA;IACA,IAAIrB,OAAO,CAACwB,QAAQ,KAAK,MAAM,IAAIxB,OAAO,CAAC1B,SAAS,EAAE;AACpD9F,MAAAA,MAAM,CAACmE,IAAI,CAACqD,OAAO,CAAC1B,SAAS,CAAC,CAAC1B,OAAO,CAAC,UAACuD,QAAQ,EAAK;AACnD,QAAA,IAAI,CAACyD,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,EAAEgK,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,GAAG,EAAE,CAAA;AACxD,QAAA,IAAIuG,QAAQ,CAAC2B,UAAU,CAAC,MAAM,CAAC,EAAE;AAC/B8B,UAAAA,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,CAACuG,QAAQ,CAAC4D,SAAS,CAAC,CAAC,CAAC,CAAC,GAC3C/D,OAAO,CAAC1B,SAAS,CAAC6B,QAAQ,CAAC,CAAA;AAC/B,SAAC,MAAM;AACLyD,UAAAA,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,CAACuG,QAAQ,CAAC,GAAGH,OAAO,CAAC1B,SAAS,CAAC6B,QAAQ,CAAC,CAAA;AAChE,SAAA;AACF,OAAC,CAAC,CAAA;KACH,MAAM,IACLH,OAAO,CAACwB,QAAQ,KAAK,SAAS,IAC9BhJ,MAAM,CAACmE,IAAI,CAACqD,OAAO,CAAClB,QAAQ,CAAC,CAACuD,MAAM,GAAG,CAAC,EACxC;MACAuB,QAAQ,CAAC5D,OAAO,CAACpG,IAAI,CAAC,GAAGoG,OAAO,CAAClB,QAAQ,CAAA;AAC3C,KAAA;AACF,GAAC,CAAC,CAAA;AAEF8E,EAAAA,QAAQ,CAAC,UAAU,CAAC,GAAGC,OAAO,CAAA;AAE9B,EAAA,OAAOD,QAAQ,CAAA;AACjB,CAAA;AAEO,SAASI,qCAAqC,CACnD/H,QAAgB,EAChBC,aAAsC,EAC3B;EACX,OACGA,aAAa,CAACD,QAAQ,CAAC,IAAIC,aAAa,CAACD,QAAQ,CAAC,CAACgI,SAAS,IAC5D,YAAA;AAAA,IAAA,OAAM,IAAI,CAAA;GAAC,CAAA;AAEhB,CAAA;;AAEA;AACO,SAASC,aAAa,CAC3BhB,UAA+B,EAC/BtB,UAMC,EACD;AACA,EAAA,IAAQ/C,MAAM,GAAuC+C,UAAU,CAAvD/C,MAAM;IAAEC,QAAQ,GAA6B8C,UAAU,CAA/C9C,QAAQ;IAAEjF,QAAQ,GAAmB+H,UAAU,CAArC/H,QAAQ;IAAEmH,YAAY,GAAKY,UAAU,CAA3BZ,YAAY,CAAA;AAChD,EAAA,IAAMmC,SAAS,GAAG3K,MAAM,CAACC,MAAM,CAAA,QAAA,CAAA,EAAA,EACxBoG,MAAM,CAAA,EACXoE,8BAA8B,CAACC,UAAU,CAAC,CAC3C,CAAA;AAED,EAAA,IAAMiB,WAIL,GAAGR,gCAAgC,CAACT,UAAU,EAAElC,YAAY,CAAC,CAAA;EAC9D,IAAIlC,QAAQ,CAACgF,WAAW,EAAE;AACxBK,IAAAA,WAAW,CAACL,WAAW,GAAGhF,QAAQ,CAACgF,WAAW,CAAA;AAChD,GAAA;;AAEA;EACAX,SAAS,CAAC1H,IAAI,GAAG,QAAQ,CAAA;AACzB5B,EAAAA,QAAQ,CAACsJ,SAAS,EAAEgB,WAAW,CAAC,CAAA;AAClC,CAAA;AAEO,IAAMC,kBAAkB,GAAG,UAAU,CAAA;;AAE5C;AACA,SAASC,sBAAsB,CAACC,QAA6B,EAAE;AAC7D,EAAA,IAAMC,KAAK,GAAGD,QAAQ,CAACzJ,GAAG,CAAC,UAACmF,OAAO,EAAA;IAAA,OAAKA,OAAO,CAACpG,IAAI,CAAA;GAAC,CAAA,CAAA;AACrD,EAAA,IAAM4K,iBAAiB,GAAGJ,kBAAkB,CAAC/B,MAAM,CAAA;AAEnD,EAAA,OAAOkC,KAAK,CAAClC,MAAM,GAAG,CAAC,GACnBpI,IAAI,CAACwK,GAAG,CAARxK,KAAAA,CAAAA,IAAI,EACCsK,KAAK,CAAC1J,GAAG,CAAC,UAACjB,IAAI,EAAK;AACrB,IAAA,IAAIA,IAAI,CAACkI,UAAU,CAACsC,kBAAkB,CAAC,EAAE;MACvC,IAAMrJ,KAAK,GAAGnB,IAAI,CAACmK,SAAS,CAACS,iBAAiB,EAAE5K,IAAI,CAACyI,MAAM,CAAC,CAAA;AAC5D,MAAA,IAAMhL,KAAK,GAAGqN,MAAM,CAACC,QAAQ,CAAC5J,KAAK,CAAC,CAAA;AAEpC,MAAA,IAAI,CAAC6J,KAAK,CAACvN,KAAK,CAAC,EAAE;AACjB,QAAA,OAAOA,KAAK,CAAA;AACd,OAAA;AACF,KAAA;AAEA,IAAA,OAAO,CAAC,CAAA;AACV,GAAC,CAAC,CACH,GAAG,CAAC,GACL,CAAC,CAAA;AACP,CAAA;;AAEA;AACO,SAASwN,UAAU,CAACjD,UAS1B,EAAE;AACD,EAAA,IACE/C,MAAM,GAQJ+C,UAAU,CARZ/C,MAAM;IACNC,QAAQ,GAON8C,UAAU,CAPZ9C,QAAQ;IACRgG,IAAI,GAMFlD,UAAU,CANZkD,IAAI;IACJjL,QAAQ,GAKN+H,UAAU,CALZ/H,QAAQ;IACRkH,cAAc,GAIZa,UAAU,CAJZb,cAAc;IACdC,YAAY,GAGVY,UAAU,CAHZZ,YAAY;IACZjG,KAAK,GAEH6G,UAAU,CAFZ7G,KAAK;IACLuC,YAAY,GACVsE,UAAU,CADZtE,YAAY,CAAA;EAEd,IAAMyH,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZ1D,IAAAA,YAAY,EAAZA,YAAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,IAAM0H,CAAC,GAAGX,sBAAsB,CAACU,gBAAgB,CAAC,CAAA;AAClD,EAAA,IAAM1G,WAAW,GAAG4G,+BAA+B,CAACD,CAAC,EAAEF,IAAI,CAAC,CAAA;AAE5D,EAAA,IAAM3D,UAAU,GAAI;IAClBvH,IAAI,EAAA,EAAA,GAAKwK,kBAAkB,GAAGY,CAAG;AACjClL,IAAAA,QAAQ,EAAE,KAAK;AACfuE,IAAAA,WAAW,EAAEA,WAAW;IACxBC,SAAS,EAAGwG,IAAI,IAAIA,IAAI,CAACI,yBAAyB,IAAK,EAAE;AACzD1D,IAAAA,QAAQ,EAAE,MAAM;IAChB3C,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;AACZ1B,IAAAA,aAAa,EAAE,EAAA;GACD,CAAA;AAEhB,EAAA,IAAIrC,KAAK,KAAK5C,SAAS,IAAI4C,KAAK,KAAK,IAAI,EAAE;IACzCgK,gBAAgB,CAACI,MAAM,CAACpK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEoG,UAAU,CAAC,CAAA;AACnD,GAAC,MAAM;AACL4D,IAAAA,gBAAgB,CAAC1F,IAAI,CAAC8B,UAAU,CAAC,CAAA;AACnC,GAAA;EACA+C,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZnH,IAAAA,QAAQ,EAARA,QAAAA;AACF,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACO,SAASuL,aAAa,CAACxD,UAQ7B,EAAE;AACD,EAAA,IACE/C,MAAM,GAOJ+C,UAAU,CAPZ/C,MAAM;IACNC,QAAQ,GAMN8C,UAAU,CANZ9C,QAAQ;IACRjF,QAAQ,GAKN+H,UAAU,CALZ/H,QAAQ;IACRkH,cAAc,GAIZa,UAAU,CAJZb,cAAc;IACdC,YAAY,GAGVY,UAAU,CAHZZ,YAAY;IACZjG,KAAK,GAEH6G,UAAU,CAFZ7G,KAAK;IACLuC,YAAY,GACVsE,UAAU,CADZtE,YAAY,CAAA;EAEd,IAAMyH,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZ1D,IAAAA,YAAY,EAAZA,YAAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,IAAM0H,CAAC,GAAGX,sBAAsB,CAACU,gBAAgB,CAAC,CAAA;AAElD,EAAA,IAAM5D,UAAU,GAAI;IAClBvH,IAAI,EAAA,EAAA,GAAKwK,kBAAkB,GAAGY,CAAG;AACjClL,IAAAA,QAAQ,EAAE,KAAK;AACfuE,IAAAA,WAAW,EAAE;AACX9E,MAAAA,KAAK,iBAAeyL,CAAG;AACvBvJ,MAAAA,IAAI,EAAE,QAAQ;MACd,SAAS,EAAA,EAAA;KACV;IACD6C,SAAS,EAAE,EAAE;AACbkD,IAAAA,QAAQ,EAAE,SAAS;AACnB3C,IAAAA,MAAM,EAAE;AAAEtF,MAAAA,KAAK,iBAAeyL,CAAG;AAAEvJ,MAAAA,IAAI,EAAE,QAAA;KAAU;IACnDqD,QAAQ,EAAE,EAAE;AACZ1B,IAAAA,aAAa,EAAE,EAAA;GACD,CAAA;AAEhB,EAAA,IAAIrC,KAAK,KAAK5C,SAAS,IAAI4C,KAAK,KAAK,IAAI,EAAE;IACzCgK,gBAAgB,CAACI,MAAM,CAACpK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEoG,UAAU,CAAC,CAAA;AACnD,GAAC,MAAM;AACL4D,IAAAA,gBAAgB,CAAC1F,IAAI,CAAC8B,UAAU,CAAC,CAAA;AACnC,GAAA;EACA+C,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZnH,IAAAA,QAAQ,EAARA,QAAAA;AACF,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACO,SAASwL,oCAAoC,CAACzD,UAepD,EAAU;AACT,EAAA,IACEe,UAAU,GAcRf,UAAU,CAdZe,UAAU;IACV2C,YAAY,GAaV1D,UAAU,CAbZ0D,YAAY;IACZzL,SAAQ,GAYN+H,UAAU,CAZZ/H,QAAQ;IACRkH,cAAc,GAWZa,UAAU,CAXZb,cAAc;IACdC,YAAY,GAUVY,UAAU,CAVZZ,YAAY;IACZuE,OAAO,GASL3D,UAAU,CATZ2D,OAAO;IACPC,IAAI,GAQF5D,UAAU,CARZ4D,IAAI;IACJC,aAAa,GAOX7D,UAAU,CAPZ6D,aAAa;IACbC,gBAAgB,GAMd9D,UAAU,CANZ8D,gBAAgB;IAChBxJ,aAAa,GAKX0F,UAAU,CALZ1F,aAAa;IACb4I,IAAI,GAIFlD,UAAU,CAJZkD,IAAI;IACJxH,YAAY,GAGVsE,UAAU,CAHZtE,YAAY;IACZqI,IAAI,GAEF/D,UAAU,CAFZ+D,IAAI;IACJC,OAAO,GACLhE,UAAU,CADZgE,OAAO,CAAA;EAGT,IAAM/G,MAAM,GAAGjD,KAAK,CAACE,SAAS,CAAC6G,UAAU,CAAC,CAAC,CAAA;EAC3C,IAAM7D,QAAQ,GAAGlD,KAAK,CAACE,SAAS,CAACwJ,YAAY,CAAC,CAAC,CAAA;AAE/C,EAAA,IAAI,CAACzG,MAAM,CAACW,UAAU,EAAE,OAAO,EAAE,CAAA;EACjC,IAAMqG,cAAc,GAAGlE,+BAA+B,CAAC;AACrD9C,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZ1D,IAAAA,YAAY,EAAZA,YAAAA;AACF,GAAC,CAAC,CAAA;EAEF,IAAMwI,WAAW,GAAGD,cAAc,CAAChL,GAAG,CAAC,UAACkL,WAAW,EAAEhL,KAAK,EAAK;AAC7D,IAAA,IAAMiL,QAAQ,GACXP,aAAa,IAAI1K,KAAK,GAAG0K,aAAa,CAACpD,MAAM,IAAIoD,aAAa,CAAC1K,KAAK,CAAC,IACtE,KAAK,CAAA;AACP,IAAA,IAAIgL,WAAW,CAACvE,QAAQ,KAAK,MAAM,EAAE;AACnC;AACA,MAAA,IAAMyE,sBAAsB,GAAGjC,qCAAqC,CAClE+B,WAAW,CAAC1H,WAAW,CAACpC,QAAQ,IAAI,QAAQ,EAC5CC,aAAa,CACd,CAAA;;AAED;AACA,MAAA,oBACEhE,+BAAC,IAAI,EAAA;AACH,QAAA,cAAc,EAAEM,MAAM,CAACC,MAAM,CAC3B;AACEmB,UAAAA,IAAI,EAAEiM,cAAc,CAAC9K,KAAK,CAAC,CAACnB,IAAI;AAChCE,UAAAA,QAAQ,EAAE+L,cAAc,CAAC9K,KAAK,CAAC,CAACjB,QAAQ;AACxCyL,UAAAA,OAAO,EAAPA,OAAO;UACPC,IAAI,EAAKA,IAAI,GAAIK,GAAAA,GAAAA,cAAc,CAAC9K,KAAK,CAAC,CAACnB,IAAM;AAC7CmH,UAAAA,cAAc,EAAdA,cAAc;AACdC,UAAAA,YAAY,EAAZA,YAAY;AACZ5D,UAAAA,aAAa,EAAEyI,cAAc,CAAC9K,KAAK,CAAC,CAACqC,aAAa;AAClD+E,UAAAA,UAAU,EAAE0D,cAAc,CAAC9K,KAAK,CAAC,CAACoH,UAAU;AAC5CG,UAAAA,SAAS,EAAEuD,cAAc,CAAC9K,KAAK,CAAC,CAACuH,SAAS;AAC1CP,UAAAA,MAAM,EAAE8D,cAAc,CAAC9K,KAAK,CAAC,CAACgH,MAAAA;AAChC,SAAC,EACD8D,cAAc,CAAC9K,KAAK,CAAC,CAACuD,SAAS,EAC/BuH,cAAc,CAAC9K,KAAK,CAAC,CAACsD,WAAW,CACjC;QACF,GAAG,EAAKmH,IAAI,GAAIK,GAAAA,GAAAA,cAAc,CAAC9K,KAAK,CAAC,CAACnB,IAAO;AAC7C,QAAA,sBAAsB,EAAEqM,sBAAuB;QAC/C,QAAQ,EAAE,SAACC,QAAAA,CAAAA,UAA6B,EAAK;UAC3C,IAAMnB,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;;AAEF;UACA,IAAM6I,YAAY,GAAG,EAAE,CAAA;UACvB,IAAMC,UAAU,GAAG,EAAE,CAAA;UACrB5N,MAAM,CAACmE,IAAI,CAACuJ,UAAU,CAAC,CAACtJ,OAAO,CAAC,UAACyJ,QAAQ,EAAK;AAC5C,YAAA,IAAIA,QAAQ,CAACvE,UAAU,CAAC,KAAK,CAAC,EAAE;AAC9B,cAAA,IAAIuE,QAAQ,CAACvE,UAAU,CAAC,MAAM,CAAC,EAAE;AAC/BsE,gBAAAA,UAAU,CAACC,QAAQ,CAACtC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGmC,UAAU,CAACG,QAAQ,CAAC,CAAA;AAC1D,eAAC,MAAM;AACLD,gBAAAA,UAAU,CAACC,QAAQ,CAAC,GAAGH,UAAU,CAACG,QAAQ,CAAC,CAAA;AAC7C,eAAA;aACD,MAAM,IACL,CAAC,CACC,MAAM,EACN,UAAU,EACV,eAAe,EACf,YAAY,EACZ,WAAW,EACX,QAAQ,CACT,CAAC5G,QAAQ,CAAC4G,QAAQ,CAAC,EACpB;AACAF,cAAAA,YAAY,CAACE,QAAQ,CAAC,GAAGH,UAAU,CAACG,QAAQ,CAAC,CAAA;AAC/C,aAAA;AACF,WAAC,CAAC,CAAA;UAEF,IAAItB,gBAAgB,CAAChK,KAAK,CAAC,CAACyG,QAAQ,KAAK,MAAM,EAAE;AAC/C,YAAA,IAAM8E,UAAU,GAAGvB,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AAC1CgK,YAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EAClBuL,UAAU,EAAA;AACbjI,cAAAA,WAAW,EAAE8H,YAAY;AACzB7H,cAAAA,SAAS,EAAE8H,UAAU;cACrBtM,QAAQ,EAAEoM,UAAU,CAACpM,QAAQ;cAC7BqI,UAAU,EAAE+D,UAAU,CAAC/D,UAAU;cACjCG,SAAS,EAAE4D,UAAU,CAAC5D,SAAS;cAC/BP,MAAM,EAAEmE,UAAU,CAACnE,MAAM;cACzBnI,IAAI,EAAEsM,UAAU,CAACtM,IAAI;cACrBoE,IAAI,EAAEkI,UAAU,CAAClI,IAAI;AACrBwD,cAAAA,QAAQ,EAAE,MAAA;aACX,CAAA,CAAA;AACH,WAAC,MAAM;AACL,YAAA,MAAM,IAAIvD,KAAK,CAAC,+BAA+B,CAAC,CAAA;AAClD,WAAA;UACAiG,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,QAAQ,EAAE,SAAM,QAAA,GAAA;AACd;UACA,IAAMkL,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACFyH,UAAAA,gBAAgB,CAACI,MAAM,CAACpK,KAAK,EAAE,CAAC,CAAC,CAAA;AACjC2K,UAAAA,gBAAgB,WACXD,aAAa,CAACc,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAC7B0K,aAAa,CAACc,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACjC,CAAA,CAAA;UACFmJ,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,QAAQ,EAAE,SAAM,QAAA,GAAA;UACd,IAAMkL,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;UACF,IAAIvC,KAAK,KAAK,CAAC,EAAE,OAAA;AAEjB,UAAA,IAAMyL,SAAS,GAAGzB,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,CAAA;UAC7CgK,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,GAAGgK,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AACrDgK,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAGyL,SAAS,CAAA;UACnCtC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,UAAU,EAAE,SAAM,UAAA,GAAA;UAChB,IAAMkL,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACF,UAAA,IAAIvC,KAAK,KAAK8K,cAAc,CAACxD,MAAM,GAAG,CAAC,EAAE,OAAA;AAEzC,UAAA,IAAMmE,SAAS,GAAGzB,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,CAAA;UAC7CgK,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,GAAGgK,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AACrDgK,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAGyL,SAAS,CAAA;UACnCtC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;QACF,OAAO,EAAE,SAAC4M,OAAAA,CAAAA,MAAc,EAAK;UAC3B,IAAIA,MAAM,KAAK,MAAM,EAAE;AACrB5B,YAAAA,UAAU,CAAC;AACThG,cAAAA,MAAM,EAANA,MAAM;AACNC,cAAAA,QAAQ,EAARA,QAAQ;AACRgG,cAAAA,IAAI,EAAJA,IAAI;AACJjL,cAAAA,QAAQ,EAARA,SAAQ;AACRkH,cAAAA,cAAc,EAAEA,cAAc,IAAI,EAAE;AACpCC,cAAAA,YAAY,EAAEA,YAAY,IAAI,EAAE;AAChCjG,cAAAA,KAAK,EAALA,KAAK;AACLuC,cAAAA,YAAY,EAAZA,YAAAA;AACF,aAAC,CAAC,CAAA;AACJ,WAAC,MAAM,IAAImJ,MAAM,KAAK,SAAS,EAAE;AAC/BrB,YAAAA,aAAa,CAAC;AACZvG,cAAAA,MAAM,EAANA,MAAM;AACNC,cAAAA,QAAQ,EAARA,QAAQ;AACRjF,cAAAA,QAAQ,EAARA,SAAQ;AACRkH,cAAAA,cAAc,EAAEA,cAAc,IAAI,EAAE;AACpCC,cAAAA,YAAY,EAAEA,YAAY,IAAI,EAAE;AAChCjG,cAAAA,KAAK,EAALA,KAAK;AACLuC,cAAAA,YAAY,EAAZA,YAAAA;AACF,aAAC,CAAC,CAAA;AACJ,WAAA;AACAoI,UAAAA,gBAAgB,CAAKD,EAAAA,CAAAA,MAAAA,CAAAA,aAAa,EAAE,CAAA,KAAK,CAAE,CAAA,CAAA,CAAA;SAC3C;AACF,QAAA,QAAQ,EAAEO,QAAS;QACnB,WAAW,EAAE,qBAACU,QAAiB,EAAA;UAAA,OAC7BhB,gBAAgB,WACXD,aAAa,CAACc,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,GAChC2L,QAAQ,CAAA,EACLjB,aAAa,CAACc,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACjC,CAAA,CAAA;SACH;AACD,QAAA,aAAa,EAAEmB,aAAc;AAC7B,QAAA,IAAI,EAAE4I,IAAAA;OACN,CAAA,CAAA;AAEN,KAAC,MAAM,IAAIiB,WAAW,CAACvE,QAAQ,KAAK,SAAS,EAAE;AAC7C;AACA,MAAA,oBACEtJ,+BAAC,OAAO,EAAA;QACN,MAAM,EAAE6N,WAAW,CAAClH,MAAO;QAC3B,QAAQ,EAAEkH,WAAW,CAACjH,QAAS;AAC/B,QAAA,QAAQ,EAAE,SACRqE,QAAAA,CAAAA,SAA4B,EAC5BgB,WAA8B,EAC9BwC,MAAe,EACZ;UACH,IAAM5B,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AAEF,UAAA,IAAMsJ,UAAU,GAAG7B,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AAE1CgK,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EAClB6L,UAAU,EAAA;AACb/H,YAAAA,MAAM,EAAEsE,SAAS;AACjBrE,YAAAA,QAAQ,EAAEqF,WAAW;AACrB3C,YAAAA,QAAQ,EAAE,SAAA;WACX,CAAA,CAAA;UAED,IAAImF,MAAM,EAAE5B,gBAAgB,CAAChK,KAAK,CAAC,CAACiD,IAAI,GAAG2I,MAAM,CAAA;UAEjDzC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;QACF,YAAY,EAAE,SAACgN,YAAAA,CAAAA,OAAe,EAAK;UACjC,IAAMD,UAAU,GAAGb,WAAW,CAAA;;AAE9B;AACA,UAAA,IAAIF,cAAc,CAAChL,GAAG,CAAC,UAACqC,IAAI,EAAA;YAAA,OAAKA,IAAI,CAACtD,IAAI,CAAA;AAAA,WAAA,CAAC,CAAC6F,QAAQ,CAACoH,OAAO,CAAC,EAC3D,OAAA;UAEF,IAAM9B,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACFyH,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EAClB6L,UAAU,EAAA;AACbhN,YAAAA,IAAI,EAAEiN,OAAAA;WACP,CAAA,CAAA;UACD3C,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,eAAe,EAAE,SAAM,eAAA,GAAA;UACrB,IAAM+M,UAAU,GAAGb,WAAW,CAAA;UAE9B,IAAMhB,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACFyH,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EAClB6L,UAAU,EAAA;YACb9M,QAAQ,EAAE,CAAC8M,UAAU,CAAC9M,QAAAA;WACvB,CAAA,CAAA;UACDoK,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;QACF,kBAAkB,EAAE,SAClBiN,kBAAAA,CAAAA,aAGE,EACC;UACH,IAAMF,UAAU,GAAGb,WAAW,CAAA;UAE9B,IAAMhB,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACFyH,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EAClB6L,UAAU,EAAA;AACbzE,YAAAA,UAAU,EAAE2E,aAAAA;WACb,CAAA,CAAA;UACD5C,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRjF,YAAAA,QAAQ,EAARA,SAAQ;AACRkH,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,QAAQ,EAAE,SAAM,QAAA,GAAA;AACd;UACA,IAAM+D,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACFyH,UAAAA,gBAAgB,CAACI,MAAM,CAACpK,KAAK,EAAE,CAAC,CAAC,CAAA;AACjC2K,UAAAA,gBAAgB,WACXD,aAAa,CAACc,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAC7B0K,aAAa,CAACc,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACjC,CAAA,CAAA;UACFmJ,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,QAAQ,EAAE,SAAM,QAAA,GAAA;UACd,IAAMkL,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;UACF,IAAIvC,KAAK,KAAK,CAAC,EAAE,OAAA;AAEjB,UAAA,IAAMyL,SAAS,GAAGzB,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,CAAA;UAC7CgK,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,GAAGgK,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AACrDgK,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAGyL,SAAS,CAAA;UACnCtC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;AACF,QAAA,UAAU,EAAE,SAAM,UAAA,GAAA;UAChB,IAAMkL,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZ1D,YAAAA,YAAY,EAAZA,YAAAA;AACF,WAAC,CAAC,CAAA;AACF,UAAA,IAAIvC,KAAK,KAAK8K,cAAc,CAACxD,MAAM,GAAG,CAAC,EAAE,OAAA;AAEzC,UAAA,IAAMmE,SAAS,GAAGzB,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,CAAA;UAC7CgK,gBAAgB,CAAChK,KAAK,GAAG,CAAC,CAAC,GAAGgK,gBAAgB,CAAChK,KAAK,CAAC,CAAA;AACrDgK,UAAAA,gBAAgB,CAAChK,KAAK,CAAC,GAAGyL,SAAS,CAAA;UACnCtC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,YAAAA,MAAM,EAANA,MAAM;AACNC,YAAAA,QAAQ,EAARA,QAAQ;AACRiC,YAAAA,cAAc,EAAdA,cAAc;AACdC,YAAAA,YAAY,EAAZA,YAAY;AACZnH,YAAAA,QAAQ,EAARA,SAAAA;AACF,WAAC,CAAC,CAAA;SACF;QACF,IAAI,EAAEkM,WAAW,CAACnM,IAAK;QACvB,GAAG,EAAK4L,IAAI,GAAIK,GAAAA,GAAAA,cAAc,CAAC9K,KAAK,CAAC,CAACnB,IAAO;QAC7C,QAAQ,EAAEmM,WAAW,CAACjM,QAAS;AAC/B,QAAA,IAAI,EAAK0L,IAAI,GAAIO,GAAAA,GAAAA,WAAW,CAACnM,IAAO;AACpC,QAAA,cAAc,EAAEmH,cAAc,IAAI,EAAG;AACrC,QAAA,YAAY,EAAEC,YAAY,IAAI,EAAG;AACjC,QAAA,OAAO,EAAEuE,OAAQ;QACjB,SAAS,EAAEQ,WAAW,CAAC/H,IAAK;QAC5B,aAAa,EAAE+H,WAAW,CAAC3I,aAAc;QACzC,UAAU,EAAE2I,WAAW,CAAC5D,UAAW;QACnC,SAAS,EAAE4D,WAAW,CAACzD,SAAU;QACjC,MAAM,EAAEyD,WAAW,CAAChE,MAAO;QAC3B,OAAO,EAAE,SAAC0E,OAAAA,CAAAA,MAAc,EAAK;UAC3B,IAAIA,MAAM,KAAK,MAAM,EAAE;AACrB5B,YAAAA,UAAU,CAAC;AACThG,cAAAA,MAAM,EAANA,MAAM;AACNC,cAAAA,QAAQ,EAARA,QAAQ;AACRgG,cAAAA,IAAI,EAAJA,IAAI;AACJjL,cAAAA,QAAQ,EAARA,SAAQ;AACRkH,cAAAA,cAAc,EAAEA,cAAc,IAAI,EAAE;AACpCC,cAAAA,YAAY,EAAEA,YAAY,IAAI,EAAE;AAChCjG,cAAAA,KAAK,EAALA,KAAK;AACLuC,cAAAA,YAAY,EAAZA,YAAAA;AACF,aAAC,CAAC,CAAA;AACJ,WAAC,MAAM,IAAImJ,MAAM,KAAK,SAAS,EAAE;AAC/BrB,YAAAA,aAAa,CAAC;AACZvG,cAAAA,MAAM,EAANA,MAAM;AACNC,cAAAA,QAAQ,EAARA,QAAQ;AACRjF,cAAAA,QAAQ,EAARA,SAAQ;AACRkH,cAAAA,cAAc,EAAEA,cAAc,IAAI,EAAE;AACpCC,cAAAA,YAAY,EAAEA,YAAY,IAAI,EAAE;AAChCjG,cAAAA,KAAK,EAALA,KAAK;AACLuC,cAAAA,YAAY,EAAZA,YAAAA;AACF,aAAC,CAAC,CAAA;AACJ,WAAA;AACAoI,UAAAA,gBAAgB,CAAKD,EAAAA,CAAAA,MAAAA,CAAAA,aAAa,EAAE,CAAA,KAAK,CAAE,CAAA,CAAA,CAAA;SAC3C;AACF,QAAA,QAAQ,EAAEO,QAAS;QACnB,WAAW,EAAE,qBAACU,QAAiB,EAAA;UAAA,OAC7BhB,gBAAgB,WACXD,aAAa,CAACc,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,GAChC2L,QAAQ,CAAA,EACLjB,aAAa,CAACc,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACjC,CAAA,CAAA;SACH;AACD,QAAA,aAAa,EAAEmB,aAAc;AAC7B,QAAA,YAAY,EAAEoB,YAAa;AAC3B,QAAA,IAAI,EAAEwH,IAAAA;OACN,CAAA,CAAA;AAEN,KAAC,MAAM;MACL,oBACE5M,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eACEA,qEAAgC,CAC5B,CAAA;AAEV,KAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,OAAO4N,WAAW,CAAA;AACpB,CAAA;;AAEA;AACO,SAASiB,SAAS,CACvBC,MAAW,EACXC,OAOC,EACD;AACA,EAAA,IACEpI,MAAM,GAMJoI,OAAO,CANTpI,MAAM;IACNC,QAAQ,GAKNmI,OAAO,CALTnI,QAAQ;IACRjF,QAAQ,GAINoN,OAAO,CAJTpN,QAAQ;IACRkH,cAAc,GAGZkG,OAAO,CAHTlG,cAAc;IACdC,YAAY,GAEViG,OAAO,CAFTjG,YAAY;IACZ1D,YAAY,GACV2J,OAAO,CADT3J,YAAY,CAAA;AAEd,EAAA,IAAM4J,GAAG,GAAGF,MAAM,CAACG,MAAM,CAACpM,KAAK,CAAA;AAC/B,EAAA,IAAMqM,IAAI,GAAGJ,MAAM,CAACK,WAAW,CAACtM,KAAK,CAAA;EACrC,IAAMgK,gBAAgB,GAAGpD,+BAA+B,CAAC;AACvD9C,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZ1D,IAAAA,YAAY,EAAZA,YAAAA;AACF,GAAC,CAAC,CAAA;AAEF,EAAA,IAAMkJ,SAAS,GAAGzB,gBAAgB,CAACmC,GAAG,CAAC,CAAA;AACvCnC,EAAAA,gBAAgB,CAACmC,GAAG,CAAC,GAAGnC,gBAAgB,CAACqC,IAAI,CAAC,CAAA;AAC9CrC,EAAAA,gBAAgB,CAACqC,IAAI,CAAC,GAAGZ,SAAS,CAAA;EAElCtC,aAAa,CAACa,gBAAgB,EAAE;AAC9BlG,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAEA,cAAc,IAAI,EAAE;AACpCC,IAAAA,YAAY,EAAEA,YAAY,IAAI,EAAE;AAChCnH,IAAAA,QAAQ,EAARA,QAAAA;AACF,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACA,SAASyN,sBAAsB,CAC7BpE,UAA+B,EAC/BnC,cAAiC,EACjCC,YAA+B,EAC/B1D,YAAkC,EAClC;EACA,IAAMiK,iBAAiB,GAAG,EAAE,CAAA;AAC5BrE,EAAAA,UAAU,CAACtG,OAAO,CAAC,UAACoD,OAAO,EAAK;AAC9B;AACA,IAAA,IAAIA,OAAO,CAACwB,QAAQ,KAAK,SAAS,EAAE;MAClC,IAAMgG,gBAAgB,GAAG7F,+BAA+B,CAAC;QACvD9C,MAAM,EAAEmB,OAAO,CAACnB,MAAM;QACtBC,QAAQ,EAAEkB,OAAO,CAAClB,QAAQ;AAC1BiC,QAAAA,cAAc,EAAdA,cAAc;AACdC,QAAAA,YAAY,EAAZA,YAAY;AACZ1D,QAAAA,YAAY,EAAZA,YAAAA;AACF,OAAC,CAAC,CAAA;MACF,IAAMmK,eAAe,GAAGH,sBAAsB,CAC5CE,gBAAgB,EAChBzG,cAAc,EACdC,YAAY,EACZ1D,YAAY,CACb,CAAA;AACD,MAAA,IAAM6G,WAAW,GAAG3L,MAAM,CAACC,MAAM,CAC1BuH,QAAAA,CAAAA,EAAAA,EAAAA,OAAO,CAAClB,QAAQ,CACrBmE,EAAAA,8BAA8B,CAACwE,eAAe,CAAC,CAChD,CAAA;AACD,MAAA,IAAMtE,SAAS,GAAG3K,MAAM,CAACC,MAAM,CACxBuH,QAAAA,CAAAA,EAAAA,EAAAA,OAAO,CAACnB,MAAM,CACnBoE,EAAAA,8BAA8B,CAACwE,eAAe,CAAC,CAChD,CAAA;MACD,IAAMtG,UAAU,gBACXnB,OAAO,EAAA;AACVnB,QAAAA,MAAM,EAAEsE,SAAS;AACjBrE,QAAAA,QAAQ,EAAEqF,WAAAA;OACX,CAAA,CAAA;AACDoD,MAAAA,iBAAiB,CAAClI,IAAI,CAAC8B,UAAU,CAAC,CAAA;AACpC,KAAC,MAAM;AACLoG,MAAAA,iBAAiB,CAAClI,IAAI,CAACW,OAAO,CAAC,CAAA;AACjC,KAAA;AACF,GAAC,CAAC,CAAA;AACF,EAAA,OAAOuH,iBAAiB,CAAA;AAC1B,CAAA;;AAEA;AACO,SAASG,0BAA0B,CACxC7I,MAAyB,EACzBC,QAA2B,EAC3BjF,QAAwD,EACxDyD,YAAkC,EAClC;AACA,EAAA,IAAMyD,cAAc,GAAGlC,MAAM,CAACiF,WAAW,CAAA;AACzC,EAAA,IAAM9C,YAAY,GAAGlC,QAAQ,CAACgF,WAAW,CAAA;EACzC,IAAM6D,YAAY,GAAGhG,+BAA+B,CAAC;AACnD9C,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZ1D,IAAAA,YAAY,EAAZA,YAAAA;AACF,GAAC,CAAC,CAAA;EACF,IAAMsK,mBAAmB,GAAGN,sBAAsB,CAChDK,YAAY,EACZ5G,cAAc,EACdC,YAAY,EACZ1D,YAAY,CACb,CAAA;EAED4G,aAAa,CAAC0D,mBAAmB,EAAE;AACjC/I,IAAAA,MAAM,EAANA,MAAM;AACNC,IAAAA,QAAQ,EAARA,QAAQ;AACRiC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZnH,IAAAA,QAAQ,EAARA,QAAAA;AACF,GAAC,CAAC,CAAA;AACJ,CAAA;;AAEA;AACO,SAASgO,aAAa,CAC3BC,MAAqB,EACrBC,MAAsB,EACP;EACf,IAAIA,MAAM,KAAK5P,SAAS,IAAI4P,MAAM,KAAK,IAAI,EAAE,OAAOD,MAAM,CAAA;EAE1D,IAAMnL,IAAI,GAAGoL,MAAM,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;AACxCD,IAAAA,GAAG,CAACC,IAAI,CAAC,GAAG,IAAI,CAAA;AAChB,IAAA,OAAOD,GAAG,CAAA;GACX,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,OAAOH,MAAM,CAACpE,MAAM,CAAC,UAACyE,CAAC,EAAA;AAAA,IAAA,OAAK,CAACxL,IAAI,CAACwL,CAAC,CAAC,CAAA;GAAC,CAAA,CAAA;AACvC,CAAA;AAEO,SAASC,WAAW,CACzBrM,GAAsB,EACtBY,IAAiB,EACE;AACnB,EAAA,IAAI,CAACA,IAAI,EAAE,OAAA,QAAA,CAAA,EAAA,EAAYZ,GAAG,CAAA,CAAA;EAE1B,IAAMsM,QAAQ,GAAG1L,IAAI,CAACqL,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;AAC1CD,IAAAA,GAAG,CAACC,IAAI,CAAC,GAAG,IAAI,CAAA;AAChB,IAAA,OAAOD,GAAG,CAAA;GACX,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,OAAOzP,MAAM,CAACmE,IAAI,CAACZ,GAAG,CAAC,CAACiM,MAAM,CAC5B,UAACC,GAAG,EAAEC,IAAI,EAAA;AAAA,IAAA,IAAA,SAAA,CAAA;AAAA,IAAA,OAAMG,QAAQ,CAACH,IAAI,CAAC,GAAGD,GAAG,GAAA,QAAA,CAAA,EAAA,EAAQA,GAAG,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CAAGC,IAAI,CAAGnM,GAAAA,GAAG,CAACmM,IAAI,CAAC,EAAE,SAAA,EAAA,CAAA;GAAC,EACrE,EAAE,CACH,CAAA;AACH,CAAA;AAEO,SAASjD,+BAA+B,CAC7CD,CAAS,EACTF,IAAW,EACE;AACb,EAAA,IAAIA,IAAI,IAAIA,IAAI,CAACwD,4BAA4B,KAAKnQ,SAAS,EAAE;IAC3D,IAAMoB,KAAK,GAAMuL,IAAI,CAACwD,4BAA4B,CAAC/O,KAAK,SAAIyL,CAAG,CAAA;IAC/D,OAAYF,QAAAA,CAAAA,EAAAA,EAAAA,IAAI,CAACwD,4BAA4B,EAAK;AAAE/O,MAAAA,KAAK,EAAEA,KAAAA;KAAO,CAAA,CAAA;AACpE,GAAC,MAAM;IACL,OAAO;AACLA,MAAAA,KAAK,iBAAeyL,CAAG;AACvBvJ,MAAAA,IAAI,EAAE,QAAQ;MACd,SAAS,EAAA,EAAA;KACV,CAAA;AACH,GAAA;AACF,CAAA;AAEO,SAAS8M,WAAW,GAAW;EACpC,IAAMC,KAAK,GAAG,CACZ,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ,CAAA;AACD,EAAA,IAAMC,aAAa,GAAGD,KAAK,CAACnG,MAAM,CAAA;EAClC,IAAMqG,cAAc,GAAG,EAAE,CAAA;EAEzB,OAAOjI,KAAK,CAACkI,IAAI,CAAC;AAAEtG,IAAAA,MAAM,EAAEqG,cAAAA;GAAgB,CAAC,CAC1C7N,GAAG,CAAC,YAAA;AAAA,IAAA,OAAM2N,KAAK,CAACvO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGsO,aAAa,CAAC,CAAC,CAAA;AAAA,GAAA,CAAC,CAC3DG,IAAI,CAAC,EAAE,CAAC,CAAA;AACb;;AClsDA;AACe,SAASC,iBAAiB,CAehC,IAAA,EAAA;EAAA,IAdPjH,UAAU,QAAVA,UAAU,CAAA;AAeV,EAAA,IAAA,SAAA,GAAoB5H,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;EAChB,IACElH,UAAU,QAAK,IACfA,UAAU,CAACO,UAAU,IACrBP,UAAU,CAACO,UAAU,CAACE,MAAM,IAC5BT,UAAU,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC9K,KAAK,EAC9B;AACA;AACA,IAAA,IAAM0R,WAAW,GAAG,IAAIrK,GAAG,CAAC,EAAE,CAAC,CAAA;IAC/B,CAACkD,UAAU,CAACO,UAAU,IAAI,EAAE,EAAEvF,OAAO,CAAC,UAACsF,WAAW,EAAK;AACrD,MAAA,IAAIA,WAAW,CAAC7K,KAAK,IAAI6K,WAAW,CAAC7K,KAAK,CAAA,MAAA,CAAK,EAC7C6K,WAAW,CAAC7K,KAAK,CAAA,MAAA,CAAK,CAACuF,OAAO,CAAC,UAACoM,GAAG,EAAA;AAAA,QAAA,OAAKD,WAAW,CAACzF,GAAG,CAAC0F,GAAG,CAAC,CAAA;OAAC,CAAA,CAAA;AACjE,KAAC,CAAC,CAAA;IACF,IAAMC,aAAa,GAAG,EAAE,CAAA;AACxB,IAAA,IAAIxI,KAAK,CAACC,OAAO,CAACkB,UAAU,CAAK,MAAA,CAAA,CAAC,EAChCA,UAAU,QAAK,CAAChF,OAAO,CAAC,UAACoM,GAAG,EAAK;AAC/B,MAAA,IAAI,CAACD,WAAW,CAAC3J,GAAG,CAAC4J,GAAG,CAAC,EAAEC,aAAa,CAAC5J,IAAI,CAAC2J,GAAG,CAAC,CAAA;AACpD,KAAC,CAAC,CAAA;AACJ,IAAA,IAAIC,aAAa,CAAC5G,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAA;IAC3C,oBACEnK,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,qBACbA,yBAEU,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAA,yEAAA,EAAA,GAAG,eACXA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;MACN,EAAE,EAAKJ,SAAS,GAAgB,eAAA;AAChC,MAAA,IAAI,EAAC,MAAM;AACX,MAAA,IAAI,EAAC,mFAAA;KACL,CAAA,CACA,eAEJ5Q,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACG+Q,aAAa,CAACpO,GAAG,CAAC,UAACmO,GAAG,EAAEjO,KAAK,EAAA;MAAA,oBAC5B7C,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,GAAG,EAAE6C,KAAAA;AAAM,OAAA,EAAEiO,GAAG,CAAM,CAAA;KAC3B,CAAC,CACC,CACU,CAAA;AAErB,GAAA;AAEA,EAAA,OAAO,IAAI,CAAA;AACb;;ACxDA;AACe,SAASG,YAAY,CAY3B,IAAA,EAAA;EAXPC,IAAAA,eAAe,QAAfA,eAAe,CAAA;AACfC,IAAAA,aAAa,QAAbA,aAAa,CAAA;AACbxP,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AACRyP,IAAAA,WAAW,QAAXA,WAAW,CACP;AAQJ,EAAA,IAAA,SAAA,GAAoBtP,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,oBACE5Q,yBAAC,CAAA,aAAA,CAAAA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACGmR,aAAa,CAACxO,GAAG,CAAC,UAAC0O,YAAY,EAAExO,KAAK,EAAA;IAAA,oBACrC7C,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAI,GAAG,EAAK4Q,SAAS,GAAa/N,YAAAA,GAAAA,KAAAA;AAAQ,KAAA,EACvCwO,YAAY,EAAE,GAAG,eAClBrR,wCAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEsR,yBAAQ;AACd,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OACP3P,SAAQ,CACHwP,EAAAA,CAAAA,MAAAA,CAAAA,aAAa,CAAC9C,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAC7BsO,aAAa,CAAC9C,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACjC,CAAA,CAAA;AAAA,OAAA;AACH,KAAA,CACD,CACC,CAAA;AAAA,GACN,CAAC,CACC,eACL7C,yBAAA,CAAA,aAAA,CAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;AACLpS,MAAAA,KAAK,EAAE,EAAE;AACTE,MAAAA,KAAK,EAAE,EAAA;KACP;AACF,IAAA,WAAW,EAAE+R,WAAY;AACzB,IAAA,OAAO,EAAEF,eAAe,CACrB1F,MAAM,CAAC,UAAC+C,MAAM,EAAA;AAAA,MAAA,OAAK,CAAC4C,aAAa,CAAC5J,QAAQ,CAACgH,MAAM,CAAC,CAAA;AAAA,KAAA,CAAC,CACnD5L,GAAG,CAAC,UAAC4L,MAAM,EAAA;MAAA,OAAM;AAChBpP,QAAAA,KAAK,EAAEoP,MAAM;AACblP,QAAAA,KAAK,EAAEkP,MAAAA;OACR,CAAA;AAAA,KAAC,CAAE;IACN,QAAQ,EAAE,SAACuC,QAAAA,CAAAA,GAAQ,EAAK;AACtBnP,MAAAA,SAAQ,WAAKwP,aAAa,EAAA,CAAEL,GAAG,CAAC3R,KAAK,CAAE,CAAA,CAAA,CAAA;KACvC;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,CACa,CAAA;AAErB;;ACpDA,IAAMP,WAAS,GAAGC,wBAAe,CAAC;AAChC2S,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAE,MAAM;AACb1S,IAAAA,OAAO,EAAE,MAAM;AACf2S,IAAAA,aAAa,EAAE,KAAK;AACpBvP,IAAAA,YAAY,EAAE,MAAM;AACpB,IAAA,SAAS,EAAE;AAAEsP,MAAAA,KAAK,EAAE,KAAK;AAAEzS,MAAAA,WAAW,EAAE,KAAK;AAAEmD,MAAAA,YAAY,EAAE,CAAA;KAAG;AAChE,IAAA,kBAAkB,EAAE;AAClBpD,MAAAA,OAAO,EAAE,MAAM;AACf2S,MAAAA,aAAa,EAAE,QAAQ;AACvBC,MAAAA,cAAc,EAAE,QAAA;AAClB,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;;AAEF;AACe,SAASC,eAAe,CAY9B,IAAA,EAAA;EAAA,IAXPC,aAAa,QAAbA,aAAa;AACbxF,IAAAA,KAAK,QAALA,KAAK;AACLyF,IAAAA,SAAS,QAATA,SAAS;AACTnQ,IAAAA,SAAQ,QAARA,QAAQ;AACR4B,IAAAA,IAAI,QAAJA,IAAI,CAAA;EAQJ,IAAM3D,OAAO,GAAGhB,WAAS,EAAE,CAAA;EAE3B,IAAMmT,cAAc,GAAG,EAAE,CAAA;AAAC,EAAA,IAAA,KAAA,GAAA,SAAA,KAAA,CACjBlP,KAAK,EAAA;AACZ,IAAA,IAAM1D,KAAK,GAAG0S,aAAa,CAAChP,KAAK,CAAC,CAAA;IAClC,IAAInB,IAAI,QAAMvC,KAAO,CAAA;AACrB,IAAA,IAAIkN,KAAK,IAAIxJ,KAAK,GAAGwJ,KAAK,CAAClC,MAAM,EAAEzI,IAAI,GAAG2K,KAAK,CAACxJ,KAAK,CAAC,CAAA;IACtDkP,cAAc,CAAC5K,IAAI,eACjBnH,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAE6C,KAAM;MAAC,SAAS,EAAEjD,OAAO,CAAC4R,cAAAA;AAAe,KAAA,eACjDxR,+BAACgS,gBAAK,EAAA;MACJ,KAAK,EAAE7S,KAAK,KAAKc,SAAS,IAAId,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGA,KAAM;AAC1D,MAAA,WAAW,EAAC,gBAAgB;AAC5B,MAAA,GAAG,WAAS0D,KAAQ;AACpB,MAAA,IAAI,EAAEU,IAAI,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAS;MAC5C,QAAQ,EAAE,SAAC0O,QAAAA,CAAAA,EAAO,EAAK;AACrB,QAAA,IAAIC,MAAM,CAAA;AACV,QAAA,QAAQ3O,IAAI;AACV,UAAA,KAAK,QAAQ;AACX2O,YAAAA,MAAM,GAAGD,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAA;AACxB,YAAA,MAAA;AACF,UAAA,KAAK,QAAQ,CAAA;AACb,UAAA,KAAK,SAAS;YACZ+S,MAAM,GAAGE,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;AACpC,YAAA,IAAIqN,MAAM,CAAC6F,SAAS,CAACH,MAAM,CAAC,EAC1BA,MAAM,GAAGzF,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAC,CAAA;AACxC,YAAA,IAAIqN,MAAM,CAACE,KAAK,CAACwF,MAAM,CAAC,EAAEA,MAAM,GAAG3O,IAAI,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAA;AAC7D,YAAA,MAAA;AACF,UAAA;AACE,YAAA,MAAM,IAAIwC,KAAK,CAAkCxC,gCAAAA,GAAAA,IAAI,CAAG,CAAA;AAAC,SAAA;QAE7D5B,SAAQ,CAAA,EAAA,CAAA,MAAA,CAEDkQ,aAAa,CAACxD,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAChCqP,CAAAA,MAAM,GACHL,aAAa,CAACxD,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAEnCwJ,EAAAA,KAAK,CACN,CAAA;OACD;AACF,MAAA,SAAS,EAAC,WAAA;KACV,CAAA,eACFrM,+BAACgS,gBAAK,EAAA;MACJ,KAAK,EAAEtQ,IAAI,IAAI,EAAG;AAClB,MAAA,WAAW,EAAC,OAAO;AACnB,MAAA,GAAG,YAAUmB,KAAQ;AACrB,MAAA,IAAI,EAAC,MAAM;MACX,QAAQ,EAAE,SAACoP,QAAAA,CAAAA,EAAO,EAAK;AACrB,QAAA,IAAI5F,KAAK,EACP1K,SAAQ,CAACkQ,aAAa,EAAA,EAAA,CAAA,MAAA,CACjBxF,KAAK,CAACgC,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EACxBoP,CAAAA,EAAE,CAACE,MAAM,CAAChT,KAAK,CACZkN,EAAAA,KAAK,CAACgC,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CACzB,CAAA,CAAA;OACJ;AACF,MAAA,SAAS,EAAC,WAAW;AACrB,MAAA,KAAK,EAAE;AAAE9D,QAAAA,OAAO,EAAE+S,SAAS,GAAG,SAAS,GAAG,MAAA;AAAO,OAAA;AAAE,KAAA,CACnD,eACF9R,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC,eAAA;AAAe,KAAA,eAC5BA,+BAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEsR,yBAAQ;AACd,MAAA,OAAO,EAAE,SAAM,OAAA,GAAA;AACb;AACA3P,QAAAA,SAAQ,WAEDkQ,aAAa,CAACxD,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAC7BgP,aAAa,CAACxD,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAEnCwJ,EAAAA,KAAK,GACGA,EAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAACgC,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAAKwJ,KAAK,CAACgC,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA,GACpD5C,SAAS,CACd,CAAA;AACH,OAAA;KACA,CAAA,CACE,CACF,CACP,CAAA;AAAC,GAAA,CAAA;AAxEJ,EAAA,KAAK,IAAI4C,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGgP,aAAa,CAAC1H,MAAM,EAAEtH,KAAK,IAAI,CAAC,EAAE;AAAA,IAAA,KAAA,CAArDA,KAAK,CAAA,CAAA;AAyEd,GAAA;EAEA,oBACE7C,gBAAA,CAAA,aAAA,CAACA,gBAAK,CAAC,QAAQ,QACZ+R,cAAc,eACf/R,+BAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEsS,wBAAO;AACb,IAAA,OAAO,EAAE,SAAM,OAAA,GAAA;AACb;AACA3Q,MAAAA,SAAQ,WACFkQ,aAAa,EAAA,CAAEtO,IAAI,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAC,CAAA,CAAA,EAC7C8I,KAAK,GAAOA,EAAAA,CAAAA,MAAAA,CAAAA,KAAK,GAAE,EAAE,CAAA,CAAA,GAAIpM,SAAS,CACnC,CAAA;AACH,KAAA;AAAE,GAAA,CACF,CACa,CAAA;AAErB;;ACvHA;AACe,SAASsS,aAAa,CAsB5B,IAAA,EAAA;EAAA,IArBPvI,WAAW,QAAXA,WAAW;AACXrI,IAAAA,SAAQ,QAARA,QAAQ;AACR6Q,IAAAA,WAAW,QAAXA,WAAW;AACXC,IAAAA,UAAU,QAAVA,UAAU;AACVC,IAAAA,UAAU,QAAVA,UAAU;AACVC,IAAAA,YAAY,QAAZA,YAAY;AACZrF,IAAAA,IAAI,QAAJA,IAAI,CAAA;AAgBJ,EAAA,IAAA,SAAA,GAAoBxL,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;EAChB,IAAI5G,WAAW,CAAC7K,KAAK,EAAE;AACrB;AACA,IAAA,IAAIqT,WAAW,EAAE;AACf,MAAA,IAAMI,QAAQ,GAAG,OAAOJ,WAAW,CAAC,CAAC,CAAC,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAA;AACzE,MAAA,IAAII,QAAQ,KAAK,QAAQ,EACvB,oBACE5S,wCAAC,YAAY,EAAA;AACX,QAAA,eAAe,EAAEwS,WAAW,CAAC7P,GAAG,CAAC,UAACmO,GAAG,EAAA;AAAA,UAAA,OAAA,EAAA,GAAQA,GAAG,CAAA;AAAA,SAAE,CAAE;AACpD,QAAA,aAAa,EAAE9G,WAAW,CAAC7K,KAAK,CAAM,MAAA,CAAA;QACtC,QAAQ,EAAE,kBAACgS,aAA4B,EAAA;UAAA,OACrCxP,SAAQ,cAAMqI,WAAW,EAAA;AAAE7K,YAAAA,KAAK,EAAE;cAAE,MAAMgS,EAAAA,aAAAA;AAAc,aAAA;WAAI,CAAA,CAAA,CAAA;SAC7D;AACD,QAAA,WAAW,EAAC,eAAe;AAC3B,QAAA,IAAI,EAAE7D,IAAAA;OACN,CAAA,CAAA;AAEN,MAAA,IAAIsF,QAAQ,KAAK,QAAQ,EACvB,oBACE5S,wCAAC,YAAY,EAAA;AACX,QAAA,eAAe,EAAEwS,WAAW,CAAC7P,GAAG,CAAC,UAACmO,GAAG,EAAA;AAAA,UAAA,OAAA,EAAA,GAAQA,GAAG,CAAA;AAAA,SAAE,CAAE;AACpD,QAAA,aAAa,EAAE9G,WAAW,CAAC7K,KAAK,CAAM,MAAA,CAAA;QACtC,QAAQ,EAAE,kBAACgS,aAA4B,EAAA;UAAA,OACrCxP,SAAQ,cACHqI,WAAW,EAAA;AACd7K,YAAAA,KAAK,EAAE;AACL,cAAA,MAAA,EAAMgS,aAAa,CAACxO,GAAG,CAAC,UAACmO,GAAG,EAAA;AAAA,gBAAA,OAAKtE,MAAM,CAAC4F,UAAU,CAACtB,GAAG,CAAC,CAAA;AAAA,eAAA,CAAA;AACzD,aAAA;WACA,CAAA,CAAA,CAAA;SACH;AACD,QAAA,WAAW,EAAC,eAAe;AAC3B,QAAA,IAAI,EAAExD,IAAAA;OACN,CAAA,CAAA;AAER,KAAA;AACA;IACA,IAAImF,UAAU,KAAK,SAAS,EAAE;AAC5B,MAAA,oBACEzS,wCAAC,UAAU,EAAA;AACT,QAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB,UAAA,IAAIgK,WAAW,CAAC7K,KAAK,CAAA,MAAA,CAAK,IAAI6K,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,CAAC,CAAC,CAAC,EAAE;AACvDwC,YAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,cAAAA,KAAK,EAAE;AAAE,gBAAA,MAAA,EAAM,CAAC,KAAK,CAAA;AAAE,eAAA;aACvB,CAAA,CAAA,CAAA;AACJ,WAAC,MAAM;AACLwC,YAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,cAAAA,KAAK,EAAE;AAAE,gBAAA,MAAA,EAAM,CAAC,IAAI,CAAA;AAAE,eAAA;aACtB,CAAA,CAAA,CAAA;AACJ,WAAA;SACA;AACF,QAAA,SAAS,EAAE6K,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,IAAI6K,WAAW,CAAC7K,KAAK,CAAA,MAAA,CAAK,CAAC,CAAC,CAAE;AAC/D,QAAA,KAAK,EAAEuT,UAAAA;OACP,CAAA,CAAA;AAEN,KAAA;AACA;IACA,IAAID,UAAU,KAAK,QAAQ,EAAE;AAC3B,MAAA,IAAMI,OAAO,GAAI7I,WAAW,CAAC7K,KAAK,CAAkB,MAAA,CAAA,CAAA;MAEpD,oBACEa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG6S,OAAO,CAAClQ,GAAG,CAAC,UAACmQ,WAAW,EAAEjQ,KAAK,EAAA;QAAA,oBAC9B7C,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;UAAI,GAAG,EAAK4Q,SAAS,GAAiB/N,gBAAAA,GAAAA,KAAAA;SACnCvC,EAAAA,MAAM,CAACmE,IAAI,CAACqO,WAAW,CAAC,CAACnQ,GAAG,CAAC,UAACoF,GAAG,EAAK;AACrC,UAAA,IAAM+I,GAAG,GAAGgC,WAAW,CAAC/K,GAAG,CAAC,CAAA;UAC5B,oBACE/H,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,YAAA,GAAG,EAAE+H,GAAAA;WACR,eAAA/H,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAK+H,GAAG,EAAA,GAAA,CAAO,EAEb;YACEgL,MAAM,eACJ/S,wCAACgS,gBAAK,EAAA;cACJ,KAAK,EAAElB,GAAG,IAAI,EAAG;AACjB,cAAA,WAAW,EAAC,cAAc;AAC1B,cAAA,IAAI,EAAC,QAAQ;cACb,QAAQ,EAAE,SAACmB,QAAAA,CAAAA,EAAO,EAAK;AAAA,gBAAA,IAAA,SAAA,CAAA;AACrB,gBAAA,IAAMC,MAAM,GAAGD,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAA;gBAC9B,IAAM6T,QAAQ,GAAGhJ,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,CAAC0D,KAAK,CAAC,CAAA;AAC9ClB,gBAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,kBAAAA,KAAK,EAAE;oBACL,MACK0T,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,OAAO,CAACxE,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAAA,CAAA,QAAA,CAAA,EAAA,EACrBmQ,QAAQ,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CAAGjL,GAAG,CAAGmK,GAAAA,MAAM,gBACzBW,OAAO,CAACxE,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;AAE/B,mBAAA;iBACA,CAAA,CAAA,CAAA;eACF;AACF,cAAA,SAAS,EAAC,iBAAA;aAEb,CAAA;YACDoQ,MAAM,eACJjT,wCAACgS,gBAAK,EAAA;cACJ,KAAK,EAAElB,GAAG,IAAI,EAAG;AACjB,cAAA,WAAW,EAAC,cAAc;AAC1B,cAAA,IAAI,EAAC,QAAQ;cACb,QAAQ,EAAE,SAACmB,QAAAA,CAAAA,EAAO,EAAK;AAAA,gBAAA,IAAA,SAAA,CAAA;gBACrB,IAAMC,MAAM,GAAG1F,MAAM,CAAC4F,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;gBACjD,IAAM6T,QAAQ,GAAGhJ,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,CAAC0D,KAAK,CAAC,CAAA;AAC9ClB,gBAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,kBAAAA,KAAK,EAAE;oBACL,MACK0T,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,OAAO,CAACxE,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAAA,CAAA,QAAA,CAAA,EAAA,EACrBmQ,QAAQ,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CAAGjL,GAAG,CAAGmK,GAAAA,MAAM,gBACzBW,OAAO,CAACxE,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;AAE/B,mBAAA;iBACA,CAAA,CAAA,CAAA;eACF;AACF,cAAA,SAAS,EAAC,mBAAA;aAEb,CAAA;YACDqQ,KAAK,eACHlT,wCAACgS,gBAAK,EAAA;cACJ,KAAK,EAAErO,IAAI,CAACC,SAAS,CAACkN,GAAG,CAAC,IAAI,EAAG;AACjC,cAAA,WAAW,EAAC,eAAe;AAC3B,cAAA,IAAI,EAAC,QAAQ;cACb,QAAQ,EAAE,SAACmB,QAAAA,CAAAA,EAAO,EAAK;AAAA,gBAAA,IAAA,SAAA,CAAA;gBACrB,IAAIC,MAAM,GAAGpB,GAAG,CAAA;gBAChB,IAAI;kBACFoB,MAAM,GAAGvO,IAAI,CAACD,KAAK,CAACuO,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;iBACrC,CAAC,OAAOmH,KAAK,EAAE;AACd;AACAD,kBAAAA,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC,CAAA;AAC3C,iBAAA;gBACA,IAAM0M,QAAQ,GAAGhJ,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,CAAC0D,KAAK,CAAC,CAAA;AAC9ClB,gBAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,kBAAAA,KAAK,EAAE;oBACL,MACK0T,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,OAAO,CAACxE,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAAA,CAAA,QAAA,CAAA,EAAA,EACrBmQ,QAAQ,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CAAGjL,GAAG,CAAGmK,GAAAA,MAAM,gBACzBW,OAAO,CAACxE,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;AAE/B,mBAAA;iBACA,CAAA,CAAA,CAAA;eACF;AACF,cAAA,SAAS,EAAC,iBAAA;aAEb,CAAA;YACDsQ,MAAM,eACJnT,wCAACgS,gBAAK,EAAA;cACJ,KAAK,EAAErO,IAAI,CAACC,SAAS,CAACkN,GAAG,CAAC,IAAI,EAAG;AACjC,cAAA,WAAW,EAAC,gBAAgB;AAC5B,cAAA,IAAI,EAAC,QAAQ;cACb,QAAQ,EAAE,SAACmB,QAAAA,CAAAA,EAAO,EAAK;AAAA,gBAAA,IAAA,SAAA,CAAA;gBACrB,IAAIC,MAAM,GAAGpB,GAAG,CAAA;gBAChB,IAAI;kBACFoB,MAAM,GAAGvO,IAAI,CAACD,KAAK,CAACuO,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;iBACrC,CAAC,OAAOmH,KAAK,EAAE;AACd;AACAD,kBAAAA,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC,CAAA;AAC5C,iBAAA;gBACA,IAAM0M,QAAQ,GAAGhJ,WAAW,CAAC7K,KAAK,CAAK,MAAA,CAAA,CAAC0D,KAAK,CAAC,CAAA;AAC9ClB,gBAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,kBAAAA,KAAK,EAAE;oBACL,MACK0T,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,OAAO,CAACxE,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAAA,CAAA,QAAA,CAAA,EAAA,EACrBmQ,QAAQ,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CAAGjL,GAAG,CAAGmK,GAAAA,MAAM,gBACzBW,OAAO,CAACxE,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;AAE/B,mBAAA;iBACA,CAAA,CAAA,CAAA;eACF;AACF,cAAA,SAAS,EAAC,iBAAA;AAAiB,aAAA,CAAA;AAGjC,WAAC,CAAC,OAAOiO,GAAG,CAAC,CAEX,CAAA;SAET,CAAC,eACF9Q,yBAAA,CAAA,aAAA,CAAC,eAAe,EAAA;AACd,UAAA,IAAI,EAAEsR,yBAAQ;AACd,UAAA,OAAO,EAAE,SAAA,OAAA,GAAA;YAAA,OACP3P,SAAQ,cACHqI,WAAW,EAAA;AACd7K,cAAAA,KAAK,EAAE;AACL,gBAAA,MAAA,EAAA,EAAA,CAAA,MAAA,CACK0T,OAAO,CAACxE,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EACvBgQ,OAAO,CAACxE,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;AAE/B,eAAA;aACA,CAAA,CAAA,CAAA;AAAA,WAAA;AACH,SAAA,CACD,CACC,CAAA;OACN,CAAC,eACF7C,yBAAA,CAAA,aAAA,CAAC,eAAe,EAAA;AACd,QAAA,IAAI,EAAEsS,wBAAO;AACb,QAAA,OAAO,EAAE,SAAM,OAAA,GAAA;UACb,IAAMc,OAAO,GAAG,EAAE,CAAA;UAClB,IAAMC,OAAO,GAAGV,YAAY,GAAGA,YAAY,CAACrL,UAAU,GAAG,EAAE,CAAA;UAC3DhH,MAAM,CAACmE,IAAI,CAAC4O,OAAO,CAAC,CAAC3O,OAAO,CAAC,UAACqD,GAAG,EAAK;AACpC,YAAA,IACEsL,OAAO,CAACtL,GAAG,CAAC,CAACxE,IAAI,KAAK,QAAQ,IAC9B8P,OAAO,CAACtL,GAAG,CAAC,CAACxE,IAAI,KAAK,SAAS,EAC/B;AACA6P,cAAAA,OAAO,CAACrL,GAAG,CAAC,GAAG,CAAC,CAAA;AAClB,aAAC,MAAM,IAAIsL,OAAO,CAACtL,GAAG,CAAC,CAACxE,IAAI,KAAK,OAAO,IAAI8P,OAAO,CAACtL,GAAG,CAAC,QAAK,EAAE;AAC7DqL,cAAAA,OAAO,CAACrL,GAAG,CAAC,GAAG,EAAE,CAAA;AACnB,aAAC,MAAM,IACLsL,OAAO,CAACtL,GAAG,CAAC,CAACxE,IAAI,KAAK,QAAQ,IAC9B8P,OAAO,CAACtL,GAAG,CAAC,CAACT,UAAU,EACvB;AACA8L,cAAAA,OAAO,CAACrL,GAAG,CAAC,GAAG,EAAE,CAAA;AACnB,aAAC,MAAM;AACLqL,cAAAA,OAAO,CAACrL,GAAG,CAAC,GAAG,EAAE,CAAA;AACnB,aAAA;AACF,WAAC,CAAC,CAAA;AACFpG,UAAAA,SAAQ,cACHqI,WAAW,EAAA;AACd7K,YAAAA,KAAK,EAAE;cAAE,MAAU0T,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,OAAO,GAAEO,OAAO,CAAA,CAAA;AAAE,aAAA;WACrC,CAAA,CAAA,CAAA;AACJ,SAAA;AAAE,OAAA,CACF,CACE,CAAA;AAEV,KAAA;AACA,IAAA,oBACEpT,wCAAC,eAAe,EAAA;AACd,MAAA,aAAa,EAAEgK,WAAW,CAAC7K,KAAK,CAAM,MAAA,CAAA;MACtC,QAAQ,EAAE,kBAACmU,OAAmB,EAAA;QAAA,OAC5B3R,SAAQ,cAAMqI,WAAW,EAAA;AAAE7K,UAAAA,KAAK,EAAE;YAAE,MAAMmU,EAAAA,OAAAA;AAAQ,WAAA;SAAI,CAAA,CAAA,CAAA;OACvD;MACD,IAAI,EAAEb,UAAU,IAAI,QAAS;AAC7B,MAAA,SAAS,EAAE,KAAA;KACX,CAAA,CAAA;AAEN,GAAC,MAAM;AACL,IAAA,oBAAOzS,yBAA4B,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,qBAAA,CAAA,CAAA;AACrC,GAAA;AACF;;ACtQA;AACe,SAASuT,qBAAqB,CA0BpC,IAAA,EAAA;EAAA,IAzBPvJ,WAAW,QAAXA,WAAW;AACX9E,IAAAA,aAAa,QAAbA,aAAa;AACboI,IAAAA,IAAI,QAAJA,IAAI;AACJ3L,IAAAA,SAAQ,QAARA,QAAQ;AACR6R,IAAAA,QAAQ,QAARA,QAAQ;AACRhB,IAAAA,WAAW,QAAXA,WAAW;AACXC,IAAAA,UAAU,QAAVA,UAAU;AACVC,IAAAA,UAAU,QAAVA,UAAU;AACVC,IAAAA,YAAY,QAAZA,YAAY,CAAA;AAkBZ,EAAA,IAAA,SAAA,GAAoB7Q,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;EAChB,oBACE5Q,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,2BAAA;AAA2B,GAAA,eACxCA,yBACyB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,wBAAA,EAAA,GAAG,eAC1BA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAQ,OAAA;AACxB,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,wDAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAAC,YAAY,EAAA;AACX,IAAA,eAAe,EACbkF,aAAa,CAACsG,MAAM,CAAC,UAAC9J,IAAI,EAAA;MAAA,OAAKA,IAAI,KAAKgR,UAAU,CAAA;AAAA,KAAA,CAAC,IAAI,EACxD;IACD,aAAa,EAAE1I,WAAW,CAACzI,QAAS;IACpC,QAAQ,EAAE,kBAAC4P,aAA4B,EAAA;MAAA,OACrCxP,SAAQ,cAAMqI,WAAW,EAAA;AAAEzI,QAAAA,QAAQ,YAAM4P,aAAa,CAAA;OAAI,CAAA,CAAA,CAAA;KAC3D;AACD,IAAA,WAAW,EAAC,uBAAuB;AACnC,IAAA,IAAI,EAAE7D,IAAAA;AAAK,GAAA,CACX,eACFtN,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EACO0S,UAAU,EAAA,SAAA,EAAQ1I,WAAW,CAAC7K,KAAK,GAAG,YAAY,GAAG,UAAU,CACjE,eACLa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAO,EAAEiL,WAAW,CAAC7K,KAAK,GAAG,OAAO,GAAG,MAAA;AAAO,KAAA;AAAE,GAAA,eAC5Da,wCAAC,aAAa,EAAA;AACZ,IAAA,WAAW,EAAEgK,WAAY;IACzB,QAAQ,EAAE,kBAACyJ,cAGV,EAAA;MAAA,OAAK9R,SAAQ,CAAC8R,cAAc,CAAC,CAAA;KAAC;AAC/B,IAAA,WAAW,EAAEjB,WAAY;AACzB,IAAA,UAAU,EAAEC,UAAW;AACvB,IAAA,UAAU,EAAEC,UAAW;AACvB,IAAA,YAAY,EAAEC,YAAa;AAC3B,IAAA,IAAI,EAAErF,IAAAA;GACN,CAAA,CACE,eACNtN,yBAAA,CAAA,aAAA,CAAC,eAAe,EAAA;AAAC,IAAA,IAAI,EAAEsR,yBAAQ;AAAC,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,MAAA,OAAMkC,QAAQ,EAAE,CAAA;AAAA,KAAA;AAAC,GAAA,CAAG,CACzD,CAAA;AAEV;;ACnEA,IAAM5U,WAAS,GAAGC,wBAAe,CAAC;AAChC6U,EAAAA,eAAe,EAAE;AACf,IAAA,OAAO,EAAE;AAAEhT,MAAAA,MAAM,EAAE,SAAA;KAAW;AAC9B,IAAA,SAAS,EAAE;AAAEI,MAAAA,UAAU,EAAE,KAAA;KAAO;AAChC,IAAA,MAAM,EAAE;AAAEqB,MAAAA,YAAY,EAAE,MAAA;KAAQ;AAChC,IAAA,MAAM,EAAE;AAAEtB,MAAAA,QAAQ,EAAE,KAAA;KAAO;AAC3B,IAAA,2BAA2B,EAAE;AAAEA,MAAAA,QAAQ,EAAE,QAAQ;AAAEsB,MAAAA,YAAY,EAAE,KAAA;KAAO;AACxE,IAAA,+BAA+B,EAAE;AAC/BwR,MAAAA,SAAS,EAAE,MAAM;AACjB,MAAA,8BAA8B,EAAE;AAC9B/S,QAAAA,OAAO,EAAE,KAAK;AACdgT,QAAAA,MAAM,EAAE,gBAAgB;AACxBC,QAAAA,YAAY,EAAE,KAAK;AACnBC,QAAAA,MAAM,EAAE,KAAK;AACb,QAAA,KAAK,EAAE;AAAEH,UAAAA,SAAS,EAAE,SAAA;AAAU,SAAA;AAChC,OAAA;KACD;AACD,IAAA,KAAK,EAAE;AAAE9S,MAAAA,QAAQ,EAAE,QAAA;KAAU;AAC7B,IAAA,oBAAoB,EAAE;AACpB9B,MAAAA,OAAO,EAAE,OAAA;AACX,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;;AAEF;AACA,SAASgV,2BAA2B,CAClC9J,UAGE,EACF;EACA,IAAI+J,UAAU,GAAG,IAAI,CAAA;AACrB,EAAA,IAAI/J,UAAU,IAAI1B,KAAK,CAACC,OAAO,CAACyB,UAAU,CAAC,IAAIA,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;AACpEF,IAAAA,UAAU,CAACvF,OAAO,CAAC,UAACsF,WAAW,EAAK;MAClC,IAAI,CAACA,WAAW,CAAC7K,KAAK,IAAI,CAAC6K,WAAW,CAAC7K,KAAK,CAAA,MAAA,CAAK,EAAE;AACjD6U,QAAAA,UAAU,GAAG,KAAK,CAAA;AACpB,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAC,MAAM;AACLA,IAAAA,UAAU,GAAG,KAAK,CAAA;AACpB,GAAA;AAEA,EAAA,OAAOA,UAAU,CAAA;AACnB,CAAA;AAee,SAASC,eAAe,CAM9B,IAAA,EAAA;EAAA,IALPvK,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAA,SAAA,GAAoBG,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;EAChB,IAAMhR,OAAO,GAAGhB,WAAS,EAAE,CAAA;EAC3B,IAAMoV,UAAU,GAAGD,2BAA2B,CAACrK,UAAU,CAACO,UAAU,IAAI,EAAE,CAAC,CAAA;EAC3E,oBACEjK,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAA,kBAAA,GAAqBJ,OAAO,CAAC8T,eAAAA;AAAkB,GAAA,eAC3D1T,yBACe,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,cAAA,EAAA,GAAG,eAChBA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAa,YAAA;AAC7B,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,4DAAA;GACL,CAAA,CACC,EACJ,CAAC,CAAClH,UAAU,CAACO,UAAU,IAAIP,UAAU,CAACO,UAAU,CAACE,MAAM,GAAG,CAAC,iBAC1DnK,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAC,YAAY,EAAA;AACX,IAAA,YAAY,EAAEgU,UAAU,GAAG,OAAO,GAAG,YAAa;AAClD,IAAA,UAAU,EAAE,KAAM;AAClB,IAAA,OAAO,EAAE,CACP;AACE7U,MAAAA,KAAK,EAAE,YAAY;AACnBE,MAAAA,KAAK,EAAE,sBAAA;AACT,KAAC,EACD;AACEF,MAAAA,KAAK,EAAE,OAAO;MACdE,KAAK,eACHW,wCAACA,yBAAK,CAAC,QAAQ,EACa,IAAA,EAAA,2BAAA,EAAA,GAAG,eAC7BA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;QACN,EAAE,EAAKJ,SAAS,GAAc,aAAA;AAC9B,QAAA,IAAI,EAAC,MAAM;AACX,QAAA,IAAI,EAAC,0EAAA;OACL,CAAA,CAAA;AAGR,KAAC,CACD;IACF,QAAQ,EAAE,SAACsD,QAAAA,CAAAA,SAAS,EAAK;MACvB,IAAIxK,UAAU,CAACO,UAAU,EAAE;AACzB,QAAA,IAAM2E,aAAa,GAAA,EAAA,CAAA,MAAA,CAAOlF,UAAU,CAACO,UAAU,CAAC,CAAA;QAChD,IAAIiK,SAAS,KAAK,YAAY,EAAE;UAC9BxK,UAAU,CAACO,UAAU,CAACvF,OAAO,CAAC,UAACsF,WAAW,EAAEnH,KAAK,EAAK;AACpD+L,YAAAA,aAAa,CAAC/L,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EACfmH,WAAW,EAAA;AACd7K,cAAAA,KAAK,EAAEc,SAAAA;aACR,CAAA,CAAA;AACH,WAAC,CAAC,CAAA;AACJ,SAAC,MAAM;UACLyJ,UAAU,CAACO,UAAU,CAACvF,OAAO,CAAC,UAACsF,WAAW,EAAEnH,KAAK,EAAK;AACpD+L,YAAAA,aAAa,CAAC/L,KAAK,CAAC,GAAA,QAAA,CAAA,EAAA,EACfmH,WAAW,EAAA;AACd7K,cAAAA,KAAK,EAAE;gBAAE,MAAM,EAAA,EAAA;AAAG,eAAA;aACnB,CAAA,CAAA;AACH,WAAC,CAAC,CAAA;AACJ,SAAA;AACAwC,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbO,UAAAA,UAAU,EAAE2E,aAAAA;SACZ,CAAA,CAAA,CAAA;AACJ,OAAA;AACF,KAAA;GACA,CAAA,CAEL,eACD5O,yBAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA;AAAC,IAAA,UAAU,EAAE0J,UAAAA;AAAW,GAAA,CAAG,eAC7C1J,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,4BAAA;AAA4B,GAAA,EACxC0J,UAAU,CAACO,UAAU,GAClBP,UAAU,CAACO,UAAU,CAACtH,GAAG,CAAC,UAACqH,WAAW,EAAEnH,KAAK,EAAA;AAAA,IAAA,oBAC3C7C,wCAAC,qBAAqB,EAAA;AACpB,MAAA,WAAW,EAAEgK,WAAY;AACzB,MAAA,aAAa,EAAEN,UAAU,CAACxE,aAAa,IAAI,EAAG;MAC9C,WAAW,EAAEwE,UAAU,CAAM,MAAA,CAAA;MAC7B,UAAU,EAAEA,UAAU,CAACnG,IAAK;MAC5B,UAAU,EAAEmG,UAAU,CAAChI,IAAK;MAC5B,YAAY,EAAEgI,UAAU,CAAC/C,MAAO;MAChC,IAAI,EAAE+C,UAAU,CAAC4D,IAAK;MACtB,GAAG,EAAKsD,SAAS,GAAA,cAAA,GAAe/N,KAAQ;MACxC,QAAQ,EAAE,SAAC4Q,QAAAA,CAAAA,cAGV,EAAK;QACJ,IAAM7E,aAAa,GAAGlF,UAAU,CAACO,UAAU,aACnCP,UAAU,CAACO,UAAU,CAAA,GACzB,EAAE,CAAA;AACN2E,QAAAA,aAAa,CAAC/L,KAAK,CAAC,GAAG4Q,cAAc,CAAA;AACrC9R,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbO,UAAAA,UAAU,EAAE2E,aAAAA;SACZ,CAAA,CAAA,CAAA;OACF;AACF,MAAA,QAAQ,EAAE,SAAM,QAAA,GAAA;QACd,IAAMA,aAAa,GAAGlF,UAAU,CAACO,UAAU,aACnCP,UAAU,CAACO,UAAU,CAAA,GACzB,EAAE,CAAA;AACNtI,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbO,UAAAA,UAAU,YACL2E,aAAa,CAACP,KAAK,CAAC,CAAC,EAAExL,KAAK,CAAC,EAC7B+L,aAAa,CAACP,KAAK,CAACxL,KAAK,GAAG,CAAC,CAAC,CAAA;SAEnC,CAAA,CAAA,CAAA;AACJ,OAAA;KACA,CAAA,CAAA;GACH,CAAC,GACF,EAAE,eAEN7C,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC,MAAM;AAAC,IAAA,EAAE,EAAK4Q,SAAS,GAAA,gBAAA;AAAiB,GAAA,eACtD5Q,wCAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEsS,wBAAO;AACb,IAAA,OAAO,EAAE,SAAM,OAAA,GAAA;MACb,IAAM1D,aAAa,GAAGlF,UAAU,CAACO,UAAU,aACnCP,UAAU,CAACO,UAAU,CAAA,GACzB,EAAE,CAAA;MACN2E,aAAa,CAACzH,IAAI,CAAC;AACjB5F,QAAAA,QAAQ,EAAE,EAAE;QACZpC,KAAK,EAAE6U,UAAU,GAAG;UAAE,MAAM,EAAA,EAAA;AAAG,SAAC,GAAG/T,SAAAA;AACrC,OAAC,CAAC,CAAA;AACF0B,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbO,QAAAA,UAAU,EAAE2E,aAAAA;OACZ,CAAA,CAAA,CAAA;AACJ,KAAA;GACA,CAAA,CACG,eACP5O,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,IAAA,SAAS,EAAC,KAAK;AACf,IAAA,MAAM,EAAKmN,SAAS,GAAA,gBAAA;AAAiB,GAAA,EAAA,8EAAA,CAIjB,CAClB,CACF,CAAA;AAEV;;ACpMA,IAAMhS,WAAS,GAAGC,wBAAe,CAAC;AAChCsV,EAAAA,SAAS,EAAE;AACT,IAAA,sBAAsB,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAM;AAAEC,MAAAA,aAAa,EAAE,MAAA;KAAQ;AACrE,IAAA,uBAAuB,EAAE;AAAEzT,MAAAA,OAAO,EAAE,KAAA;KAAO;AAC3C,IAAA,wBAAwB,EAAE;AAAED,MAAAA,SAAS,EAAE,MAAM;AAAEwB,MAAAA,YAAY,EAAE,MAAA;KAAQ;AACrE,IAAA,oBAAoB,EAAE;AAAEtB,MAAAA,QAAQ,EAAE,MAAA;KAAQ;AAC1C,IAAA,MAAM,EAAE;AAAEA,MAAAA,QAAQ,EAAE,MAAA;KAAQ;AAC5B,IAAA,MAAM,EAAE;AAAEA,MAAAA,QAAQ,EAAE,MAAM;AAAEsB,MAAAA,YAAY,EAAE,CAAA;KAAG;AAC7C,IAAA,qCAAqC,EAAE;AACrCA,MAAAA,YAAY,EAAE,KAAK;AACnBC,MAAAA,MAAM,EAAE,MAAA;KACT;AACD,IAAA,8CAA8C,EAAE;AAAEgB,MAAAA,KAAK,EAAE,MAAA;KAAQ;AACjE,IAAA,uBAAuB,EAAE;AACvB,MAAA,KAAK,EAAE;AAAEpE,QAAAA,WAAW,EAAE,QAAQ;AAAEoD,QAAAA,MAAM,EAAE,MAAM;AAAErD,QAAAA,OAAO,EAAE,cAAA;AAAe,OAAA;KACzE;AACD,IAAA,sBAAsB,EAAE;AACtB,MAAA,SAAS,EAAE;AAAE+U,QAAAA,MAAM,EAAE,GAAG;AAAE1R,QAAAA,MAAM,EAAE,MAAA;OAAQ;AAC1CD,MAAAA,YAAY,EAAE,KAAA;AAChB,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAASmS,SAAS,CAiBxB,IAAA,EAAA;EAAA,IAhBPC,cAAc,QAAdA,cAAc;AACd5S,IAAAA,QAAQ,QAARA,QAAQ;AACRT,IAAAA,MAAM,QAANA,MAAM;AACNsT,IAAAA,OAAO,QAAPA,OAAO;AACPzG,IAAAA,sBAAsB,QAAtBA,sBAAsB,CAAA;EAatB,IAAMnO,OAAO,GAAGhB,WAAS,EAAE,CAAA;AAC3B;AACA,EAAA,IAAA,eAAA,GACEoB,gBAAK,CAAC8B,QAAQ,CAACyS,cAAc,CAAC;IADzBE,mBAAmB,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,iBAAiB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;EAG7C1U,gBAAK,CAAC2U,SAAS,CAAC,YAAM;IACpBD,iBAAiB,CAACH,cAAc,CAAC,CAAA;AACnC,GAAC,EAAE,CAACA,cAAc,CAAC,CAAC,CAAA;AACpB,EAAA,oBACEvU,+BAAC4U,gBAAK,EAAA;AAAC,IAAA,MAAM,EAAE1T,MAAO;AAAC,IAAA,WAAA,EAAU,YAAY;IAAC,SAAS,EAAEtB,OAAO,CAACuU,SAAAA;AAAU,GAAA,eACzEnU,+BAAC6U,sBAAW,EAAA;AAAC,IAAA,SAAS,EAAC,mBAAA;GACrB,eAAA7U,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAO,EAAEwV,cAAc,CAAClH,OAAO,GAAG,MAAM,GAAG,SAAA;AAAU,KAAA;AAAE,GAAA,eACnErN,gBAA4B,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,qBAAA,CAAA,CACxB,CACM,eACdA,+BAAC8U,oBAAS,EAAA;AAAC,IAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,eACvC9U,+BAAC,sBAAsB,EAAA;AACrB,IAAA,UAAU,EAAEyU,mBAAoB;IAChC,QAAQ,EAAE,SAACjG,QAAAA,CAAAA,QAAa,EAAK;AAC3BkG,MAAAA,iBAAiB,CACZD,QAAAA,CAAAA,EAAAA,EAAAA,mBAAmB,EACnBjG,QAAQ,CACX,CAAA,CAAA;AACJ,KAAA;AAAE,GAAA,CACF,eACFxO,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eACEA,gBACc,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,aAAA,EAAA,GAAG,eACfA,gBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,IAAI,EAAC,gGAAgG;AACrG,IAAA,MAAM,EAAC,QAAQ;AACf,IAAA,GAAG,EAAC,qBAAA;AAAqB,GAAA,eAEzBA,+BAACgR,OAAO,EAAA;AACN,IAAA,EAAE,EAAC,qBAAqB;AACxB,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,kCAAA;AAAkC,GAAA,CACvC,CACA,CACD,eACLhR,gBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EACHyC,mBAAmB,CAAC,WAAW,CAAC,GAC5BA,mBAAmB,CAAC,WAAW,CAAC,GAChC,EACL;AACD,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;AACb,IAAA,GAAG,EAAE,CAAE;IACP,QAAQ,EAAE,SAACxC,QAAAA,CAAAA,EAAyC,EAAK;AACvDyC,MAAAA,iBAAiB,cACZD,mBAAmB,EAAA;AACtB,QAAA,WAAW,EAAExC,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACvB,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,iBAAA;GACV,CAAA,CACE,eACNa,gBAAA,CAAA,aAAA,CAAC,eAAe,EAAA;AACd,IAAA,UAAU,EAAGyU,mBAAwC;IACrD,QAAQ,EAAE,SAACjG,QAAAA,CAAAA,QAAa,EAAK;AAC3BkG,MAAAA,iBAAiB,CACZD,QAAAA,CAAAA,EAAAA,EAAAA,mBAAmB,EACnBjG,QAAQ,CACX,CAAA,CAAA;AACJ,KAAA;AAAE,GAAA,CACF,CACQ,eACZxO,gBAAA,CAAA,aAAA,CAAC+U,sBAAW,EAAA,IAAA,eACV/U,+BAACgV,iBAAM,EAAA;AACL,IAAA,OAAO,EAAE,SAAM,OAAA,GAAA;AACbR,MAAAA,OAAO,EAAE,CAAA;MACT7S,QAAQ,CAAC8S,mBAAmB,CAAC,CAAA;KAC7B;AACF,IAAA,KAAK,EAAC,SAAA;GAGC,EAAA,MAAA,CAAA,eACTzU,+BAACgV,iBAAM,EAAA;AACL,IAAA,OAAO,EAAE,SAAM,OAAA,GAAA;AACbR,MAAAA,OAAO,EAAE,CAAA;MACTE,iBAAiB,CAACH,cAAc,CAAC,CAAA;KACjC;AACF,IAAA,KAAK,EAAC,WAAA;AAAW,GAAA,EAAA,QAAA,CAGV,CACG,CACR,CAAA;AAEZ;;AC9IA;AACe,SAASU,sBAAsB,CAYrC,IAAA,EAAA;EAAA,IAXPlR,QAAQ,QAARA,QAAQ;AACR2F,IAAAA,UAAU,QAAVA,UAAU;AACV/H,IAAAA,QAAQ,QAARA,QAAQ;AACRiL,IAAAA,IAAI,QAAJA,IAAI;AACJ5I,IAAAA,aAAa,QAAbA,aAAa,CAAA;AAQb,EAAA,IAAMkR,QAAQ,GAAG7Q,WAAW,CAACN,QAAQ,EAAEC,aAAa,CAAC,CAAA;EACrD,oBACEhE,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eACEA,+BAAC,QAAQ,EAAA;AAAC,IAAA,UAAU,EAAE0J,UAAW;AAAC,IAAA,QAAQ,EAAE/H,QAAS;IAAC,IAAI,EAAEiL,IAAI,IAAI,EAAC;AAAE,GAAA,CAAG,CACtE,CAAA;AAEV;;ACRA;AACe,SAASuI,0BAA0B,CAYzC,IAAA,EAAA;EAAA,IAXPzL,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ;AACRqC,IAAAA,aAAa,QAAbA,aAAa;AACb4I,IAAAA,IAAI,QAAJA,IAAI;AAAA,IAAA,qBAAA,GAAA,IAAA,CACJwI,mBAAmB;AAAnBA,IAAAA,mBAAmB,sCAAG,IAAI,GAAA,qBAAA,CAAA;AAQ1B,EAAA,IAAA,eAAA,GAAgCpV,yBAAK,CAAC8B,QAAQ,CAAC4H,UAAU,CAAChI,IAAI,CAAC;IAAxD2T,QAAQ,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,WAAW,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAC5B,EAAA,IAAA,gBAAA,GAAgCtV,yBAAK,CAAC8B,QAAQ,CAAC,IAAI,CAAC;IAA7CyT,QAAQ,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,WAAW,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAC5B,EAAA,IAAA,gBAAA,GAAoCxV,yBAAK,CAAC8B,QAAQ,CAAC4H,UAAU,CAACrI,KAAK,CAAC;IAA7DoU,UAAU,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,aAAa,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAChC,EAAA,IAAA,gBAAA,GAAgD1V,yBAAK,CAAC8B,QAAQ,CAC5D4H,UAAU,CAACkB,WAAW,CACvB;IAFM+K,gBAAgB,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,mBAAmB,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAG5C,EAAA,IAAA,gBAAA,GAAoB5V,yBAAK,CAAC8B,QAAQ,CAACuO,WAAW,EAAE,CAAC;IAA1CO,SAAS,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;EAChB,IAAMiF,WAAW,GAAGtR,iBAAiB,CAACmF,UAAU,CAAC3F,QAAQ,EAAEC,aAAa,CAAC,CAAA;EAEzE,IAAM8R,UAAU,GAAG,SAAbA,UAAU,CAAIC,SAAiB,EAAEC,YAAoB,EAAa;IACtE,OAAOpJ,IAAI,IAAIA,IAAI,CAACqJ,MAAM,IAAI,OAAOrJ,IAAI,CAACqJ,MAAM,CAACF,SAAS,CAAC,KAAK,QAAQ,GACpEnJ,IAAI,CAACqJ,MAAM,CAACF,SAAS,CAAC,GACtBC,YAAY,CAAA;GACjB,CAAA;AAED,EAAA,IAAME,eAAe,GAAGJ,UAAU,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAA;AACpE,EAAA,IAAMK,gBAAgB,GAAGL,UAAU,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAA;AACvE,EAAA,IAAMM,gBAAgB,GAAGN,UAAU,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAA;AACtE,EAAA,IAAMO,cAAc,GAAGP,UAAU,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAA;AAEjE,EAAA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;AAChC,IAAA,IAAMC,mBAAmB,GACvB7M,UAAU,CAACb,cAAc,IACzBvI,MAAM,CAACmE,IAAI,CAACiF,UAAU,CAACb,cAAc,CAAC,CAACsB,MAAM,KAAK,CAAC,CAAA;;AAErD;AACA,IAAA,IAAIqM,SAAS,GAAGlW,MAAM,CAACmE,IAAI,CAACoR,WAAW,CAAC,CAACrK,MAAM,CAC7C,UAACzD,GAAG,EAAA;AAAA,MAAA,OAAKA,GAAG,KAAK,KAAK,IAAIwO,mBAAmB,CAAA;KAC9C,CAAA,CAAA;AACD;IACA,IAAI3J,IAAI,EAAE4J,SAAS,GAAG7G,aAAa,CAAC6G,SAAS,EAAE5J,IAAI,CAAC6J,qBAAqB,CAAC,CAAA;AAE1E,IAAA,OAAOD,SAAS,CACb7T,GAAG,CAAC,UAACoF,GAAG,EAAA;MAAA,OAAM;AAAE5I,QAAAA,KAAK,EAAE4I,GAAG;QAAE1I,KAAK,EAAEwW,WAAW,CAAC9N,GAAG,CAAA;OAAG,CAAA;AAAA,KAAC,CAAC,CACvD2O,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAA;MAAA,OAAKD,CAAC,CAACtX,KAAK,CAACwX,aAAa,CAACD,CAAC,CAACvX,KAAK,CAAC,CAAA;KAAC,CAAA,CAAA;GAClD,CAAA;AAED,EAAA,oBACEW,yBAAC,CAAA,aAAA,CAAAA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gBAAA;AAAgB,GAAA,EAC5BoV,mBAAmB,iBAClBpV,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,YAAA;AAAY,GAAA,eACzBA,yBACMkW,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,eAAe,GACnB,GAAA,eAAAlW,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACC,cAAc,KAAK,QAAQ,GACvDnK,IAAI,CAACkK,mBAAmB,CAACC,cAAc,GACvC,iCACL;IACD,EAAE,EAAKnG,SAAS,GAAY,WAAA;AAC5B,IAAA,IAAI,EAAC,MAAA;AAAM,GAAA,CACX,CACC,eAEL5Q,yBAAA,CAAA,aAAA,CAACgX,oBAAS,EAAA,IAAA,eACRhX,wCAACgS,gBAAK,EAAA;IACJ,OAAO,EAAEuD,QAAQ,KAAK,IAAK;IAC3B,KAAK,EAAEF,QAAQ,IAAI,EAAG;AACtB,IAAA,WAAW,EAAC,KAAK;AACjB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAACpD,EAAyC,EAAA;AAAA,MAAA,OAClDqD,WAAW,CAACrD,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;KAC7B;IACD,MAAM,EAAE,SAAC8S,MAAAA,CAAAA,EAAyC,EAAK;AACrD,MAAA,IAAQ9S,KAAK,GAAK8S,EAAE,CAACE,MAAM,CAAnBhT,KAAK,CAAA;MACb,IACEA,KAAK,KAAKuK,UAAU,CAAChI,IAAI,IACzB,EACEgI,UAAU,CAACxE,aAAa,IACxBwE,UAAU,CAACxE,aAAa,CAACqC,QAAQ,CAACpI,KAAK,CAAC,CACzC,EACD;QACAqW,WAAW,CAAC,IAAI,CAAC,CAAA;AACjB7T,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbhI,UAAAA,IAAI,EAAEvC,KAAAA;SACN,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACLmW,QAAAA,WAAW,CAAC5L,UAAU,CAAChI,IAAI,CAAC,CAAA;QAC5B8T,WAAW,CAAA,IAAA,GAAKrW,KAAK,GAAuB,uBAAA,CAAA,CAAA;QAC5CwC,SAAQ,CAAA,QAAA,CAAA,EAAA,EAAM+H,UAAU,CAAG,CAAA,CAAA;AAC7B,OAAA;KACA;AACF,IAAA,SAAS,EAAC,WAAA;GACV,CAAA,eACF1J,wCAACiX,uBAAY,EAAA,IAAA,EAAE1B,QAAQ,CAAgB,CAC7B,CAEf,eACDvV,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,SAAS,EAAA,aAAA,IACP0J,UAAU,CAAC5D,IAAI,KAAK7F,SAAS,GAAG,EAAE,GAAG,gBAAgB,CAAA;AACpD,GAAA,eAEHD,yBACMmW,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,gBAAgB,GACpB,GAAA,eAAAnW,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACI,eAAe,KAAK,QAAQ,GACxDtK,IAAI,CAACkK,mBAAmB,CAACI,eAAe,GACxC,qCACL;IACD,EAAE,EAAKtG,SAAS,GAAa,YAAA;AAC7B,IAAA,IAAI,EAAC,MAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEyD,UAAU,IAAI,EAAG;AACxB,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAACxD,EAAyC,EAAA;AAAA,MAAA,OAClDyD,aAAa,CAACzD,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;KAC/B;IACD,MAAM,EAAE,SAAC8S,MAAAA,CAAAA,EAAyC,EAAK;AACrDtQ,MAAAA,SAAQ,cAAM+H,UAAU,EAAA;AAAErI,QAAAA,KAAK,EAAE4Q,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAAQ,CAAA,CAAA,CAAA;KACnD;AACF,IAAA,SAAS,EAAC,WAAA;GACV,CAAA,CACE,CACF,eACNa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gBAAA;GACb,eAAAA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,mBAAgB0J,UAAU,CAAC5D,IAAI,GAAG,gBAAgB,GAAG,EAAE,CAAA;AAAG,GAAA,eAEnE9F,yBACMoW,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,gBAAgB,GACpB,GAAA,eAAApW,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACK,eAAe,KAAK,QAAQ,GACxDvK,IAAI,CAACkK,mBAAmB,CAACK,eAAe,GACxC,2CACL;IACD,EAAE,EAAKvG,SAAS,GAAmB,kBAAA;AACnC,IAAA,IAAI,EAAC,MAAA;AAAM,GAAA,CACX,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgX,oBAAS,EAAA,IAAA,eACRhX,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAE2D,gBAAgB,IAAI,EAAG;AAC9B,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAAC1D,EAAyC,EAAA;AAAA,MAAA,OAClD2D,mBAAmB,CAAC3D,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;KACrC;IACD,MAAM,EAAE,SAAC8S,MAAAA,CAAAA,EAAyC,EAAK;AACrDtQ,MAAAA,SAAQ,cAAM+H,UAAU,EAAA;AAAEkB,QAAAA,WAAW,EAAEqH,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAAQ,CAAA,CAAA,CAAA;KACzD;AACF,IAAA,SAAS,EAAC,WAAA;GACV,CAAA,CACQ,CACR,eACNa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEH,8BAAU,CAAC,YAAY,EAAE;AAClC,MAAA,iBAAiB,EAAE,CAACuV,mBAAAA;KACrB,CAAA;AAAE,GAAA,eAEHpV,yBACMqW,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,cAAc,GAClB,GAAA,eAAArW,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACM,aAAa,KAAK,QAAQ,GACtDxK,IAAI,CAACkK,mBAAmB,CAACM,aAAa,GACtC,8CACL;IACD,EAAE,EAAKxG,SAAS,GAAa,YAAA;AAC7B,IAAA,IAAI,EAAC,MAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;MACLpS,KAAK,EAAEuK,UAAU,CAAC3F,QAAQ;AAC1B1E,MAAAA,KAAK,EAAEwW,WAAW,CAACnM,UAAU,CAAC3F,QAAQ,CAAA;KACtC;AACF,IAAA,WAAW,EAAEsS,cAAe;IAC5B,OAAO,EAAEC,mBAAmB,EAAG;IAC/B,QAAQ,EAAE,SAACxF,QAAAA,CAAAA,GAAQ,EAAK;AACtB;AACA,MAAA,IAAMuG,WAAW,GAAGvG,GAAG,CAAC3R,KAAK,CAAA;AAE7B,MAAA,IAAMmY,QAAQ,GAAA,QAAA,CAAA,EAAA,EACTpT,cAAc,CAACmT,WAAW,EAAErT,aAAa,CAAC,EAC1CF,gBAAgB,CAACuT,WAAW,EAAErT,aAAa,CAAC,EAAA;QAC/CtC,IAAI,EAAEgI,UAAU,CAAChI,IAAI;QACrBE,QAAQ,EAAE8H,UAAU,CAAC9H,QAAAA;OACtB,CAAA,CAAA;MACD,IAAI0V,QAAQ,CAACxR,IAAI,KAAK7F,SAAS,IAAI,CAACqX,QAAQ,CAACxR,IAAI,EAAE;AACjD;AACA,QAAA,IAAMyR,eAAe,GAAGjX,MAAM,CAACmE,IAAI,CACjCiF,UAAU,CAACb,cAAc,CAC1B,CAAC,CAAC,CAAC,CAAA;AACJyO,QAAAA,QAAQ,CAACxR,IAAI,GAAA,gBAAA,IAAoByR,eAAe,IAAI,OAAO,CAAE,CAAA;AAC/D,OAAA;AACA5V,MAAAA,SAAQ,cACH2V,QAAQ,EAAA;AACXjW,QAAAA,KAAK,EAAEiW,QAAQ,CAACjW,KAAK,IAAIqI,UAAU,CAACrI,KAAK;QACzC,SAASiW,EAAAA,QAAQ,CAAQ,SAAA,CAAA,IAAI,EAAE;QAC/B/T,IAAI,EAAE+T,QAAQ,CAAC/T,IAAI,IAAIa,YAAY,CAACiT,WAAW,EAAErT,aAAa,CAAC;AAC/DD,QAAAA,QAAQ,EAAEuT,QAAQ,CAACvT,QAAQ,IAAIsT,WAAAA;OAC/B,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,aAAA;GACV,CAAA,CACE,CACF,eAENrX,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,uBAAA;AAAuB,GAAA,eACpCA,wCAAC,sBAAsB,EAAA;IACrB,QAAQ,EAAE0J,UAAU,CAAC3F,QAAS;AAC9B,IAAA,UAAU,EAAE2F,UAAW;AACvB,IAAA,QAAQ,EAAE/H,SAAS;AACnB,IAAA,IAAI,EAAEiL,IAAK;AACX,IAAA,aAAa,EAAE5I,aAAAA;AAAc,GAAA,CAC7B,CACE,CACS,CAAA;AAErB;;ACjPA,IAAMpF,WAAS,GAAGC,wBAAe,CAAC;AAChC2Y,EAAAA,UAAU,EAAE;AACV,IAAA,YAAY,EAAE;AACZ/F,MAAAA,KAAK,EAAE,OAAO;AACd,MAAA,SAAS,EAAE,iBAAiB;AAC5B,MAAA,kBAAkB,EAAE;AAClBmC,QAAAA,MAAM,EAAE,mBAAmB;AAC3BC,QAAAA,YAAY,EAAE,KAAK;AACnB,QAAA,mBAAmB,EAAE;AAAE4D,UAAAA,YAAY,EAAE,mBAAA;SAAqB;AAC1D,QAAA,mBAAmB,EAAE;AACnB1Y,UAAAA,OAAO,EAAE,MAAM;AACf4S,UAAAA,cAAc,EAAE,eAAe;AAC/BhR,UAAAA,SAAS,EAAE,MAAA;AACb,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAAS+W,GAAG,CAQlB,IAAA,EAAA;EAAA,IAPPC,OAAO,QAAPA,OAAO;AACPC,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,kBAAkB,QAAlBA,kBAAkB,CAAA;EAMlB,IAAMjY,OAAO,GAAGhB,WAAS,EAAE,CAAA;EAC3B,IAAsCkD,SAAAA,GAAAA,cAAQ,CAAC,KAAK,CAAC;IAA9CgW,WAAW,GAAA,SAAA,CAAA,CAAA,CAAA;IAAEC,cAAc,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;EAClC,IAAwCjW,UAAAA,GAAAA,cAAQ,CAAC,MAAM,CAAC;IAAjDkW,YAAY,GAAA,UAAA,CAAA,CAAA,CAAA;IAAEC,eAAe,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA;AACpC,EAAA,IAAA,UAAA,GAAoBnW,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA;EAEhB,oBACE5Q,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAO,EAAE6Y,MAAM,GAAG,MAAM,GAAG,SAAA;AAAU,KAAA;GACjD,eAAA5X,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,EAAE,EAAK4Q,SAAS,GAAA,MAAA;AAAO,GAAA,eAC3B5Q,wCAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEkY,8BAAa;AACnB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAMH,cAAc,CAAC,IAAI,CAAC,CAAA;AAAA,KAAA;GACnC,CAAA,CACG,eACP/X,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAAC,IAAA,SAAS,EAAC,KAAK;AAAC,IAAA,MAAM,EAAKmN,SAAS,GAAA,MAAA;AAAO,GAAA,EAC7DiH,kBAAkB,IAAI,yBAAyB,CAC5B,eACtB7X,wCAACmY,kBAAO,EAAA;AACN,IAAA,SAAS,EAAC,QAAQ;IAClB,MAAM,EAAKvH,SAAS,GAAO,MAAA;AAC3B,IAAA,MAAM,EAAEkH,WAAY;AACpB,IAAA,MAAM,EAAE,SAAA,MAAA,GAAA;MAAA,OAAMC,cAAc,CAAC,KAAK,CAAC,CAAA;KAAC;IACpC,SAAS,EAAA,cAAA,GAAiBnY,OAAO,CAAC4X,UAAa;AAC/C,IAAA,EAAE,EAAK5G,SAAS,GAAA,cAAA;GAEhB,eAAA5Q,yBAAA,CAAA,aAAA,CAACoY,wBAAa,EAA2B,IAAA,EAAA,YAAA,CAAA,eACzCpY,wCAACqY,sBAAW,EAAA,IAAA,eACVrY,wCAAC,YAAY,EAAA;AACX,IAAA,SAAS,EAAC,eAAe;AACzB,IAAA,YAAY,EAAEgY,YAAa;AAC3B,IAAA,UAAU,EAAE,KAAM;AAClB,IAAA,OAAO,EAAE,CACP;AACE7Y,MAAAA,KAAK,EAAE,MAAM;AACbE,MAAAA,KAAK,EAAE,cAAA;AACT,KAAC,EACD;AACEF,MAAAA,KAAK,EAAE,SAAS;AAChBE,MAAAA,KAAK,EAAE,cAAA;AACT,KAAC,CACD;IACF,QAAQ,EAAE,SAAC6U,QAAAA,CAAAA,SAAS,EAAK;MACvB+D,eAAe,CAAC/D,SAAS,CAAC,CAAA;AAC5B,KAAA;AAAE,GAAA,CACF,eACFlU,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gBAAA;AAAgB,GAAA,eAC7BA,wCAACgV,iBAAM,EAAA;AAAC,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAM+C,cAAc,CAAC,KAAK,CAAC,CAAA;KAAC;AAAC,IAAA,KAAK,EAAC,WAAA;GAE3C,EAAA,QAAA,CAAA,eACT/X,wCAACgV,iBAAM,EAAA;AACL,IAAA,OAAO,EAAE,SAAM,OAAA,GAAA;MACb2C,OAAO,CAACK,YAAY,CAAC,CAAA;MACrBD,cAAc,CAAC,KAAK,CAAC,CAAA;KACrB;AACF,IAAA,KAAK,EAAC,SAAA;GAGC,EAAA,QAAA,CAAA,CACL,CACM,CACN,CACN,CAAA;AAEV;;ACrFA,IAAMnZ,WAAS,GAAGC,wBAAe,CAAC;AAChCyZ,EAAAA,WAAW,EAAE;AACX,IAAA,eAAe,EAAE,gBAAgB;AACjCxE,IAAAA,MAAM,EAAE,oBAAoB;AAC5B,IAAA,MAAM,EAAE;AACN1Q,MAAAA,KAAK,EAAE,OAAO;AACd,MAAA,WAAW,EAAE,MAAM;AACnB,MAAA,aAAa,EAAE,MAAA;KAChB;AACD,IAAA,mBAAmB,EAAE;AACnBrE,MAAAA,OAAO,EAAE,MAAA;KACV;AACD,IAAA,eAAe,EAAE;AACf+U,MAAAA,MAAM,EAAE,CAAC;AACTrC,MAAAA,KAAK,EAAE,KAAK;AACZ,MAAA,YAAY,EAAE,MAAM;AACpB7Q,MAAAA,OAAO,EAAE,OAAO;AAChB,MAAA,mBAAmB,EAAE;AACnB6Q,QAAAA,KAAK,EAAE,MAAA;AACT,OAAA;KACD;AACD,IAAA,SAAS,EAAE;AACTmC,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAA;KAClB;AACD,IAAA,0BAA0B,EAAE;AAC1BhT,MAAAA,OAAO,EAAE,MAAA;KACV;AACD,IAAA,gBAAgB,EAAE;AAChBgT,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAA;KAClB;AACD,IAAA,eAAe,EAAE;AACf,MAAA,sCAAsC,EAAE;AAAE7U,QAAAA,OAAO,EAAE,MAAA;OAAQ;AAC3D,MAAA,oBAAoB,EAAE;AACpB,QAAA,sCAAsC,EAAE;AAAEA,UAAAA,OAAO,EAAE,SAAA;AAAU,SAAA;AAC/D,OAAA;KACD;AACD,IAAA,cAAc,EAAE;AACdA,MAAAA,OAAO,EAAE,MAAM;AACf2S,MAAAA,aAAa,EAAE,QAAQ;AACvBD,MAAAA,KAAK,EAAE,MAAM;AACb8G,MAAAA,eAAe,EAAE,WAAW;AAC5B5E,MAAAA,SAAS,EAAE,MAAM;AACjB/S,MAAAA,OAAO,EAAE,KAAK;AACd,MAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAM;AAAEiT,QAAAA,MAAM,EAAE,YAAA;OAAc;AAClD,MAAA,SAAS,EAAE;AAAE1Q,QAAAA,KAAK,EAAE,OAAO;AAAEvC,QAAAA,QAAQ,EAAE,MAAA;OAAQ;AAC/C,MAAA,qBAAqB,EAAE;AACrBF,QAAAA,SAAS,EAAE,OAAO;AAClB8Q,QAAAA,KAAK,EAAE,MAAM;AACb1S,QAAAA,OAAO,EAAE,MAAM;AACf2S,QAAAA,aAAa,EAAE,KAAK;AACpB,QAAA,MAAM,EAAE;AAAED,UAAAA,KAAK,EAAE,KAAK;AAAE+G,UAAAA,UAAU,EAAE,MAAM;AAAE3X,UAAAA,QAAQ,EAAE,MAAA;AAAO,SAAA;OAC9D;AACD,MAAA,OAAO,EAAE;AAAEH,QAAAA,MAAM,EAAE,SAAA;AAAU,OAAA;AAC/B,KAAA;GACD;AACD+X,EAAAA,gBAAgB,EAAE;AAChB3E,IAAAA,MAAM,EAAE,YAAY;AACpBH,IAAAA,SAAS,EAAE,MAAM;AACjB,IAAA,OAAO,EAAE;AACP3U,MAAAA,WAAW,EAAE,KAAK;AAClB6U,MAAAA,YAAY,EAAE,KAAK;AACnBjT,MAAAA,OAAO,EAAE,OAAO;AAChBwB,MAAAA,MAAM,EAAE,MAAM;AACdqP,MAAAA,KAAK,EAAE,MAAA;KACR;AACD,IAAA,gCAAgC,EAAE;AAAEzS,MAAAA,WAAW,EAAE,MAAA;KAAQ;AACzD,IAAA,aAAa,EAAE;AAAE4U,MAAAA,MAAM,EAAE,mBAAmB;AAAExQ,MAAAA,KAAK,EAAE,SAAA;KAAW;AAChE,IAAA,gBAAgB,EAAE;AAAErE,MAAAA,OAAO,EAAE,cAAA;KAAgB;AAC7C,IAAA,6CAA6C,EAAE;AAC7CA,MAAAA,OAAO,EAAE,cAAc;AACvB0S,MAAAA,KAAK,EAAE,KAAK;AACZqC,MAAAA,MAAM,EAAE,QAAA;KACT;AACD,IAAA,sBAAsB,EAAE;AAAEH,MAAAA,SAAS,EAAE,MAAA;KAAQ;AAC7C,IAAA,uBAAuB,EAAE;AAAEA,MAAAA,SAAS,EAAE,OAAA;AAAQ,KAAA;AAChD,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAASlG,IAAI,CAgCnB,IAAA,EAAA;EAAA,IA/BP8G,cAAc,QAAdA,cAAc;AACd5S,IAAAA,SAAQ,QAARA,QAAQ;AACR6R,IAAAA,QAAQ,QAARA,QAAQ;AACRkF,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,UAAU,QAAVA,UAAU;AACV5K,IAAAA,sBAAsB,QAAtBA,sBAAsB;AACtB4J,IAAAA,QAAO,QAAPA,OAAO;AACPiB,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,WAAW,QAAXA,WAAW;AACX7U,IAAAA,aAAa,QAAbA,aAAa;AACb4I,IAAAA,IAAI,QAAJA,IAAI;AAAA,IAAA,qBAAA,GAAA,IAAA,CACJwI,mBAAmB;AAAnBA,IAAAA,mBAAmB,sCAAG,IAAI,GAAA,qBAAA,CAAA;EAqB1B,IAAMxV,OAAO,GAAGhB,WAAS,EAAE,CAAA;AAC3B,EAAA,IAAA,eAAA,GAAkCoB,gBAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC;IAAhDgX,SAAS,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,YAAY,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAA,gBAAA,GAAoB/Y,gBAAK,CAAC8B,QAAQ,CAACuO,WAAW,EAAE,CAAC;IAA1CO,SAAS,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAEhB,EAAA,oBACE5Q,+BAACA,gBAAK,CAAC,QAAQ,EAAA,IAAA,eACbA,+BAAC,QAAQ,EAAA;AACP,IAAA,MAAM,EAAE4Y,QAAS;AACjB,IAAA,cAAc,EAAE,SAAA,cAAA,GAAA;AAAA,MAAA,OAAMC,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAA;KAAC;AAC7C,IAAA,KAAK,eACH5Y,gBAAA,CAAA,aAAA,CAACA,gBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAM6Y,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAA;OAAC;AAAC,MAAA,SAAS,EAAC,OAAA;AAAO,KAAA,EAC3DrE,cAAc,CAAClT,KAAK,IAAIkT,cAAc,CAAC7S,IAAI,EAAE,GAAG,EAChD6S,cAAc,CAAC1K,MAAM,gBACpB7J,+BAACgR,OAAO,EAAA;MACN,IAAI,EAAA,aAAA,GAAiBuD,cAAc,CAAC1K,MAAe;MACnD,EAAE,EAAK+G,SAAS,GAAc,aAAA;AAC9B,MAAA,IAAI,EAAC,OAAA;KACL,CAAA,GAEF,EACD,EACA2D,cAAc,CAACzO,IAAI,KAAK7F,SAAS,gBAChCD,gBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;MACN,IAAI,EAAA,6CAAA,GAAiDuD,cAAc,CAACzO,IAAa;MACjF,EAAE,EAAK8K,SAAS,GAAW,UAAA;AAC3B,MAAA,IAAI,EAAC,OAAA;KACL,CAAA,GAEF,EACD,CACI,eACP5Q,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC,QAAA;KACd,eAAAA,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,EAAE,EAAK4Q,SAAS,GAAA,gBAAA;AAAiB,KAAA,eACrC5Q,+BAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEgZ,2BAAU;AAChB,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAON,QAAQ,GAAGA,QAAQ,EAAE,GAAG,EAAE,CAAA;AAAA,OAAA;KAC1C,CAAA,CACG,eACP1Y,gBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,MAAA,SAAS,EAAC,KAAK;AACf,MAAA,MAAM,EAAKmN,SAAS,GAAA,gBAAA;AAAiB,KAAA,EAAA,sBAAA,CAGjB,eACtB5Q,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,EAAE,EAAK4Q,SAAS,GAAA,kBAAA;AAAmB,KAAA,eACvC5Q,+BAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEiZ,6BAAY;AAClB,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAON,UAAU,GAAGA,UAAU,EAAE,GAAG,EAAE,CAAA;AAAA,OAAA;KAC9C,CAAA,CACG,eACP3Y,gBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,MAAA,SAAS,EAAC,KAAK;AACf,MAAA,MAAM,EAAKmN,SAAS,GAAA,kBAAA;AAAmB,KAAA,EAAA,wBAAA,CAGnB,CACjB,CAEV;AACD,IAAA,SAAS,uBACP2D,cAAc,CAACnK,SAAS,GAAG,gBAAgB,GAAG,EAAE,CAC9CmK,GAAAA,GAAAA,IAAAA,cAAc,CAACzO,IAAI,KAAK7F,SAAS,GAAG,EAAE,GAAG,gBAAgB,CAAA;GAE7D,eAAAD,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAEJ,OAAO,CAAC0Y,WAAAA;AAAY,GAAA,eAClCtY,+BAAC,0BAA0B,EAAA;AACzB,IAAA,UAAU,EAAGuU,cAAqB;AAClC,IAAA,QAAQ,EAAE5S,SAAS;AACnB,IAAA,aAAa,EAAEqC,aAAc;AAC7B,IAAA,IAAI,EAAE4I,IAAK;AACX,IAAA,mBAAmB,EAAEwI,mBAAAA;AAAoB,GAAA,CACzC,CACE,eACNpV,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAEJ,OAAO,CAAC6Y,gBAAAA;GACtB,eAAAzY,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,EAAE,EAAK4Q,SAAS,GAAA,WAAA;AAAY,GAAA,eAChC5Q,+BAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEkZ,6BAAY;AAClB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAMH,YAAY,CAAC,IAAI,CAAC,CAAA;AAAA,KAAA;GACjC,CAAA,CACG,eACP/Y,gBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAAC,IAAA,SAAS,EAAC,KAAK;AAAC,IAAA,MAAM,EAAKmN,SAAS,GAAA,WAAA;AAAY,GAAA,EAAA,iDAAA,CAE/C,eACtB5Q,gBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,EAAE,EAAK4Q,SAAS,GAAA,YAAA;AAAa,GAAA,eACjC5Q,+BAAC,eAAe,EAAA;AAAC,IAAA,IAAI,EAAEmZ,yBAAQ;AAAC,IAAA,OAAO,EAAE3F,QAAQ,IAAK,YAAM,EAAC;GAAM,CAAA,CAC9D,eACPxT,gBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,IAAA,SAAS,EAAC,KAAK;AACf,IAAA,MAAM,EAAKmN,SAAS,GAAA,YAAA;GAGA,EAAA,qBAAA,CAAA,eACtB5Q,+BAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAA,aAAA,GAAA;MAAA,OACb2B,SAAQ,cACH4S,cAAc,EAAA;QACjB3S,QAAQ,EAAE,CAAC2S,cAAc,CAAC3S,QAAAA;OAC1B,CAAA,CAAA,CAAA;KACH;AACD,IAAA,SAAS,EAAE,CAAC,CAAC2S,cAAc,CAAC3S,QAAS;AACrC,IAAA,KAAK,EAAC,UAAU;AAChB,IAAA,EAAE,EAAKgP,SAAS,GAAA,WAAA;GAChB,CAAA,CACE,eACN5Q,gBAAA,CAAA,aAAA,CAAC,SAAS,EAAA;AACR,IAAA,cAAc,EAAEuU,cAAe;AAC/B,IAAA,MAAM,EAAEuE,SAAU;AAClB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAMC,YAAY,CAAC,KAAK,CAAC,CAAA;KAAC;IACnC,QAAQ,EAAE,SAACK,QAAAA,CAAAA,iBAEV,EAAK;MACJzX,SAAQ,CAACyX,iBAAiB,CAAC,CAAA;KAC3B;AACF,IAAA,sBAAsB,EAAErL,sBAAAA;AAAuB,GAAA,CAC/C,CACO,EACV4J,QAAO,gBACN3X,+BAAC,GAAG,EAAA;AACF,IAAA,kBAAkB,EAAE,CAAC,CAAC4M,IAAI,IAAI,EAAE,EAAEkK,mBAAmB,IAAI,EAAE,EAAE1L,GAAI;IACjE,OAAO,EAAE,iBAACmD,MAAc,EAAA;MAAA,OAAKoJ,QAAO,CAACpJ,MAAM,CAAC,CAAA;AAAA,KAAA;GAC5C,CAAA,GAEF,EACD,CACc,CAAA;AAErB;;AC3PA,IAAM3P,WAAS,GAAGC,wBAAe,CAAC;AAChC+Y,EAAAA,MAAM,EAAE;AACN7Y,IAAAA,OAAO,EAAE,MAAA;AACX,GAAA;AACF,CAAC,CAAC,CAAA;;AAEF;AACO,SAASsa,0BAA0B,CAMjC,IAAA,EAAA;AACP,EAAA,oBAAOrZ,gBAAO,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA;AAChB,CAAA;AAEA,IAAMsZ,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAA,KAAA,EAAA;EAAA,IAAM/V,IAAI,SAAJA,IAAI,CAAA;EAAA,OACvC,SAASgW,sBAAsB,CAM5B,KAAA,EAAA;IAAA,IALD7P,UAAU,SAAVA,UAAU;AACV/H,MAAAA,SAAQ,SAARA,QAAQ,CAAA;IAKR,oBACE3B,gBAAA,CAAA,aAAA,CAACA,gBAAK,CAAC,QAAQ,qBACbA,gBAAsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAA,eACtBA,+BAACgS,gBAAK,EAAA;AACJ,MAAA,KAAK,EAAEtI,UAAU,CAAQ,SAAA,CAAA,IAAI,EAAG;AAChC,MAAA,WAAW,EAAC,SAAS;AACrB,MAAA,IAAI,EAAEnG,IAAK;MACX,QAAQ,EAAE,kBAAC0O,EAAyC,EAAA;QAAA,OAClDtQ,SAAQ,cAAM+H,UAAU,EAAA;UAAE,SAASuI,EAAAA,EAAE,CAACE,MAAM,CAAChT,KAAAA;SAAQ,CAAA,CAAA,CAAA;OACtD;AACD,MAAA,SAAS,EAAC,WAAA;AAAW,KAAA,CACrB,CACa,CAAA;GAEpB,CAAA;AAAA,CAAA,CAAA;AAEH,SAASqa,QAAQ,CAMd,KAAA,EAAA;EAAA,IALD9P,UAAU,SAAVA,UAAU;AACV/H,IAAAA,QAAQ,SAARA,QAAQ,CAAA;EAKR,oBACE3B,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,cAAA;AAAc,GAAA,eAC3BA,+BAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB2B,MAAAA,QAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,SAAA,EAASA,UAAU,CAAQ,SAAA,CAAA,GAAGA,UAAU,CAAQ,SAAA,CAAA,KAAK,IAAI,GAAG,IAAA;OAC5D,CAAA,CAAA,CAAA;KACF;IACF,SAAS,EAAEA,UAAU,CAAQ,SAAA,CAAA,GAAGA,UAAU,CAAQ,SAAA,CAAA,KAAK,IAAI,GAAG,KAAM;AACpE,IAAA,KAAK,EAAC,SAAA;AAAS,GAAA,CACf,CACE,CAAA;AAEV,CAAA;AAEA,SAAS+P,cAAc,CAMpB,KAAA,EAAA;EAAA,IALD/P,UAAU,SAAVA,UAAU;AACV/H,IAAAA,UAAQ,SAARA,QAAQ,CAAA;EAKR,IAAM/B,OAAO,GAAGhB,WAAS,EAAE,CAAA;AAC3B,EAAA,IAAM8a,SAAS,GAAGnR,KAAK,CAACC,OAAO,CAACkB,UAAU,CAAA,MAAA,CAAK,CAAC,GAAGA,UAAU,CAAA,MAAA,CAAK,GAAG,EAAE,CAAA;AACvE;AACA,EAAA,IAAMiQ,wBAAwB,GAAGD,SAAS,CAACE,IAAI,CAAC,UAAC9I,GAAG,EAAA;IAAA,OAAKpE,KAAK,CAACoE,GAAG,CAAC,CAAA;GAAC,CAAA,CAAA;EACpE,IAAM+I,cAAc,GAClBF,wBAAwB,IACxBD,SAAS,CAACE,IAAI,CAAC,UAAC9I,GAAG,EAAA;IAAA,OAAK,OAAOA,GAAG,KAAK,QAAQ,CAAA;GAAC,CAAA,CAAA;AAClD,EAAA,IAAA,eAAA,GAAgC9Q,gBAAK,CAAC8B,QAAQ,CAC5C,CAAC,CAAC4X,SAAS,CAACvP,MAAM,IAAI,CAAC0P,cAAc,CACtC;IAFMC,QAAQ,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,WAAW,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAG5B,EAAA,IAAA,gBAAA,GAAoB/Z,gBAAK,CAAC8B,QAAQ,CAACuO,WAAW,EAAE,CAAC;IAA1CO,SAAS,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;EAChB,oBACE5Q,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,WAAA;GACb,eAAAA,gBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,iBAAA,CAAwB,eACxBA,gBAAA,CAAA,aAAA,CAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;MACnB,IAAIuI,KAAK,CAACC,OAAO,CAACkB,UAAU,CAACsQ,SAAS,CAAC,EAAE;AACvC;AACArY,QAAAA,UAAQ,cACH+H,UAAU,EAAA;AACbsQ,UAAAA,SAAS,EAAE,IAAA;SACX,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACL;AACArY,QAAAA,UAAQ,cACH+H,UAAU,EAAA;AACbsQ,UAAAA,SAAS,EAAEN,SAAS,CAAC/W,GAAG,CAAC,UAACmO,GAAG,EAAA;AAAA,YAAA,OAAA,EAAA,GAAQA,GAAG,CAAA;WAAE,CAAA;SAC1C,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;IACF,SAAS,EAAEvI,KAAK,CAACC,OAAO,CAACkB,UAAU,CAACsQ,SAAS,CAAE;AAC/C,IAAA,KAAK,EAAC,uCAAuC;AAC7C,IAAA,EAAE,EAAKpJ,SAAS,GAAA,YAAA;AAAa,GAAA,CAC7B,eACF5Q,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,SAAS,EACP2Z,wBAAwB,IAAI,CAACD,SAAS,CAACvP,MAAM,GAAGvK,OAAO,CAACgY,MAAM,GAAG,EAAA;AAClE,GAAA,eAED5X,+BAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB,MAAA,IAAI6Z,cAAc,IAAI,CAACC,QAAQ,EAAE;AAC/B;QACA,IAAI;UACF,IAAMxG,OAAO,GAAGoG,SAAS,CAAC/W,GAAG,CAAC,UAACmO,GAAG,EAAK;YACrC,IAAImJ,MAAM,GAAG,CAAC,CAAA;YACd,IAAInJ,GAAG,EAAEmJ,MAAM,GAAG7H,UAAU,CAACtB,GAAG,CAAC,IAAI,CAAC,CAAA;AACtC,YAAA,IAAItE,MAAM,CAACE,KAAK,CAACuN,MAAM,CAAC,EACtB,MAAM,IAAIlU,KAAK,CAAsB+K,oBAAAA,GAAAA,GAAG,CAAG,CAAA;AAC7C,YAAA,OAAOmJ,MAAM,CAAA;AACf,WAAC,CAAC,CAAA;UACFF,WAAW,CAAC,IAAI,CAAC,CAAA;AACjBpY,UAAAA,UAAQ,cACH+H,UAAU,EAAA;YACb,MAAM4J,EAAAA,OAAAA;WACN,CAAA,CAAA,CAAA;SACH,CAAC,OAAOhN,KAAK,EAAE;AACd;AACAD,UAAAA,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC,CAAA;AACtB,SAAA;AACF,OAAC,MAAM;AACL;AACA,QAAA,IAAMgN,QAAO,GAAGoG,SAAS,CAAC/W,GAAG,CAAC,UAACmO,GAAG,EAAA;UAAA,OAAQA,EAAAA,IAAAA,GAAG,IAAI,CAAC,CAAA,CAAA;AAAA,SAAE,CAAC,CAAA;QACrDiJ,WAAW,CAAC,KAAK,CAAC,CAAA;AAClBpY,QAAAA,UAAQ,cACH+H,UAAU,EAAA;UACb,MAAM4J,EAAAA,QAAAA;SACN,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;AACF,IAAA,SAAS,EAAEwG,QAAS;AACpB,IAAA,QAAQ,EAAEH,wBAAyB;AACnC,IAAA,KAAK,EAAC,cAAc;AACpB,IAAA,EAAE,EAAK/I,SAAS,GAAA,cAAA;GAChB,CAAA,CACE,eACN5Q,gBAAA,CAAA,aAAA,CAAC,eAAe,EAAA;AACd,IAAA,aAAa,EAAE0Z,SAAU;AACzB,IAAA,KAAK,EACHnR,KAAK,CAACC,OAAO,CAACkB,UAAU,CAACsQ,SAAS,CAAC,GAC/BtQ,UAAU,CAACsQ,SAAS,CAACrX,GAAG,CAAC,UAACmO,GAAG,EAAA;AAAA,MAAA,OAAA,EAAA,GAAQA,GAAG,CAAA;KAAE,CAAC,GAC3C7Q,SACL;IACD,SAAS,EAAEsI,KAAK,CAACC,OAAO,CAACkB,UAAU,CAACsQ,SAAS,CAAE;AAC/C,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAC1G,OAAsB,EAAE4G,YAA4B,EAAA;MAAA,OAC7DvY,UAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,MAAA,EAAM4J,OAAO;AACb0G,QAAAA,SAAS,EAAEE,YAAAA;OACX,CAAA,CAAA,CAAA;KACH;AACD,IAAA,IAAI,EAAEJ,QAAQ,GAAG,QAAQ,GAAG,QAAA;AAAS,GAAA,CACrC,CACE,CAAA;AAEV,CAAA;AAEA,IAAMK,aAAsC,GAAG;AAC7CC,EAAAA,QAAQ,EAAE;AACRxV,IAAAA,WAAW,EAAE,WAAW;AACxBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBI,MAAAA,MAAM,EAAE,WAAA;AACV,KAAC,CACF;AACD5B,IAAAA,iBAAiB,EAAE;AACjB4B,MAAAA,MAAM,EAAE,WAAA;KACT;IACD1B,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;IACde,QAAQ,EAAEgV,yBAAyB,CAAC;AAAE/V,MAAAA,IAAI,EAAE,gBAAA;AAAiB,KAAC,CAAC;AAC/DwI,IAAAA,SAAS,EAAEsN,0BAAAA;GACZ;AACDgB,EAAAA,IAAI,EAAE;AACJzV,IAAAA,WAAW,EAAE,MAAM;AACnBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBI,MAAAA,MAAM,EAAE,MAAA;AACV,KAAC,CACF;AACD5B,IAAAA,iBAAiB,EAAE;AACjB4B,MAAAA,MAAM,EAAE,MAAA;KACT;IACD1B,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;IACde,QAAQ,EAAEgV,yBAAyB,CAAC;AAAE/V,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC;AACrDwI,IAAAA,SAAS,EAAEsN,0BAAAA;GACZ;AACDiB,EAAAA,IAAI,EAAE;AACJ1V,IAAAA,WAAW,EAAE,MAAM;AACnBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBI,MAAAA,MAAM,EAAE,MAAA;AACV,KAAC,CACF;AACD5B,IAAAA,iBAAiB,EAAE;AACjB4B,MAAAA,MAAM,EAAE,MAAA;KACT;IACD1B,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;IACde,QAAQ,EAAEgV,yBAAyB,CAAC;AAAE/V,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC;AACrDwI,IAAAA,SAAS,EAAEsN,0BAAAA;GACZ;AACDva,EAAAA,QAAQ,EAAE;AACR8F,IAAAA,WAAW,EAAE,UAAU;AACvBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,SAAS,CAAA;AACnB,KAAC,CACF;IACDxB,iBAAiB,EAAE,EAAE;IACrBE,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,SAAS;AACfe,IAAAA,QAAQ,EAAEkV,QAAQ;AAClBzN,IAAAA,SAAS,EAAEsN,0BAAAA;GACZ;AACDnX,EAAAA,KAAK,EAAE;AACL0C,IAAAA,WAAW,EAAE,OAAO;AACpBW,IAAAA,OAAO,EAAE,CACP;AACEE,MAAAA,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;AAClEE,MAAAA,MAAM,EAAE,OAAO;MACf,MAAM,EAAA,IAAA;AACR,KAAC,CACF;AACD1B,IAAAA,iBAAiB,EAAE;MAAE,MAAM,EAAA,EAAA;KAAI;AAC/BE,IAAAA,eAAe,EAAE;AACf,MAAA,WAAW,EAAE,OAAA;KACd;AACDZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAEmV,cAAc;AACxB1N,IAAAA,SAAS,EAAEsN,0BAAAA;GACZ;AACDkB,EAAAA,QAAQ,EAAE;AACR3V,IAAAA,WAAW,EAAE,UAAU;AACvBW,IAAAA,OAAO,EAAE,CACP;AACEE,MAAAA,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;MAClE,MAAM,EAAA,IAAA;AACR,KAAC,CACF;AACDxB,IAAAA,iBAAiB,EAAE;MAAE,MAAM,EAAA,EAAA;KAAI;IAC/BE,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAEmV,cAAc;AACxB1N,IAAAA,SAAS,EAAEsN,0BAAAA;AACb,GAAA;AACF,CAAC;;ACzOD,IAAMza,WAAS,GAAGC,wBAAe,CAAC;AAChC2b,EAAAA,gBAAgB,EAAE;AAChB,IAAA,iBAAiB,EAAE;AACjBzb,MAAAA,OAAO,EAAE,MAAM;AACf0Y,MAAAA,YAAY,EAAE,gBAAgB;AAC9B3D,MAAAA,MAAM,EAAE,qBAAqB;AAC7B,MAAA,MAAM,EAAE;AACN1Q,QAAAA,KAAK,EAAE,OAAO;AACdvC,QAAAA,QAAQ,EAAE,MAAM;AAChB2X,QAAAA,UAAU,EAAE,MAAA;OACb;AACD,MAAA,kBAAkB,EAAE;AAClB/G,QAAAA,KAAK,EAAE,KAAK;AACZkC,QAAAA,SAAS,EAAE,MAAM;AACjB/S,QAAAA,OAAO,EAAE,OAAA;OACV;AACD,MAAA,sBAAsB,EAAE;AAAE6Q,QAAAA,KAAK,EAAE,MAAA;AAAO,OAAA;KACzC;AACD,IAAA,mBAAmB,EAAE;AACnB9Q,MAAAA,SAAS,EAAE,KAAK;AAChBgT,MAAAA,SAAS,EAAE,QAAQ;AACnB,MAAA,OAAO,EAAE;AAAEjT,QAAAA,MAAM,EAAE,SAAA;AAAU,OAAA;KAC9B;AACD,IAAA,yBAAyB,EAAE;AACzBoT,MAAAA,MAAM,EAAE,aAAa;AACrBH,MAAAA,SAAS,EAAE,MAAM;AACjB8G,MAAAA,SAAS,EAAE,gBAAgB;AAC3BrG,MAAAA,UAAU,EAAE,KAAK;AACjB,MAAA,OAAO,EAAE;AACPpV,QAAAA,WAAW,EAAE,KAAK;AAClB6U,QAAAA,YAAY,EAAE,KAAK;AACnBjT,QAAAA,OAAO,EAAE,QAAQ;AACjBwB,QAAAA,MAAM,EAAE,MAAM;AACdqP,QAAAA,KAAK,EAAE,MAAA;OACR;AACD,MAAA,iEAAiE,EAAE;AACjEmC,QAAAA,MAAM,EAAE,mBAAmB;AAC3BxQ,QAAAA,KAAK,EAAE,SAAA;OACR;AACD,MAAA,aAAa,EAAE;AAAEwQ,QAAAA,MAAM,EAAE,mBAAmB;AAAExQ,QAAAA,KAAK,EAAE,SAAA;OAAW;AAChE,MAAA,kCAAkC,EAAE;AAAEpE,QAAAA,WAAW,EAAE,OAAA;OAAS;AAC5D,MAAA,gBAAgB,EAAE;AAChBD,QAAAA,OAAO,EAAE,cAAc;AACvBM,QAAAA,KAAK,EAAE;AAAE+D,UAAAA,KAAK,EAAE,SAAA;AAAU,SAAA;OAC3B;AACD,MAAA,6CAA6C,EAAE;AAC7CrE,QAAAA,OAAO,EAAE,cAAc;AACvB0S,QAAAA,KAAK,EAAE,KAAK;AACZqC,QAAAA,MAAM,EAAE,QAAA;OACT;AACD,MAAA,sBAAsB,EAAE;AAAEH,QAAAA,SAAS,EAAE,MAAA;OAAQ;AAC7C,MAAA,uBAAuB,EAAE;AAAEA,QAAAA,SAAS,EAAE,OAAA;AAAQ,OAAA;AAChD,KAAA;AACF,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAASjG,OAAO,CAkEtB,IAAA,EAAA;AAAA,EAAA,IAAA,kBAAA,CAAA;EAAA,IAjEPhM,IAAI,QAAJA,IAAI;AACJE,IAAAA,QAAQ,QAARA,QAAQ;AACR+E,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,QAAQ,QAARA,QAAQ;AACRjF,IAAAA,SAAQ,QAARA,QAAQ;AACR+Y,IAAAA,YAAY,QAAZA,YAAY;AACZC,IAAAA,eAAe,QAAfA,eAAe;AACfC,IAAAA,kBAAkB,QAAlBA,kBAAkB;AAClBpH,IAAAA,QAAQ,QAARA,QAAQ;AACRkF,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,UAAU,QAAVA,UAAU;AACVrL,IAAAA,IAAI,QAAJA,IAAI;AACJzE,IAAAA,cAAc,QAAdA,cAAc;AACdC,IAAAA,YAAY,QAAZA,YAAY;AACZuE,IAAAA,OAAO,QAAPA,OAAO;AACPwN,IAAAA,SAAS,QAATA,SAAS;AACT5Q,IAAAA,UAAU,QAAVA,UAAU;AACVG,IAAAA,SAAS,QAATA,SAAS;AACTP,IAAAA,MAAM,QAANA,MAAM;AACN3E,IAAAA,aAAa,QAAbA,aAAa;AACbyS,IAAAA,QAAO,QAAPA,OAAO;AACPiB,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,WAAW,QAAXA,WAAW;AACX7U,IAAAA,aAAa,QAAbA,aAAa;AACb4I,IAAAA,IAAI,QAAJA,IAAI;AACJxH,IAAAA,YAAY,QAAZA,YAAY,CAAA;EAyCZ,IAAMxF,OAAO,GAAGhB,WAAS,EAAE,CAAA;AAC3B,EAAA,IAAMoI,mBAAmB,GAAGkB,2BAA2B,CACrDvB,MAAM,IAAI,EAAE,EACZC,QAAQ,IAAI,EAAE,EACd5C,aAAa,CACd,CAAA;AACD,EAAA,IAAMyG,UAAU,GAAG9D,MAAM,IAAI,EAAE,CAAA;AAC/B,EAAA,IAAMmU,UAAU,GAAGtQ,uBAAuB,CAACC,UAAU,CAAC,CAAA;EACtD,IAAMsQ,qBAAqB,GAAG,EAAIxS,CAAAA,MAAAA,CAAAA,KAAK,CAACuS,UAAU,CAAC,CAAEnY,CAAAA,GAAG,CAAC,YAAA;AAAA,IAAA,OAAM,KAAK,CAAA;GAAC,CAAA,CAAA;AACrE,EAAA,IAAA,eAAA,GAA0C3C,yBAAK,CAAC8B,QAAQ,CACtDiZ,qBAAqB,CACtB;IAFMxN,aAAa,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,gBAAgB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAGtC;AACA,EAAA,IAAA,gBAAA,GAA8BxN,yBAAK,CAAC8B,QAAQ,CAACJ,IAAI,CAAC;IAA3CsZ,OAAO,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,UAAU,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAC1B,EAAA,IAAA,gBAAA,GAAgCjb,yBAAK,CAAC8B,QAAQ,CAAC,IAAI,CAAC;IAA7CyT,QAAQ,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,WAAW,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAC5B;AACA,EAAA,IAAA,gBAAA,GAAkCxV,yBAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC;IAAhDgX,SAAS,GAAA,gBAAA,CAAA,CAAA,CAAA;IAAEC,YAAY,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAA,gBAAA,GAAoB/Y,yBAAK,CAAC8B,QAAQ,CAACuO,WAAW,EAAE,CAAC;IAA1CO,SAAS,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;AAEhB,EAAA,oBACE5Q,wCAACA,yBAAK,CAAC,QAAQ,EAAA,IAAA,eACbA,wCAAC,QAAQ,EAAA;AACP,IAAA,MAAM,EAAE4Y,QAAS;AACjB,IAAA,cAAc,EAAE,SAAA,cAAA,GAAA;AAAA,MAAA,OAAMC,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAA;KAAC;AAC7C,IAAA,KAAK,eACH5Y,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAM6Y,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAA;OAAC;AAAC,MAAA,SAAS,EAAC,OAAA;KACpDnO,EAAAA,UAAU,CAACpJ,KAAK,IAAI2Z,OAAO,EAAE,GAAG,EAChCnR,MAAM,gBACL7J,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;AACN,MAAA,IAAI,kBAAgBnH,MAAS;MAC7B,EAAE,EAAK+G,SAAS,GAAc,aAAA;AAC9B,MAAA,IAAI,EAAC,OAAA;KACL,CAAA,GAEF,EACD,CACI,eACP5Q,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC,QAAA;KACd,eAAAA,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,EAAE,EAAK4Q,SAAS,GAAA,gBAAA;AAAiB,KAAA,eACrC5Q,wCAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEgZ,2BAAU;AAChB,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAON,QAAQ,GAAGA,QAAQ,EAAE,GAAG,EAAE,CAAA;AAAA,OAAA;KAC1C,CAAA,CACG,eACP1Y,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,MAAA,SAAS,EAAC,KAAK;AACf,MAAA,MAAM,EAAKmN,SAAS,GAAA,gBAAA;AAAiB,KAAA,EAAA,sBAAA,CAGjB,eACtB5Q,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,EAAE,EAAK4Q,SAAS,GAAA,kBAAA;AAAmB,KAAA,eACvC5Q,wCAAC,eAAe,EAAA;AACd,MAAA,IAAI,EAAEiZ,6BAAY;AAClB,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,QAAA,OAAON,UAAU,GAAGA,UAAU,EAAE,GAAG,EAAE,CAAA;AAAA,OAAA;KAC9C,CAAA,CACG,eACP3Y,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,MAAA,SAAS,EAAC,KAAK;AACf,MAAA,MAAM,EAAKmN,SAAS,GAAA,kBAAA;AAAmB,KAAA,EAAA,wBAAA,CAGnB,CACjB,CAEV;AACD,IAAA,SAAS,EAAuBhR,oBAAAA,GAAAA,OAAO,CAAC4a,gBAAgB,UACtDpQ,SAAS,GAAG,mBAAmB,GAAG,EAAE,CAClCyQ,GAAAA,GAAAA,IAAAA,SAAS,GAAG,mBAAmB,GAAG,EAAE,CAAA;GAExC,eAAA7a,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAqB6a,kBAAAA,IAAAA,SAAS,GAAG,mBAAmB,GAAG,EAAE,CAAA;GAElE,eAAA7a,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,cAAA;AAAc,GAAA,EAC1B6a,SAAS,gBACR7a,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,iCAAA;GACb,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,mBAAA,CAA0B,eAC1BA,yBAAA,CAAA,aAAA,CAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;AACLpS,MAAAA,KAAK,EAAE0b,SAAS;AAChBxb,MAAAA,KAAK,EAAEwb,SAAAA;KACP;AACF,IAAA,WAAW,EAAC,WAAW;IACvB,OAAO,EAAEva,MAAM,CAACmE,IAAI,CAACoE,cAAc,CAAC,CAAClG,GAAG,CAAC,UAACoF,GAAG,EAAA;MAAA,OAAM;AACjD5I,QAAAA,KAAK,qBAAmB4I,GAAK;AAC7B1I,QAAAA,KAAK,EAAmB0I,gBAAAA,GAAAA,GAAAA;OACzB,CAAA;AAAA,KAAC,CAAE;IACJ,QAAQ,EAAE,SAAC+I,QAAAA,CAAAA,GAAQ,EAAK;MACtBnP,SAAQ,CAACgF,MAAM,EAAEC,QAAQ,EAAEkK,GAAG,CAAC3R,KAAK,CAAC,CAAA;KACrC;AACF,IAAA,SAAS,EAAC,gBAAA;GACV,CAAA,CACE,GAEN,EACD,eACDa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,eAAe;IAAC,WAAU,EAAA,qBAAA;AAAqB,GAAA,eAC5DA,yBACsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,qBAAA,EAAA,GAAG,eACvBA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxBlK,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACoE,qBAAqB,KACnD,QAAQ,GACNtO,IAAI,CAACkK,mBAAmB,CAACoE,qBAAqB,GAC9C,8DACL;IACD,EAAE,EAAKtK,SAAS,GAAY,WAAA;AAC5B,IAAA,IAAI,EAAC,MAAA;AAAM,GAAA,CACX,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgX,oBAAS,EAAA,IAAA,eACRhX,wCAACgS,gBAAK,EAAA;IACJ,OAAO,EAAEuD,QAAQ,KAAK,IAAK;IAC3B,KAAK,EAAEyF,OAAO,IAAI,EAAG;AACrB,IAAA,WAAW,EAAC,KAAK;AACjB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAAC/I,EAAyC,EAAA;AAAA,MAAA,OAClDgJ,UAAU,CAAChJ,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;KAC5B;IACD,MAAM,EAAE,SAAC8S,MAAAA,CAAAA,EAAyC,EAAK;AACrD,MAAA,IAAQ9S,KAAK,GAAK8S,EAAE,CAACE,MAAM,CAAnBhT,KAAK,CAAA;AACb,MAAA,IACEA,KAAK,KAAKuC,IAAI,IACd,EAAEwD,aAAa,IAAIA,aAAa,CAACqC,QAAQ,CAACpI,KAAK,CAAC,CAAC,EACjD;QACAqW,WAAW,CAAC,IAAI,CAAC,CAAA;QACjBkF,YAAY,CAACvb,KAAK,CAAC,CAAA;AACrB,OAAC,MAAM;QACL8b,UAAU,CAACvZ,IAAI,CAAC,CAAA;QAChB8T,WAAW,CAAA,IAAA,GAAKrW,KAAK,GAAuB,uBAAA,CAAA,CAAA;QAC5Cub,YAAY,CAAChZ,IAAI,CAAC,CAAA;AACpB,OAAA;KACA;AACF,IAAA,SAAS,EAAC,WAAW;AACrB,IAAA,QAAQ,EAAE2L,OAAAA;GACV,CAAA,eACFrN,wCAACiX,uBAAY,EAAA,IAAA,EAAE1B,QAAQ,CAAgB,CAC7B,CACR,eACNvV,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,eAAe;IAAC,WAAU,EAAA,sBAAA;AAAsB,GAAA,eAC7DA,yBACuB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,sBAAA,EAAA,GAAG,eACxBA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxBlK,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACqE,sBAAsB,KACpD,QAAQ,GACNvO,IAAI,CAACkK,mBAAmB,CAACqE,sBAAsB,GAC/C,uEACL;IACD,EAAE,EAAKvK,SAAS,GAAa,YAAA;AAC7B,IAAA,IAAI,EAAC,MAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEvH,UAAU,CAACpJ,KAAK,IAAI,EAAG;AAC9B,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAAC4Q,EAAyC,EAAA;MAAA,OAClDtQ,SAAQ,cAEDgF,MAAM,EAAA;AACTtF,QAAAA,KAAK,EAAE4Q,EAAE,CAACE,MAAM,CAAChT,KAAAA;AAAK,OAAA,CAAA,EAExByH,QAAQ,CACT,CAAA;KACF;AACD,IAAA,SAAS,EAAC,WAAA;AAAW,GAAA,CACrB,CACE,eACN5G,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,eAAe;IAAC,WAAU,EAAA,qBAAA;AAAqB,GAAA,eAC5DA,yBACsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,qBAAA,EAAA,GAAG,eACvBA,yBAAA,CAAA,aAAA,CAACgR,OAAO,EAAA;IACN,IAAI,EACFpE,IAAI,IACJA,IAAI,CAACkK,mBAAmB,IACxBlK,IAAI,CAACkK,mBAAmB,IACxB,OAAOlK,IAAI,CAACkK,mBAAmB,CAACsE,sBAAsB,KACpD,QAAQ,GACNxO,IAAI,CAACkK,mBAAmB,CAACsE,sBAAsB,GAC/C,iEACL;IACD,EAAE,EAAKxK,SAAS,GAAmB,kBAAA;AACnC,IAAA,IAAI,EAAC,MAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEvH,UAAU,CAACG,WAAW,IAAI,EAAG;AACpC,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAACqH,EAAyC,EAAA;MAAA,OAClDtQ,SAAQ,cAEDgF,MAAM,EAAA;AACTiE,QAAAA,WAAW,EAAEqH,EAAE,CAACE,MAAM,CAAChT,KAAAA;AAAK,OAAA,CAAA,EAE9ByH,QAAQ,CACT,CAAA;KACF;AACD,IAAA,SAAS,EAAC,WAAA;GACV,CAAA,CACE,eACN5G,yBAAA,CAAA,aAAA,CAACqb,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAE;MACLtc,OAAO,EAAEiI,mBAAmB,CAACmD,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAAA;KACrD;AACF,IAAA,KAAK,EAAC,SAAA;AAAS,GAAA,eAEfnK,4EAA8B,EAC7BgH,mBAAmB,CAACrE,GAAG,CAAC,UAAC2Y,OAAO,EAAA;IAAA,oBAC/Btb,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAI,GAAG,EAAK4Q,SAAS,GAAI0K,GAAAA,GAAAA,OAAAA;AAAU,KAAA,EAAEA,OAAO,CAAM,CAAA;GACnD,CAAC,CACI,CACJ,eACNtb,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,cAAA;AAAc,GAAA,eAC3BA,wCAACub,iCAAe,EAAA;IACd,SAAS,EAAE,qBAACzM,MAAM,EAAA;MAAA,OAChBD,SAAS,CAACC,MAAM,EAAE;AAChBnI,QAAAA,MAAM,EAANA,MAAM;AACNC,QAAAA,QAAQ,EAARA,QAAQ;AACRjF,QAAAA,QAAQ,EAARA,SAAQ;AACRkH,QAAAA,cAAc,EAAdA,cAAc;AACdC,QAAAA,YAAY,EAAZA,YAAY;AACZ1D,QAAAA,YAAY,EAAZA,YAAAA;AACF,OAAC,CAAC,CAAA;KACH;AACD,IAAA,SAAS,EAAC,cAAA;AAAc,GAAA,eAExBpF,wCAACwb,2BAAS,EAAA;AAAC,IAAA,WAAW,EAAC,WAAA;AAAW,GAAA,EAC/B,UAACC,iBAAiB,EAAA;IAAA,oBACjBzb,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;MACE,GAAG,EAAEyb,iBAAiB,CAACC,QAAAA;AAAS,KAAA,EAC5BD,iBAAiB,CAACE,cAAc,CAAA,EAEnCxO,oCAAoC,CAAC;AACpC1C,MAAAA,UAAU,EAAE9D,MAAM;AAClByG,MAAAA,YAAY,EAAExG,QAAQ;AACtBjF,MAAAA,QAAQ,EAARA,SAAQ;AACR2L,MAAAA,IAAI,EAAJA,IAAI;AACJzE,MAAAA,cAAc,EAAdA,cAAc;AACdC,MAAAA,YAAY,EAAZA,YAAY;AACZyE,MAAAA,aAAa,EAAbA,aAAa;AACbC,MAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBxJ,MAAAA,aAAa,EAAbA,aAAa;AACb4I,MAAAA,IAAI,EAAJA,IAAI;AACJxH,MAAAA,YAAY,EAAZA,YAAY;AACZqI,MAAAA,IAAI,EAAJA,IAAI;AACJC,MAAAA,OAAO,EAAPA,OAAAA;AACF,KAAC,CAAC,CAAC/K,GAAG,CAAC,UAACmF,OAAY,EAAEjF,KAAK,EAAA;AAAA,MAAA,oBACzB7C,wCAAC4b,2BAAS,EAAA;QACR,GAAG,EAAE9T,OAAO,CAACC,GAAI;QACjB,WAAW,EAAED,OAAO,CAACC,GAAI;AACzB,QAAA,KAAK,EAAElF,KAAAA;AAAM,OAAA,EAEZ,UAACgZ,iBAAiB,EAAA;QAAA,oBACjB7b,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;UACE,GAAG,EAAE6b,iBAAiB,CAACH,QAAAA;SACnBG,EAAAA,iBAAiB,CAACC,cAAc,EAChCD,iBAAiB,CAACE,eAAe,CAEpCjU,EAAAA,OAAO,CACJ,CAAA;AAAA,OACP,CACS,CAAA;AAAA,KACb,CAAC,EACD2T,iBAAiB,CAACrK,WAAW,CAC1B,CAAA;GACP,CACS,CACI,CACd,eACNpR,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gBAAA;AAAgB,GAAA,eAC7BA,wCAAC,GAAG,EAAA;AACF,IAAA,kBAAkB,EAAE,CAAC,CAAC4M,IAAI,IAAI,EAAE,EAAEkK,mBAAmB,IAAI,EAAE,EAAE1L,GAAI;IACjE,OAAO,EAAE,SAACmD,OAAAA,CAAAA,MAAc,EAAK;MAC3B,IAAIA,MAAM,KAAK,MAAM,EAAE;AACrB5B,QAAAA,UAAU,CAAC;AACThG,UAAAA,MAAM,EAANA,MAAM;AACNC,UAAAA,QAAQ,EAARA,QAAQ;AACRgG,UAAAA,IAAI,EAAJA,IAAI;AACJjL,UAAAA,QAAQ,EAARA,SAAQ;AACRkH,UAAAA,cAAc,EAAdA,cAAc;AACdC,UAAAA,YAAY,EAAZA,YAAY;AACZ1D,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAImJ,MAAM,KAAK,SAAS,EAAE;AAC/BrB,QAAAA,aAAa,CAAC;AACZvG,UAAAA,MAAM,EAANA,MAAM;AACNC,UAAAA,QAAQ,EAARA,QAAQ;AACRjF,UAAAA,QAAQ,EAARA,SAAQ;AACRkH,UAAAA,cAAc,EAAdA,cAAc;AACdC,UAAAA,YAAY,EAAZA,YAAY;AACZ1D,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAA;KACA;AACF,IAAA,MAAM,EACJqF,UAAU,CAACnD,UAAU,IACrBhH,MAAM,CAACmE,IAAI,CAACgG,UAAU,CAACnD,UAAU,CAAC,CAAC6C,MAAM,KAAK,CAAA;AAC/C,GAAA,CACD,CACE,eACNnK,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,sBAAA;GACb,eAAAA,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,EAAE,EAAK4Q,SAAS,GAAA,WAAA;AAAY,GAAA,eAChC5Q,wCAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEkZ,6BAAY;AAClB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAMH,YAAY,CAAC,IAAI,CAAC,CAAA;AAAA,KAAA;GACjC,CAAA,CACG,eACP/Y,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,IAAA,SAAS,EAAC,KAAK;AACf,IAAA,MAAM,EAAKmN,SAAS,GAAA,WAAA;AAAY,GAAA,EAAA,iDAAA,CAGZ,eACtB5Q,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,EAAE,EAAK4Q,SAAS,GAAA,YAAA;AAAa,GAAA,eACjC5Q,wCAAC,eAAe,EAAA;AACd,IAAA,IAAI,EAAEmZ,yBAAQ;AACd,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,MAAA,OAAO3F,QAAQ,GAAGA,QAAQ,EAAE,GAAG,EAAE,CAAA;AAAA,KAAA;GAC1C,CAAA,CACG,eACPxT,yBAAA,CAAA,aAAA,CAACyD,8BAAmB,EAAA;AAClB,IAAA,SAAS,EAAC,KAAK;AACf,IAAA,MAAM,EAAKmN,SAAS,GAAA,YAAA;GAGA,EAAA,qBAAA,CAAA,eACtB5Q,wCAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAA,aAAA,GAAA;AAAA,MAAA,OAAM2a,eAAe,EAAE,CAAA;KAAC;AACvC,IAAA,SAAS,EAAE/Y,QAAS;AACpB,IAAA,KAAK,EAAC,UAAU;AAChB,IAAA,EAAE,EAAKgP,SAAS,GAAA,WAAA;AAAY,GAAA,CAC5B,CACE,CACF,eACN5Q,yBAAA,CAAA,aAAA,CAAC,SAAS,EAAA;AACR,IAAA,cAAc,EAAE;AACdiK,MAAAA,UAAU,EAAVA,UAAU;AACV/E,MAAAA,aAAa,EAAbA,aAAa;AACbxD,MAAAA,IAAI,EAAEsZ,OAAO;AACbrU,MAAAA,MAAM,EAANA,MAAM;AACNpD,MAAAA,IAAI,EAAE,QAAQ;AACd,MAAA,WAAW,EAAEqD,CAAAA,kBAAAA,GAAAA,QAAQ,CAAC,WAAW,CAAC,KAAI,IAAA,GAAA,kBAAA,GAAA,EAAA;KACtC;AACF,IAAA,MAAM,EAAEkS,SAAU;AAClB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;MAAA,OAAMC,YAAY,CAAC,KAAK,CAAC,CAAA;KAAC;IACnC,QAAQ,EAAE,SAACK,QAAAA,CAAAA,iBAAoC,EAAK;AAClDwB,MAAAA,kBAAkB,CAACxB,iBAAiB,CAACnP,UAAU,CAAC,CAAA;MAChDtI,SAAQ,CAACgF,MAAM,EAAA,QAAA,CAAA,EAAA,EACVC,QAAQ,EAAA;QACX,WAAW,EAAEwS,iBAAiB,CAAC,WAAW,CAAA;OAC1C,CAAA,CAAA,CAAA;KACF;AACF,IAAA,sBAAsB,EAAEC,0BAAAA;AAA2B,GAAA,CACnD,CACO,EACV1B,QAAO,gBACN3X,wCAAC,GAAG,EAAA;AACF,IAAA,kBAAkB,EAAE,CAAC,CAAC4M,IAAI,IAAI,EAAE,EAAEkK,mBAAmB,IAAI,EAAE,EAAE1L,GAAI;IACjE,OAAO,EAAE,iBAACmD,MAAc,EAAA;MAAA,OAAKoJ,QAAO,CAACpJ,MAAM,CAAC,CAAA;AAAA,KAAA;GAC5C,CAAA,GAEF,EACD,CACc,CAAA;AAErB;;ACnhBO,IAAMyN,MAAM,GAAG;AACpB,EAAA,WAAW,EAAE;AACX,IAAA,OAAA,EAAO,OAAO;AACd,IAAA,kCAAkC,EAAE;AAClC,MAAA,eAAe,EAAE,KAAK;AACtBpb,MAAAA,OAAO,EAAE,OAAO;AAChBkT,MAAAA,MAAM,EAAE,YAAY;AACpBF,MAAAA,MAAM,EAAE,mBAAmB;AAC3BxQ,MAAAA,KAAK,EAAE,SAAS;AAChBhB,MAAAA,MAAM,EAAE,MAAM;AACdqP,MAAAA,KAAK,EAAE,MAAA;AACT,KAAA;AACF,GAAA;AACF,CAAC;;ACNM,SAASwK,gBAAgB,CAMvB,IAAA,EAAA;EAAA,IALPvS,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAA,SAAA,GAAoBG,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,oBACE5Q,wCAACA,yBAAK,CAAC,QAAQ,EACb,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,aAAA,EACc,GAAG,eACfA,yBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,IAAI,EAAC,kFAAkF;AACvF,IAAA,MAAM,EAAC,QAAQ;AACf,IAAA,GAAG,EAAC,qBAAA;AAAqB,GAAA,eAEzBA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAe,cAAA;AAC/B,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,0EAAA;AAA0E,GAAA,CAC/E,CACA,CACD,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEtI,UAAU,CAAC,gBAAgB,CAAE;AACpC,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,GAAG,EAAC,aAAa;AACjB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,SAACuI,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,gBAAgB,EAAEuI,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAC5B,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,iBAAA;AAAiB,GAAA,CAC3B,CACa,CAAA;AAErB;;ACrCA,IAAM+c,gBAAgB,GAAG;AACvB,EAAA,EAAE,EAAE,MAAM;AACVC,EAAAA,KAAK,EAAE,OAAO;AACdC,EAAAA,QAAQ,EAAE,UAAU;AACpBC,EAAAA,GAAG,EAAE,KAAK;AACVC,EAAAA,KAAK,EAAE,oBAAA;AACT,CAAC,CAAA;AAED,IAAMC,oBAAoB,GAAG;AAC3BJ,EAAAA,KAAK,EAAE,OAAO;AACdK,EAAAA,GAAG,EAAE,KAAA;AACP,CAAC,CAAA;AAED,IAAMC,cAAc,GAAG;AACrB,EAAA,EAAE,EAAE,MAAM;AACVN,EAAAA,KAAK,EAAE,OAAO;AACdO,EAAAA,QAAQ,EAAE,WAAW;AACrBC,EAAAA,QAAQ,EAAE,UAAU;AACpB,EAAA,gBAAgB,EAAE,gBAAgB;AAClCC,EAAAA,OAAO,EAAE,SAAA;AACX,CAAC,CAAA;;AAED;AACA,SAASC,8BAA8B,CAMpC,IAAA,EAAA;EAAA,IALDnT,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAA,SAAA,GAAoBG,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,oBACE5Q,yBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CAAuB,eACvBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACoT,SAAS,GAAGpT,UAAU,CAACoT,SAAS,GAAG,EAAG;AACxD,IAAA,WAAW,EAAC,gBAAgB;AAC5B,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC7K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACboT,SAAS,EAAErQ,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACvC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACFa,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CAAuB,eACvBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACqT,SAAS,GAAGrT,UAAU,CAACqT,SAAS,GAAG,EAAG;AACxD,IAAA,WAAW,EAAC,gBAAgB;AAC5B,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC9K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACbqT,SAAS,EAAEtQ,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACvC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;GACV,CAAA,eACFa,yBAC6B,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,4BAAA,EAAA,GAAG,eAC9BA,yBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,IAAI,EAAC,mFAAmF;AACxF,IAAA,MAAM,EAAC,QAAQ;AACf,IAAA,GAAG,EAAC,qBAAA;AAAqB,GAAA,eAEzBA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAS,QAAA;AACzB,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,mDAAA;AAAmD,GAAA,CACxD,CACA,CACD,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACsT,OAAO,GAAGtT,UAAU,CAACsT,OAAO,GAAG,EAAG;AACpD,IAAA,WAAW,EAAC,4BAA4B;AACxC,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,SAAC/K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbsT,QAAAA,OAAO,EAAE/K,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACnB,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,iBAAA;AAAiB,GAAA,CAC3B,eACFa,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EACS,GAAG,eACVA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAU,SAAA;AAC1B,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,uDAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;MACLpS,KAAK,EAAEuK,UAAU,CAAC7D,MAAM,GACpBqW,gBAAgB,CACd,OAAOxS,UAAU,CAAC7D,MAAM,KAAK,QAAQ,GAAG6D,UAAU,CAAC7D,MAAM,GAAG,EAAE,CAC/D,GACD,EAAE;MACNxG,KAAK,EAAEqK,UAAU,CAAC7D,MAAM,GACpBqW,gBAAgB,CACd,OAAOxS,UAAU,CAAC7D,MAAM,KAAK,QAAQ,GAAG6D,UAAU,CAAC7D,MAAM,GAAG,EAAE,CAC/D,GACD,MAAA;KACJ;AACF,IAAA,WAAW,EAAC,QAAQ;AACpB,IAAA,GAAG,EAAC,QAAQ;IACZ,OAAO,EAAEvF,MAAM,CAACmE,IAAI,CAACyX,gBAAgB,CAAC,CAACvZ,GAAG,CAAC,UAACoF,GAAG,EAAA;MAAA,OAAM;AACnD5I,QAAAA,KAAK,EAAE4I,GAAG;QACV1I,KAAK,EAAE6c,gBAAgB,CAACnU,GAAG,CAAA;OAC5B,CAAA;AAAA,KAAC,CAAE;IACJ,QAAQ,EAAE,SAAC+I,QAAAA,CAAAA,GAAQ,EAAK;AACtBnP,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACb7D,MAAM,EAAEiL,GAAG,CAAC3R,KAAAA;OACZ,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;GACV,CAAA,eACFa,yBACyB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,wBAAA,EAAA,GAAG,eAC1BA,yBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,IAAI,EAAC,2EAA2E;AAChF,IAAA,MAAM,EAAC,QAAQ;AACf,IAAA,GAAG,EAAC,qBAAA;AAAqB,GAAA,eAEzBA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAgB,eAAA;AAChC,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,qDAAA;AAAqD,GAAA,CAC1D,CACA,CACD,eACL5Q,yBAAA,CAAA,aAAA,CAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;MACLpS,KAAK,EAAEuK,UAAU,CAAC,iBAAiB,CAAC,GAChC+S,cAAc,CACZ,OAAO/S,UAAU,CAAC,iBAAiB,CAAC,KAAK,QAAQ,GAC7CA,UAAU,CAAC,iBAAiB,CAAC,GAC7B,EAAE,CACP,GACD,EAAE;MACNrK,KAAK,EAAEqK,UAAU,CAAC,iBAAiB,CAAC,GAChC+S,cAAc,CACZ,OAAO/S,UAAU,CAAC,iBAAiB,CAAC,KAAK,QAAQ,GAC7CA,UAAU,CAAC,iBAAiB,CAAC,GAC7B,EAAE,CACP,GACD,MAAA;KACJ;AACF,IAAA,WAAW,EAAC,eAAe;AAC3B,IAAA,GAAG,EAAC,iBAAiB;IACrB,OAAO,EAAEpJ,MAAM,CAACmE,IAAI,CAACgY,cAAc,CAAC,CAAC9Z,GAAG,CAAC,UAACoF,GAAG,EAAA;MAAA,OAAM;AACjD5I,QAAAA,KAAK,EAAE4I,GAAG;QACV1I,KAAK,EAAEod,cAAc,CAAC1U,GAAG,CAAA;OAC1B,CAAA;AAAA,KAAC,CAAE;IACJ,QAAQ,EAAE,SAAC+I,QAAAA,CAAAA,GAAQ,EAAK;AACtBnP,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACb,iBAAiB,EAAEoH,GAAG,CAAC3R,KAAAA;OACvB,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;GACV,CAAA,eACFa,wCAAC,gBAAgB,EAAA;AAAC,IAAA,UAAU,EAAE0J,UAAW;AAAC,IAAA,QAAQ,EAAE/H,SAAAA;GAAY,CAAA,eAChE3B,yBACc,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,aAAA,EAAA,GAAG,eACfA,yBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,IAAI,EAAC,gGAAgG;AACrG,IAAA,MAAM,EAAC,QAAQ;AACf,IAAA,GAAG,EAAC,qBAAA;AAAqB,GAAA,eAEzBA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAe,cAAA;AAC/B,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,kCAAA;AAAkC,GAAA,CACvC,CACA,CACD,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAAC,WAAW,CAAC,GAAGA,UAAU,CAAC,WAAW,CAAC,GAAG,EAAG;AAC9D,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAACuI,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,WAAW,EAAEuI,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACvB,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,iBAAA;AAAiB,GAAA,CAC3B,eACFa,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,eACjCA,wCAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB2B,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,cAAc,EAAEA,UAAU,CAAC,cAAc,CAAC,GACtCA,UAAU,CAAC,cAAc,CAAC,KAAK,IAAI,GACnC,IAAA;OACJ,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EACPA,UAAU,CAAC,cAAc,CAAC,GACtBA,UAAU,CAAC,cAAc,CAAC,KAAK,IAAI,GACnC,KACL;AACD,IAAA,KAAK,EAAC,YAAA;AAAY,GAAA,CAClB,CACE,CACF,CAAA;AAEV,CAAA;AAEA,SAASuT,gBAAgB,CAMtB,KAAA,EAAA;EAAA,IALDvT,UAAU,SAAVA,UAAU;AACV/H,IAAAA,UAAQ,SAARA,QAAQ,CAAA;EAKR,oBACE3B,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,qBACbA,yBAAsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAA,eACtBA,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAAS,SAAA,CAAA;AAC1B,IAAA,WAAW,EAAC,SAAS;IACrB,IAAI,EAAE6S,oBAAoB,CAAC7S,UAAU,CAAC7D,MAAM,CAAC,IAAI,MAAO;IACxD,QAAQ,EAAE,kBAACoM,EAAyC,EAAA;MAAA,OAClDtQ,UAAQ,cAAM+H,UAAU,EAAA;QAAE,SAASuI,EAAAA,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAAQ,CAAA,CAAA,CAAA;KACtD;AACD,IAAA,SAAS,EAAC,WAAA;AAAW,GAAA,CACrB,CACa,CAAA;AAErB,CAAA;AAEA,SAAS+d,QAAQ,CAMd,KAAA,EAAA;EAAA,IALDxT,UAAU,SAAVA,UAAU;AACV/H,IAAAA,UAAQ,SAARA,QAAQ,CAAA;EAKR,oBACE3B,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,qBACbA,yBAAyB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,kBAAA,CAAA,eACzBA,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAAS,SAAA,CAAA;AAC1B,IAAA,WAAW,EAAC,SAAS;AACrB,IAAA,IAAI,EAAC,UAAU;IACf,QAAQ,EAAE,kBAACuI,EAAyC,EAAA;MAAA,OAClDtQ,UAAQ,cAAM+H,UAAU,EAAA;QAAE,SAASuI,EAAAA,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAAQ,CAAA,CAAA,CAAA;KACtD;AACD,IAAA,SAAS,EAAC,WAAA;AAAW,GAAA,CACrB,CACa,CAAA;AAErB,CAAA;AAEA,IAAMge,gBAAyC,GAAG;AAChDC,EAAAA,WAAW,EAAE;AACXxY,IAAAA,WAAW,EAAE,cAAc;AAC3BW,IAAAA,OAAO,EACL,CAAA;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAA;AAClB,KAAC,CACE,CAAA,MAAA,CAAA,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC9C,GAAG,CAAC,UAACkD,MAAM,EAAA;MAAA,OAAM;QACxDJ,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBI,QAAAA,MAAM,EAANA,MAAAA;OACD,CAAA;AAAA,KAAC,CAAC,CACJ;IACD5B,iBAAiB,EAAE,EAAE;IACrBE,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAE2Y,gBAAgB;AAC1BlR,IAAAA,SAAS,EAAE8Q,8BAAAA;GACZ;AACDF,EAAAA,QAAQ,EAAE;AACR/X,IAAAA,WAAW,EAAE,UAAU;AACvBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBE,MAAAA,MAAM,EAAE,UAAA;AACV,KAAC,CACF;IACD1B,iBAAiB,EAAE,EAAE;AACrBE,IAAAA,eAAe,EAAE;AACf,MAAA,WAAW,EAAE,UAAA;KACd;AACDZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAE4Y,QAAQ;AAClBnR,IAAAA,SAAS,EAAE8Q,8BAAAA;AACb,GAAA;AACF,CAAC;;AC3SD;AACA,SAASQ,6BAA6B,CAMnC,IAAA,EAAA;EAAA,IALD3T,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAA,SAAA,GAAoBG,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,oBACE5Q,yBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CAAuB,eACvBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACoT,SAAS,GAAGpT,UAAU,CAACoT,SAAS,GAAG,EAAG;AACxD,IAAA,WAAW,EAAC,gBAAgB;AAC5B,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC7K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACboT,SAAS,EAAErQ,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACvC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACFa,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CAAuB,eACvBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACqT,SAAS,GAAGrT,UAAU,CAACqT,SAAS,GAAG,EAAG;AACxD,IAAA,WAAW,EAAC,gBAAgB;AAC5B,IAAA,GAAG,EAAC,WAAW;AACf,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC9K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACbqT,SAAS,EAAEtQ,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACvC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;GACV,CAAA,eACFa,yBAC6B,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,4BAAA,EAAA,GAAG,eAC9BA,yBAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,IAAA,IAAI,EAAC,mFAAA;AAAmF,GAAA,eACzFA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAS,QAAA;AACzB,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,mDAAA;AAAmD,GAAA,CACxD,CACA,CACD,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACsT,OAAO,GAAGtT,UAAU,CAACsT,OAAO,GAAG,EAAG;AACpD,IAAA,WAAW,EAAC,4BAA4B;AACxC,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,SAAC/K,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbsT,QAAAA,OAAO,EAAE/K,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACnB,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,iBAAA;GACV,CAAA,eACFa,wCAAC,gBAAgB,EAAA;AAAC,IAAA,UAAU,EAAE0J,UAAW;AAAC,IAAA,QAAQ,EAAE/H,SAAAA;AAAS,GAAA,CAAG,eAChE3B,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,eACjCA,wCAAC,UAAU,EAAA;AACT,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB2B,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,cAAc,EAAEA,UAAU,CAAC,cAAc,CAAC,GACtCA,UAAU,CAAC,cAAc,CAAC,KAAK,IAAI,GACnC,IAAA;OACJ,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EACPA,UAAU,CAAC,cAAc,CAAC,GACtBA,UAAU,CAAC,cAAc,CAAC,KAAK,IAAI,GACnC,KACL;AACD,IAAA,KAAK,EAAC,YAAA;AAAY,GAAA,CAClB,CACE,CACF,CAAA;AAEV,CAAA;AAEA,SAAS4T,UAAU,CAMhB,KAAA,EAAA;EAAA,IALD5T,UAAU,SAAVA,UAAU;AACV/H,IAAAA,UAAQ,SAARA,QAAQ,CAAA;EAKR,oBACE3B,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,qBACbA,yBAAsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAA,eACtBA,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAAS,SAAA,CAAA;AAC1B,IAAA,WAAW,EAAC,SAAS;AACrB,IAAA,IAAI,EAAC,UAAU;IACf,QAAQ,EAAE,kBAACuI,EAAyC,EAAA;MAAA,OAClDtQ,UAAQ,cAAM+H,UAAU,EAAA;QAAE,SAASuI,EAAAA,EAAE,CAACE,MAAM,CAAChT,KAAAA;OAAQ,CAAA,CAAA,CAAA;KACtD;AACD,IAAA,SAAS,EAAC,eAAA;AAAe,GAAA,CACzB,CACa,CAAA;AAErB,CAAA;AAEA,IAAMoe,eAAwC,GAAG;AAC/CC,EAAAA,UAAU,EAAE;AACV5Y,IAAAA,WAAW,EAAE,aAAa;AAC1BW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAC;AACjBE,MAAAA,MAAM,EAAE,UAAA;AACV,KAAC,CACF;IACD1B,iBAAiB,EAAE,EAAE;AACrBE,IAAAA,eAAe,EAAE;AACf,MAAA,WAAW,EAAE,UAAA;KACd;AACDZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAEgZ,UAAU;AACpBvR,IAAAA,SAAS,EAAEsR,6BAAAA;AACb,GAAA;AACF,CAAC;;AC9HD;AACA,SAASI,yBAAyB,CAM/B,IAAA,EAAA;EAAA,IALD/T,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAA,SAAA,GAAoBG,cAAQ,CAACuO,WAAW,EAAE,CAAC;IAApCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,oBACE5Q,yBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,aAAA,EACc,GAAG,eACfA,wCAACgR,OAAO,EAAA;IACN,EAAE,EAAKJ,SAAS,GAAY,WAAA;AAC5B,IAAA,IAAI,EAAC,MAAM;AACX,IAAA,IAAI,EAAC,gDAAA;GACL,CAAA,CACC,eACL5Q,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACgU,UAAU,GAAGhU,UAAU,CAACgU,UAAU,GAAG,EAAG;AAC1D,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,GAAG,EAAC,YAAY;AAChB,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAACzL,QAAAA,CAAAA,EAAyC,EAAK;MACvD,IAAIC,MAAqB,GAAGE,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;MACvD,IAAIqN,MAAM,CAACE,KAAK,CAACwF,MAAM,CAAC,EAAEA,MAAM,GAAG,IAAI,CAAA;AACvCvQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbgU,QAAAA,UAAU,EAAExL,MAAAA;OACZ,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACFlS,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,SAAA,CAAgB,eAChBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACiU,OAAO,IAAIjU,UAAU,CAACkU,gBAAgB,IAAI,EAAG;AAC/D,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC3L,QAAAA,CAAAA,EAAyC,EAAK;MACvD,IAAIC,MAAqB,GAAGE,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;MACvD,IAAIqN,MAAM,CAACE,KAAK,CAACwF,MAAM,CAAC,EAAEA,MAAM,GAAG,IAAI,CAAA;AACvC;MACA,IAAIxI,UAAU,CAACkU,gBAAgB,EAAE;AAC/Bjc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbkU,UAAAA,gBAAgB,EAAE1L,MAAM;AACxByL,UAAAA,OAAO,EAAE,IAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACLhc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbiU,UAAAA,OAAO,EAAEzL,MAAM;AACf0L,UAAAA,gBAAgB,EAAE,IAAA;SAClB,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACF5d,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,eACjCA,wCAAC,UAAU,EAAA;AACT,IAAA,GAAG,EAAC,kBAAkB;AACtB,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;MACnB,IAAM6d,MAAM,GAAGnU,UAAU,CAACiU,OAAO,IAAIjU,UAAU,CAACkU,gBAAgB,CAAA;MAChE,IAAIlU,UAAU,CAACkU,gBAAgB,EAAE;AAC/Bjc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbkU,UAAAA,gBAAgB,EAAE,IAAI;AACtBD,UAAAA,OAAO,EAAEE,MAAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACLlc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbkU,UAAAA,gBAAgB,EAAEC,MAAM;AACxBF,UAAAA,OAAO,EAAE,IAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;AACF,IAAA,SAAS,EAAE,CAAC,CAACjU,UAAU,CAACkU,gBAAiB;IACzC,QAAQ,EAAE,CAAClU,UAAU,CAACiU,OAAO,IAAI,CAACjU,UAAU,CAACkU,gBAAiB;AAC9D,IAAA,KAAK,EAAC,mBAAA;AAAmB,GAAA,CACzB,CACE,eACN5d,yBAAgB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,SAAA,CAAA,eAChBA,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAACoU,OAAO,IAAIpU,UAAU,CAACqU,gBAAgB,IAAI,EAAG;AAC/D,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAAC9L,QAAAA,CAAAA,EAAyC,EAAK;MACvD,IAAIC,MAAqB,GAAGE,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAC,CAAA;MACvD,IAAIqN,MAAM,CAACE,KAAK,CAACwF,MAAM,CAAC,EAAEA,MAAM,GAAG,IAAI,CAAA;AACvC;MACA,IAAIxI,UAAU,CAACkU,gBAAgB,EAAE;AAC/Bjc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbqU,UAAAA,gBAAgB,EAAE7L,MAAM;AACxB4L,UAAAA,OAAO,EAAE,IAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACLnc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACboU,UAAAA,OAAO,EAAE5L,MAAM;AACf6L,UAAAA,gBAAgB,EAAE,IAAA;SAClB,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACF/d,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,eACjCA,wCAAC,UAAU,EAAA;AACT,IAAA,GAAG,EAAC,kBAAkB;AACtB,IAAA,aAAa,EAAE,SAAM,aAAA,GAAA;MACnB,IAAMge,MAAM,GAAGtU,UAAU,CAACoU,OAAO,IAAIpU,UAAU,CAACqU,gBAAgB,CAAA;MAChE,IAAIrU,UAAU,CAACqU,gBAAgB,EAAE;AAC/Bpc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbqU,UAAAA,gBAAgB,EAAE,IAAI;AACtBD,UAAAA,OAAO,EAAEE,MAAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAC,MAAM;AACLrc,QAAAA,SAAQ,cACH+H,UAAU,EAAA;AACbqU,UAAAA,gBAAgB,EAAEC,MAAM;AACxBF,UAAAA,OAAO,EAAE,IAAA;SACT,CAAA,CAAA,CAAA;AACJ,OAAA;KACA;AACF,IAAA,SAAS,EAAE,CAAC,CAACpU,UAAU,CAACqU,gBAAiB;IACzC,QAAQ,EAAE,CAACrU,UAAU,CAACoU,OAAO,IAAI,CAACpU,UAAU,CAACqU,gBAAiB;AAC9D,IAAA,KAAK,EAAC,mBAAA;AAAmB,GAAA,CACzB,CACE,CACF,CAAA;AAEV,CAAA;AAEA,SAASE,WAAW,CAMjB,KAAA,EAAA;EAAA,IALDvU,UAAU,SAAVA,UAAU;AACV/H,IAAAA,UAAQ,SAARA,QAAQ,CAAA;EAKR,oBACE3B,yBAAA,CAAA,aAAA,CAACA,yBAAK,CAAC,QAAQ,qBACbA,yBAAuB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,gBAAA,CAAA,eACvBA,wCAACgS,gBAAK,EAAA;IACJ,KAAK,EAAEtI,UAAU,CAAS,SAAA,CAAA;AAC1B,IAAA,WAAW,EAAC,SAAS;AACrB,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,kBAACuI,EAAyC,EAAA;MAAA,OAClDtQ,UAAQ,cACH+H,UAAU,EAAA;AACb,QAAA,SAAA,EAAS0I,UAAU,CAACH,EAAE,CAACE,MAAM,CAAChT,KAAK,CAAA;OACnC,CAAA,CAAA,CAAA;KACH;AACD,IAAA,SAAS,EAAC,aAAA;AAAa,GAAA,CACvB,CACa,CAAA;AAErB,CAAA;AAEA,IAAM+e,YAAqC,GAAG;AAC5CC,EAAAA,OAAO,EAAE;AACPvZ,IAAAA,WAAW,EAAE,SAAS;AACtBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,SAAS,CAAA;AACnB,KAAC,EACD;MACEA,KAAK,EAAE,CAAC,SAAS,CAAC;AAClBE,MAAAA,MAAM,EAAE,QAAA;AACV,KAAC,CACF;IACD1B,iBAAiB,EAAE,EAAE;IACrBE,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,SAAS;AACfe,IAAAA,QAAQ,EAAE2Z,WAAW;AACrBlS,IAAAA,SAAS,EAAE0R,yBAAAA;GACZ;AACDxK,EAAAA,MAAM,EAAE;AACNrO,IAAAA,WAAW,EAAE,QAAQ;AACrBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,QAAQ,CAAA;AAClB,KAAC,CACF;IACDxB,iBAAiB,EAAE,EAAE;IACrBE,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAE2Z,WAAW;AACrBlS,IAAAA,SAAS,EAAE0R,yBAAAA;AACb,GAAA;AACF,CAAC;;ACzLD;AACA,SAASW,wBAAwB,CAM9B,IAAA,EAAA;EAAA,IALD1U,UAAU,QAAVA,UAAU;AACV/H,IAAAA,SAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,oBACE3B,yBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAsB,eACtBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEtI,UAAU,CAAC2U,QAAQ,IAAI,EAAG;AACjC,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAACpM,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACb2U,QAAQ,EAAE5R,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACtC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,eACFa,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAsB,eACtBA,yBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEtI,UAAU,CAAC4U,QAAQ,IAAI,EAAG;AACjC,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,GAAG,EAAC,SAAS;AACb,IAAA,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE,SAACrM,QAAAA,CAAAA,EAAyC,EAAK;AACvDtQ,MAAAA,SAAQ,cACH+H,UAAU,EAAA;QACb4U,QAAQ,EAAE7R,QAAQ,CAACwF,EAAE,CAACE,MAAM,CAAChT,KAAK,EAAE,EAAE,CAAA;OACtC,CAAA,CAAA,CAAA;KACF;AACF,IAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,CAC7B,CACE,CAAA;AAEV,CAAA;AAEA,SAASof,qBAAqB,CAIjB,KAAA,EAAA;EAAA,IAHXC,iBAAiB,SAAjBA,iBAAiB,CAAA;EAIjB,OAAO,SAASC,SAAS,CAQtB,KAAA,EAAA;IAAA,IAPD/U,UAAU,SAAVA,UAAU;AACV/H,MAAAA,UAAQ,SAARA,QAAQ;AACRiL,MAAAA,IAAI,SAAJA,IAAI,CAAA;IAMJ,IAAoB9K,SAAAA,GAAAA,cAAQ,CAACuO,WAAW,CAAC;MAAlCO,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAChB,IAAM3C,YAAY,GAAG,EAAE,CAAA;IACvB,IAAMC,UAAU,GAAG,EAAE,CAAA;AACrB,IAAA,IAAMlK,aAAa,GAAGkM,WAAW,CAC/B5P,MAAM,CAACC,MAAM,CACX,EAAE,EACFie,iBAAiB,EAChB5R,IAAI,IAAIA,IAAI,CAAC8R,gBAAgB,IAAK,EAAE,CACtC,EACD9R,IAAI,IAAIA,IAAI,CAAC6J,qBAAqB,CACnC,CAAA;;AAED;IACAnW,MAAM,CAACmE,IAAI,CAACiF,UAAU,CAAC,CAAChF,OAAO,CAAC,UAACyJ,QAAQ,EAAK;AAC5C,MAAA,IAAIA,QAAQ,CAACvE,UAAU,CAAC,MAAM,CAAC,EAAE;AAC/BsE,QAAAA,UAAU,CAACC,QAAQ,CAACtC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGnC,UAAU,CAACyE,QAAQ,CAAC,CAAA;OACzD,MAAM,IAAIA,QAAQ,CAACvE,UAAU,CAAC,KAAK,CAAC,EAAE;AACrCsE,QAAAA,UAAU,CAACC,QAAQ,CAAC,GAAGzE,UAAU,CAACyE,QAAQ,CAAC,CAAA;AAC7C,OAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC5G,QAAQ,CAAC4G,QAAQ,CAAC,EAAE;AACnDF,QAAAA,YAAY,CAACE,QAAQ,CAAC,GAAGzE,UAAU,CAACyE,QAAQ,CAAC,CAAA;AAC/C,OAAA;AACF,KAAC,CAAC,CAAA;IAEF,IAAMtF,cAAc,GAAGa,UAAU,CAACb,cAAc,GAC5Ca,UAAU,CAACb,cAAc,GACzB,EAAE,CAAA;IACN,IAAMC,YAAY,GAAGY,UAAU,CAACZ,YAAY,GAAGY,UAAU,CAACZ,YAAY,GAAG,EAAE,CAAA;AAC3E,IAAA,IAAA,eAAA,GAAgC9I,yBAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC;MAA9C8W,QAAQ,GAAA,eAAA,CAAA,CAAA,CAAA;MAAEC,WAAW,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAC5B,IAAA,IAAInP,UAAU,CAACnG,IAAI,KAAK,OAAO,EAAE;AAC/B,MAAA,oBAAOvD,yBAAsB,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAC/B,KAAA;IACA,oBACEA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC,YAAA;AAAY,KAAA,eACzBA,wCAAC,UAAU,EAAA;AACT,MAAA,aAAa,EAAE,SAAM,aAAA,GAAA;AACnB,QAAA,IAAIiO,YAAY,CAAC0Q,KAAK,CAACpb,IAAI,KAAK,QAAQ,EAAE;AACxC5B,UAAAA,UAAQ,cACH+H,UAAU,EAAA;YACbiV,KAAK,EAAA,QAAA,CAAA,EAAA,EACA1Q,YAAY,CAAC0Q,KAAK,EAAA;AACrBpb,cAAAA,IAAI,EAAE,QAAA;AAAQ,aAAA,CAAA;WAEhB,CAAA,CAAA,CAAA;AACJ,SAAC,MAAM;AACL5B,UAAAA,UAAQ,cACH+H,UAAU,EAAA;YACbiV,KAAK,EAAA,QAAA,CAAA,EAAA,EACA1Q,YAAY,CAAC0Q,KAAK,EAAA;AACrBpb,cAAAA,IAAI,EAAE,QAAA;AAAQ,aAAA,CAAA;WAEhB,CAAA,CAAA,CAAA;AACJ,SAAA;OACA;AACF,MAAA,SAAS,EAAE0K,YAAY,CAAC0Q,KAAK,CAACpb,IAAI,KAAK,QAAS;AAChD,MAAA,KAAK,EAAC,SAAS;AACf,MAAA,EAAE,EAAKqN,SAAS,GAAA,YAAA;KAChB,CAAA,EACDzD,oCAAoC,CAAC;AACpC1C,MAAAA,UAAU,EAAE;AAAEnD,QAAAA,UAAU,EAAE;UAAEsX,IAAI,EAAE3Q,YAAY,CAAC0Q,KAAAA;AAAM,SAAA;OAAG;AACxDvR,MAAAA,YAAY,EAAE;QAAEwR,IAAI,EAAE1Q,UAAU,CAACyQ,KAAAA;OAAO;AACxChd,MAAAA,QAAQ,EAAE,SAAA,QAAA,CAACgF,MAAM,EAAEC,QAAQ,EAAK;AAC9BjF,QAAAA,UAAQ,cACH+H,UAAU,EAAA;AACbiV,UAAAA,KAAK,EAAEhY,MAAM,CAACW,UAAU,CAACsX,IAAI;AAC7B,UAAA,WAAW,EAAEhY,QAAQ,CAACgY,IAAI,IAAI,EAAC;SAC/B,CAAA,CAAA,CAAA;OACH;AACDtR,MAAAA,IAAI,EAAEsD,SAAS;AACf/H,MAAAA,cAAc,EAAdA,cAAc;AACdC,MAAAA,YAAY,EAAZA,YAAY;AACZuE,MAAAA,OAAO,EAAE,IAAI;MACbE,aAAa,EAAE,CAACqL,QAAQ,CAAC;MACzBpL,gBAAgB,EAAE,0BAACqR,MAAM,EAAA;AAAA,QAAA,OAAKhG,WAAW,CAACgG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;AAAA,OAAA;AACpD7a,MAAAA,aAAa,EAAbA,aAAa;AACb4I,MAAAA,IAAI,EAAJA,IAAI;AACJxH,MAAAA,YAAY,EAAED,oBAAoB,CAACnB,aAAa,CAAC;MACjDyJ,IAAI,EAAE,gBAACpN,KAAK,EAAA;QAAA,oBAAKL,yBAAA,CAAA,aAAA,CAAC8e,IAAI,EAAA,QAAA,CAAA,EAAA,EAAKze,KAAK,EAAA;AAAE,UAAA,mBAAmB,EAAE,KAAA;SAAS,CAAA,CAAA,CAAA;AAAA,OAAA;AAChEqN,MAAAA,OAAO,EAAPA,OAAAA;AACF,KAAC,CAAC,CACE,CAAA;GAET,CAAA;AACH,CAAA;AAEA,IAAM8Q,iBAAiB,gBAClBrE,aAAa,EACb4E,gBAAiB,EACjBC,eAAgB,EAChBd,YAAY,CACU,CAAA;AAC3BM,iBAAiB,CAACtL,KAAK,GAAG;AACxBtO,EAAAA,WAAW,EAAE,OAAO;AACpBW,EAAAA,OAAO,EAAE,CACP;IACEE,KAAK,EAAE,CAAC,OAAO,CAAA;AACjB,GAAC,CACF;AACDxB,EAAAA,iBAAiB,EAAE;AACjB0a,IAAAA,KAAK,EAAE;AAAEpb,MAAAA,IAAI,EAAE,QAAA;AAAS,KAAA;GACzB;EACDY,eAAe,EAAE,EAAE;AACnBZ,EAAAA,IAAI,EAAE,OAAO;EACbe,QAAQ,EAAEia,qBAAqB,CAAC;AAAEC,IAAAA,iBAAiB,EAAjBA,iBAAAA;AAAkB,GAAC,CAAC;AACtDzS,EAAAA,SAAS,EAAEqS,wBAAAA;AACb,CAAC,CAAA;AAED,IAAMa,WAAoC,GAAG;AAC3C/L,EAAAA,KAAK,EAAE;AACLtO,IAAAA,WAAW,EAAE,OAAO;AACpBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,OAAO,CAAA;AACjB,KAAC,CACF;AACDxB,IAAAA,iBAAiB,EAAE;AACjB0a,MAAAA,KAAK,EAAE;AAAEpb,QAAAA,IAAI,EAAE,QAAA;AAAS,OAAA;KACzB;IACDY,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,OAAO;IACbe,QAAQ,EAAEia,qBAAqB,CAAC;AAAEC,MAAAA,iBAAiB,EAAjBA,iBAAAA;AAAkB,KAAC,CAAC;AACtDzS,IAAAA,SAAS,EAAEqS,wBAAAA;AACb,GAAA;AACF,CAAC;;AC7LM,SAASc,4BAA4B,CAMnC,IAAA,EAAA;EAAA,IALPxV,UAAU,QAAVA,UAAU;AACV/H,IAAAA,QAAQ,QAARA,QAAQ,CAAA;EAKR,oBACE3B,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eACEA,wCAAC,gBAAgB,EAAA;AAAC,IAAA,UAAU,EAAE0J,UAAW;AAAC,IAAA,QAAQ,EAAE/H,QAAAA;AAAS,GAAA,CAAG,CAC5D,CAAA;AAEV,CAAA;AAEA,SAASwd,SAAS,CAMf,KAAA,EAAA;EAAA,IALDzV,UAAU,SAAVA,UAAU;AACV/H,IAAAA,SAAQ,SAARA,QAAQ,CAAA;AAKR,EAAA,IAAMwH,OAAO,GAAG,CAACO,UAAU,CAAC5D,IAAI,IAAI,EAAE,EAAEsD,KAAK,CAAC,GAAG,CAAC,CAAA;EAClD,IAAMgW,iBAAiB,GACrBjW,OAAO,CAACgB,MAAM,KAAK,CAAC,IACpBhB,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAClBA,OAAO,CAAC,CAAC,CAAC,KAAK,aAAa,IAC5B,CAACO,UAAU,CAACb,cAAc,IAAI,EAAE,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GACzCO,UAAU,CAACb,cAAc,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC9H,KAAK,IAAIqI,UAAU,CAAC5D,IAAI,GAC9D4D,UAAU,CAAC5D,IAAI,CAAA;EAErB,oBACE9F,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,aAAA;AAAa,GAAA,eAC1BA,wCAACuR,0BAAM,EAAA;AACL,IAAA,KAAK,EAAE;MACLpS,KAAK,EAAEuK,UAAU,CAAC5D,IAAI;AACtBzG,MAAAA,KAAK,EAAE+f,iBAAAA;KACP;AACF,IAAA,WAAW,EAAC,WAAW;AACvB,IAAA,OAAO,EAAE9e,MAAM,CAACmE,IAAI,CAACiF,UAAU,CAACb,cAAc,IAAI,EAAE,CAAC,CAAClG,GAAG,CAAC,UAACoF,GAAG,EAAA;MAAA,OAAM;AAClE5I,QAAAA,KAAK,qBAAmB4I,GAAK;QAC7B1I,KAAK,EAAEqK,UAAU,CAACb,cAAc,CAACd,GAAG,CAAC,CAAC1G,KAAK,IAAqB0G,gBAAAA,GAAAA,GAAAA;OACjE,CAAA;AAAA,KAAC,CAAE;IACJ,QAAQ,EAAE,SAAC+I,QAAAA,CAAAA,GAAQ,EAAK;AACtBnP,MAAAA,SAAQ,cAAM+H,UAAU,EAAA;QAAE5D,IAAI,EAAEgL,GAAG,CAAC3R,KAAAA;OAAQ,CAAA,CAAA,CAAA;KAC5C;AACF,IAAA,SAAS,EAAC,aAAA;AAAa,GAAA,CACvB,CACE,CAAA;AAEV,CAAA;AAEA,IAAMkgB,eAAwC,GAAG;AAC/CC,EAAAA,GAAG,EAAE;AACH1a,IAAAA,WAAW,EAAE,WAAW;AACxBW,IAAAA,OAAO,EAAE,CACP;MACEE,KAAK,EAAE,CAAC,MAAM,CAAC;AACfK,MAAAA,IAAI,EAAE,IAAA;AACR,KAAC,CACF;AACD7B,IAAAA,iBAAiB,EAAE;AACjB6B,MAAAA,IAAI,EAAE,EAAE;AACRzE,MAAAA,KAAK,EAAE,EAAE;AACTuJ,MAAAA,WAAW,EAAE,EAAA;KACd;IACDzG,eAAe,EAAE,EAAE;AACnBZ,IAAAA,IAAI,EAAE,QAAQ;AACde,IAAAA,QAAQ,EAAE6a,SAAS;AACnBpT,IAAAA,SAAS,EAAEmT,4BAAAA;AACb,GAAA;AACF,CAAC;;ACrED,IAAMK,mBAAmB,GAAA,QAAA,CAAA,EAAA,EACpBpF,aAAa,EACbkF,eAAe,EACfN,gBAAiB,EACjBC,eAAgB,EAChBd,YAAY,EACZsB,WAAW,CACW;;ACS3B,IAAM5gB,WAAS,GAAGC,wBAAe,CAAC;EAChC4gB,WAAW,EAAA,QAAA,CAAA;AACT,IAAA,YAAY,EAAE,QAAQ;AACtB,IAAA,OAAO,EAAE;AACP/e,MAAAA,MAAM,EAAE,SAAA;KACT;AACD,IAAA,8CAA8C,EAAE;AAC9C0C,MAAAA,KAAK,EAAE,MAAA;KACR;AACD,IAAA,gBAAgB,EAAE;AAChB,MAAA,WAAW,EAAE,MAAM;AACnBA,MAAAA,KAAK,EAAE,OAAA;KACR;AACD,IAAA,sCAAsC,EAAE;AACtCA,MAAAA,KAAK,EAAE,OAAO;AACd,MAAA,WAAW,EAAE,OAAO;AACpB0Q,MAAAA,MAAM,EAAE,QAAA;AACV,KAAA;AAAC,GAAA,EACE4L,MAAW,EAAA;AACd,IAAA,mBAAmB,EAAE;AACnB,MAAA,SAAS,EAAE;AACT9L,QAAAA,MAAM,EAAE,iBAAA;OACT;AACD7U,MAAAA,OAAO,EAAE,OAAO;AAChB0S,MAAAA,KAAK,EAAE,KAAK;AACZ,MAAA,WAAW,EAAE,OAAO;AACpBqC,MAAAA,MAAM,EAAE,UAAU;AAClBF,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAK;AACtB,MAAA,kBAAkB,EAAE,OAAO;AAC3B,MAAA,MAAM,EAAE;AACNnC,QAAAA,KAAK,EAAE,MAAM;AACb,QAAA,YAAY,EAAE,MAAM;AACpB1S,QAAAA,OAAO,EAAE,cAAc;AACvBqE,QAAAA,KAAK,EAAE,SAAS;AAChB0Q,QAAAA,MAAM,EAAE,oBAAoB;AAC5B,QAAA,WAAW,EAAE,MAAA;OACd;AACD,MAAA,WAAW,EAAE;AACX,QAAA,eAAe,EAAE,gBAAA;OAClB;AACD,MAAA,UAAU,EAAE;QACV,OAAO,EAAA,MAAA;AACT,OAAA;KACD;AACD,IAAA,yBAAyB,EAAE;AAAEF,MAAAA,MAAM,EAAE,iBAAA;KAAmB;AACxD,IAAA,mBAAmB,EAAE;AACnBA,MAAAA,MAAM,EAAE,iBAAA;KACT;AACD,IAAA,sBAAsB,EAAE;AACtBA,MAAAA,MAAM,EAAE,kBAAA;KACT;AACD,IAAA,sBAAsB,EAAE;AACtB,MAAA,SAAS,EAAE;AACTA,QAAAA,MAAM,EAAE,iBAAA;OACT;AACD7U,MAAAA,OAAO,EAAE,OAAO;AAChB0S,MAAAA,KAAK,EAAE,KAAK;AACZ,MAAA,WAAW,EAAE,OAAO;AACpBqC,MAAAA,MAAM,EAAE,UAAU;AAClBF,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAK;AACtB,MAAA,kBAAkB,EAAE,OAAO;AAC3B,MAAA,MAAM,EAAE;AACNnC,QAAAA,KAAK,EAAE,MAAM;AACb,QAAA,YAAY,EAAE,MAAM;AACpB1S,QAAAA,OAAO,EAAE,cAAc;AACvBqE,QAAAA,KAAK,EAAE,SAAS;AAChB0Q,QAAAA,MAAM,EAAE,oBAAoB;AAC5B,QAAA,WAAW,EAAE,MAAA;OACd;AACD,MAAA,WAAW,EAAE;AACX,QAAA,eAAe,EAAE,gBAAA;OAClB;AACD,MAAA,UAAU,EAAE;QACV,OAAO,EAAA,MAAA;AACT,OAAA;KACD;AACD,IAAA,4BAA4B,EAAE;AAAEF,MAAAA,MAAM,EAAE,iBAAA;KAAmB;AAC3D,IAAA,sBAAsB,EAAE;AACtBA,MAAAA,MAAM,EAAE,iBAAA;KACT;AACD,IAAA,yBAAyB,EAAE;AACzBA,MAAAA,MAAM,EAAE,kBAAA;KACT;AACD,IAAA,UAAU,EAAE;AACVD,MAAAA,SAAS,EAAE,MAAM;AACjBlC,MAAAA,KAAK,EAAE,KAAK;AACZqC,MAAAA,MAAM,EAAE,UAAU;AAClB,MAAA,MAAM,EAAE;AACN1Q,QAAAA,KAAK,EAAE,OAAO;AACdvC,QAAAA,QAAQ,EAAE,MAAM;AAChB2X,QAAAA,UAAU,EAAE,MAAM;AAClB1E,QAAAA,MAAM,EAAE,GAAA;OACT;AACD,MAAA,OAAO,EAAE;AAAEjT,QAAAA,QAAQ,EAAE,MAAA;AAAO,OAAA;KAC7B;AACD,IAAA,gCAAgC,EAAE;AAChCuC,MAAAA,KAAK,EAAE,MAAM;AACb,MAAA,eAAe,EAAE;AAAEmV,QAAAA,eAAe,EAAE,WAAA;AAAY,OAAA;KACjD;AACD,IAAA,mBAAmB,EAAE;AACnB,MAAA,SAAS,EAAE;AAAEA,QAAAA,eAAe,EAAE,WAAA;OAAa;AAC3C,MAAA,eAAe,EAAE;AACfA,QAAAA,eAAe,EAAE,WAAW;AAC5B3E,QAAAA,MAAM,EAAE,gBAAA;AACV,OAAA;AACF,KAAA;GACD,CAAA;AACD+L,EAAAA,QAAQ,EAAE;AACR5gB,IAAAA,OAAO,EAAE,OAAO;AAChB+U,IAAAA,MAAM,EAAE,QAAQ;AAChB,IAAA,kBAAkB,EAAE,SAAS;AAC7BF,IAAAA,MAAM,EAAE,mBAAmB;AAC3B,IAAA,eAAe,EAAE,KAAK;AACtBnC,IAAAA,KAAK,EAAE,KAAK;AACZ7Q,IAAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE;AACP6Q,MAAAA,KAAK,EAAE,KAAK;AACZ1S,MAAAA,OAAO,EAAE,cAAc;AACvB,MAAA,YAAY,EAAE,MAAM;AACpB6B,MAAAA,OAAO,EAAE,MAAA;KACV;AACD,IAAA,eAAe,EAAE;AACf,MAAA,YAAY,EAAE,MAAA;KACf;AACD,IAAA,qBAAqB,EAAE;AACrB,MAAA,YAAY,EAAE,MAAA;KACf;AACD,IAAA,MAAM,EAAE;AACN,MAAA,WAAW,EAAE,MAAM;AACnB,MAAA,aAAa,EAAE,MAAM;AACrB,MAAA,aAAa,EAAE,MAAA;AACjB,KAAA;GACD;AACDgf,EAAAA,QAAQ,EAAE;AACR7gB,IAAAA,OAAO,EAAE,MAAM;AACf2S,IAAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,gCAAgC,EAAE;AAChCkC,MAAAA,MAAM,EAAE,mBAAmB;AAC3BxQ,MAAAA,KAAK,EAAE,SAAA;KACR;AACD,IAAA,eAAe,EAAE;AACfyc,MAAAA,SAAS,EAAE,OAAO;AAClBC,MAAAA,SAAS,EAAE,QAAA;KACZ;AACD,IAAA,aAAa,EAAE;AACbpf,MAAAA,MAAM,EAAE,SAAS;AACjB3B,MAAAA,OAAO,EAAE,OAAO;AAChBqE,MAAAA,KAAK,EAAE,QAAQ;AACfvC,MAAAA,QAAQ,EAAE,OAAA;AACZ,KAAA;GACD;AACDkf,EAAAA,UAAU,EAAE;AACVpf,IAAAA,SAAS,EAAE,KAAK;AAChBgT,IAAAA,SAAS,EAAE,QAAQ;AACnB,IAAA,OAAO,EAAE;AAAEjT,MAAAA,MAAM,EAAE,SAAS;AAAE0C,MAAAA,KAAK,EAAE,QAAQ;AAAEvC,MAAAA,QAAQ,EAAE,OAAA;AAAQ,KAAA;AACnE,GAAA;AACF,CAAC,CAAC,CAAA;AAEa,SAASmf,WAAW,CAY1B,IAAA,EAAA;EAAA,IAXPrZ,MAAM,QAANA,MAAM;AACNC,IAAAA,QAAQ,QAARA,QAAQ;AACRjF,IAAAA,SAAQ,QAARA,QAAQ;AACRiL,IAAAA,IAAI,QAAJA,IAAI;AACJzM,IAAAA,SAAS,QAATA,SAAS,CAAA;EAQT,IAAMP,OAAO,GAAGhB,WAAS,EAAE,CAAA;EAC3B,IAAM6L,UAAU,GAAI/G,KAAK,CAACiD,MAAM,CAAC,IAAwB,EAAE,CAAA;EAC3D8D,UAAU,CAAClH,IAAI,GAAG,QAAQ,CAAA;EAC1B,IAAM6J,YAAY,GAAI1J,KAAK,CAACkD,QAAQ,CAAC,IAAwB,EAAE,CAAA;AAC/D,EAAA,IAAM5C,aAAa,GAAGkM,WAAW,CAC/B5P,MAAM,CAACC,MAAM,CACX,EAAE,EACFgf,mBAAmB,EAClB3S,IAAI,IAAIA,IAAI,CAAC8R,gBAAgB,IAAK,EAAE,CACtC,EACD9R,IAAI,IAAIA,IAAI,CAAC6J,qBAAqB,CACnC,CAAA;EAED,IAAMzP,mBAAmB,GAAGkB,2BAA2B,CACrDuC,UAAU,EACV2C,YAAY,EACZpJ,aAAa,CACd,CAAA;AAED,EAAA,IAAM8W,UAAU,GAAGtQ,uBAAuB,CAACC,UAAU,CAAC,CAAA;EACtD,IAAMsQ,qBAAqB,GAAG,EAAIxS,CAAAA,MAAAA,CAAAA,KAAK,CAACuS,UAAU,CAAC,CAAEnY,CAAAA,GAAG,CAAC,YAAA;AAAA,IAAA,OAAM,KAAK,CAAA;GAAC,CAAA,CAAA;AACrE,EAAA,IAAA,eAAA,GAA0C3C,gBAAK,CAAC8B,QAAQ,CACtDiZ,qBAAqB,CACtB;IAFMxN,aAAa,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,gBAAgB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAGtC,EAAA,IAAMpI,YAAY,GAAGD,oBAAoB,CAACnB,aAAa,CAAC,CAAA;EAExD,oBACEhE,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAKJ,OAAO,CAAC6f,WAAW,GAAItf,GAAAA,IAAAA,SAAS,IAAI,EAAE,CAAA;AAAG,GAAA,eAC1DH,+BAACqb,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAE;MACLtc,OAAO,EAAEiI,mBAAmB,CAACmD,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAAA;KACrD;AACF,IAAA,KAAK,EAAC,SAAA;GAEN,eAAAnK,gBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,uBAAA,CAA8B,EAC7BgH,mBAAmB,CAACrE,GAAG,CAAC,UAAC2Y,OAAO,EAAEzY,KAAK,EAAA;IAAA,oBACtC7C,gBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,MAAA,GAAG,EAAE6C,KAAAA;AAAM,KAAA,EAAEyY,OAAO,CAAM,CAAA;AAAA,GAC/B,CAAC,CACI,EACP,CAAC,CAAC1O,IAAI,IAAIA,IAAI,CAACqT,YAAY,KAAK,KAAK,kBACpCjgB,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAEJ,OAAO,CAAC+f,QAAS;IAAC,WAAU,EAAA,WAAA;AAAW,GAAA,eACrD3f,gBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,gBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,WAAU,EAAA,iBAAA;GACX4M,EAAAA,IAAI,IACLA,IAAI,CAACqJ,MAAM,IACX,OAAOrJ,IAAI,CAACqJ,MAAM,CAACiK,aAAa,KAAK,QAAQ,GACzCtT,IAAI,CAACqJ,MAAM,CAACiK,aAAa,GACzB,WAAW,CACZ,eACLlgB,gBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEvH,UAAU,CAACpJ,KAAK,IAAI,EAAG;AAC9B,IAAA,WAAW,EAAC,OAAO;AACnB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,SAAC4Q,QAAAA,CAAAA,EAAyC,EAAK;MACvDtQ,SAAQ,CACNiC,SAAS,CAAA,QAAA,CAAA,EAAA,EACJ6G,UAAU,EAAA;AACbpJ,QAAAA,KAAK,EAAE4Q,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACjB,CAAA,CAAA,EACFyH,QAAQ,CACT,CAAA;KACD;AACF,IAAA,SAAS,EAAC,YAAA;GACV,CAAA,CACE,eACN5G,gBACE,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,eAAAA,gBAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,WAAU,EAAA,wBAAA;GACX4M,EAAAA,IAAI,IACLA,IAAI,CAACqJ,MAAM,IACX,OAAOrJ,IAAI,CAACqJ,MAAM,CAACkK,oBAAoB,KAAK,QAAQ,GAChDvT,IAAI,CAACqJ,MAAM,CAACkK,oBAAoB,GAChC,kBAAkB,CACnB,eACLngB,gBAAA,CAAA,aAAA,CAACgS,gBAAK,EAAA;AACJ,IAAA,KAAK,EAAEvH,UAAU,CAACG,WAAW,IAAI,EAAG;AACpC,IAAA,WAAW,EAAC,aAAa;AACzB,IAAA,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,kBAACqH,EAAyC,EAAA;AAAA,MAAA,OAClDtQ,SAAQ,CACNiC,SAAS,CAAA,QAAA,CAAA,EAAA,EACJ6G,UAAU,EAAA;AACbG,QAAAA,WAAW,EAAEqH,EAAE,CAACE,MAAM,CAAChT,KAAAA;OACvB,CAAA,CAAA,EACFyH,QAAQ,CACT,CAAA;KACF;AACD,IAAA,SAAS,EAAC,kBAAA;GACV,CAAA,CACE,CAET,eACD5G,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAA,YAAA,GAAeJ,OAAO,CAACggB,QAAAA;AAAW,GAAA,eAC9C5f,+BAACub,iCAAe,EAAA;IACd,SAAS,EAAE,qBAACzM,MAAM,EAAA;MAAA,OAChBD,SAAS,CAACC,MAAM,EAAE;AAChBnI,QAAAA,MAAM,EAAE8D,UAAU;AAClB7D,QAAAA,QAAQ,EAAEwG,YAAY;AACtBzL,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAACsJ,SAAS,EAAEgB,WAAW,EAAA;UAAA,OAC/BtK,SAAQ,CAACiC,SAAS,CAACqH,SAAS,CAAC,EAAErH,SAAS,CAACqI,WAAW,CAAC,CAAC,CAAA;AAAA,SAAA;QACxDpD,cAAc,EAAE4B,UAAU,CAACmB,WAAW;QACtC9C,YAAY,EAAEsE,YAAY,CAACxB,WAAW;AACtCxG,QAAAA,YAAY,EAAZA,YAAAA;AACF,OAAC,CAAC,CAAA;KACH;AACD,IAAA,SAAS,EAAC,WAAA;AAAW,GAAA,eAErBpF,+BAACwb,2BAAS,EAAA;AAAC,IAAA,WAAW,EAAC,WAAA;AAAW,GAAA,EAC/B,UAACC,iBAAiB,EAAA;IAAA,oBACjBzb,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;MACE,GAAG,EAAEyb,iBAAiB,CAACC,QAAAA;AAAS,KAAA,EAC5BD,iBAAiB,CAACE,cAAc,CAAA,EAEnCxO,oCAAoC,CAAC;AACpC1C,MAAAA,UAAU,EAAVA,UAAU;AACV2C,MAAAA,YAAY,EAAZA,YAAY;AACZzL,MAAAA,QAAQ,EAAE,SAAA,QAAA,CAACsJ,SAAS,EAAEgB,WAAW,EAAA;QAAA,OAC/BtK,SAAQ,CAACiC,SAAS,CAACqH,SAAS,CAAC,EAAErH,SAAS,CAACqI,WAAW,CAAC,CAAC,CAAA;AAAA,OAAA;MACxDpD,cAAc,EAAE4B,UAAU,CAACmB,WAAW;MACtC9C,YAAY,EAAEsE,YAAY,CAACxB,WAAW;AACtC0B,MAAAA,IAAI,EAAE,MAAM;AACZC,MAAAA,aAAa,EAAbA,aAAa;AACbC,MAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBxJ,MAAAA,aAAa,EAAbA,aAAa;AACb4I,MAAAA,IAAI,EAAJA,IAAI;AACJxH,MAAAA,YAAY,EAAZA,YAAY;AACZqI,MAAAA,IAAI,EAAJA,IAAI;AACJC,MAAAA,OAAO,EAAPA,OAAAA;AACF,KAAC,CAAC,CAAC/K,GAAG,CAAC,UAACmF,OAAY,EAAEjF,KAAK,EAAA;AAAA,MAAA,oBACzB7C,+BAAC4b,2BAAS,EAAA;QACR,GAAG,EAAE9T,OAAO,CAACC,GAAI;QACjB,WAAW,EAAED,OAAO,CAACC,GAAI;AACzB,QAAA,KAAK,EAAElF,KAAAA;AAAM,OAAA,EAEZ,UAACgZ,iBAAiB,EAAA;QAAA,oBACjB7b,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;UACE,GAAG,EAAE6b,iBAAiB,CAACH,QAAAA;SACnBG,EAAAA,iBAAiB,CAACC,cAAc,EAChCD,iBAAiB,CAACE,eAAe,CAEpCjU,EAAAA,OAAO,CACJ,CAAA;AAAA,OACP,CACS,CAAA;AAAA,KACb,CAAC,EACD2T,iBAAiB,CAACrK,WAAW,CAC1B,CAAA;GACP,CACS,CACI,CACd,eACNpR,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAA,cAAA,GAAiBJ,OAAO,CAACmgB,UAAAA;AAAa,GAAA,eAClD/f,+BAAC,GAAG,EAAA;AACF,IAAA,kBAAkB,EAAE,CAAC,CAAC4M,IAAI,IAAI,EAAE,EAAEkK,mBAAmB,IAAI,EAAE,EAAE1L,GAAI;IACjE,OAAO,EAAE,SAACmD,OAAAA,CAAAA,MAAc,EAAK;MAC3B,IAAIA,MAAM,KAAK,MAAM,EAAE;AACrB5B,QAAAA,UAAU,CAAC;AACThG,UAAAA,MAAM,EAAE8D,UAAU;AAClB7D,UAAAA,QAAQ,EAAEwG,YAAY;AACtBR,UAAAA,IAAI,EAAEA,IAAI;AACVjL,UAAAA,QAAQ,EAAE,SAAA,QAAA,CAACsJ,SAAS,EAAEgB,WAAW,EAAA;YAAA,OAC/BtK,SAAQ,CAACiC,SAAS,CAACqH,SAAS,CAAC,EAAErH,SAAS,CAACqI,WAAW,CAAC,CAAC,CAAA;AAAA,WAAA;UACxDpD,cAAc,EAAE4B,UAAU,CAACmB,WAAW;UACtC9C,YAAY,EAAEsE,YAAY,CAACxB,WAAW;AACtCxG,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAImJ,MAAM,KAAK,SAAS,EAAE;AAC/BrB,QAAAA,aAAa,CAAC;AACZvG,UAAAA,MAAM,EAAE8D,UAAU;AAClB7D,UAAAA,QAAQ,EAAEwG,YAAY;AACtBzL,UAAAA,QAAQ,EAAE,SAAA,QAAA,CAACsJ,SAAS,EAAEgB,WAAW,EAAA;YAAA,OAC/BtK,SAAQ,CAACiC,SAAS,CAACqH,SAAS,CAAC,EAAErH,SAAS,CAACqI,WAAW,CAAC,CAAC,CAAA;AAAA,WAAA;UACxDpD,cAAc,EAAE4B,UAAU,CAACmB,WAAW;UACtC9C,YAAY,EAAEsE,YAAY,CAACxB,WAAW;AACtCxG,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAA;KACA;AACF,IAAA,MAAM,EACJqF,UAAU,CAACnD,UAAU,IACrBhH,MAAM,CAACmE,IAAI,CAACgG,UAAU,CAACnD,UAAU,CAAC,CAAC6C,MAAM,KAAK,CAAA;AAC/C,GAAA,CACD,CACE,CACF,CAAA;AAEV;;AC/We,SAASiW,WAAW,CAY1B,IAAA,EAAA;EAAA,IAXPC,gBAAgB,QAAhBA,gBAAgB;AAChBC,IAAAA,kBAAkB,QAAlBA,kBAAkB;AAClB3e,IAAAA,SAAQ,QAARA,QAAQ;AACRiL,IAAAA,IAAI,QAAJA,IAAI;AACJxH,IAAAA,YAAY,QAAZA,YAAY,CAAA;EAQZ,IAAM0V,UAAU,GAAGtQ,uBAAuB,CAAC;AACzClD,IAAAA,UAAU,EAAE+Y,gBAAAA;AACd,GAAC,CAAC,CAAA;EACF,IAAMtF,qBAAqB,GAAG,EAAIxS,CAAAA,MAAAA,CAAAA,KAAK,CAACuS,UAAU,CAAC,CAAEnY,CAAAA,GAAG,CAAC,YAAA;AAAA,IAAA,OAAM,KAAK,CAAA;GAAC,CAAA,CAAA;AACrE,EAAA,IAAA,eAAA,GAA0C3C,yBAAK,CAAC8B,QAAQ,CACtDiZ,qBAAqB,CACtB;IAFMxN,aAAa,GAAA,eAAA,CAAA,CAAA,CAAA;IAAEC,gBAAgB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAGtC,EAAA,IAAMxJ,aAAa,GAAG1D,MAAM,CAACC,MAAM,CACjC,EAAE,EACFgf,mBAAmB,EAClB3S,IAAI,IAAIA,IAAI,CAAC8R,gBAAgB,IAAK,EAAE,CACtC,CAAA;EACD,IAAM6B,YAAY,GAAGpT,oCAAoC,CAAC;AACxD1C,IAAAA,UAAU,EAAE;AAAEnD,MAAAA,UAAU,EAAE+Y,gBAAAA;KAAkB;AAC5CjT,IAAAA,YAAY,EAAEkT,kBAAkB;AAChC3e,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAC6e,cAAc,EAAEC,gBAAgB,EAAK;MAC9C,IAAMC,KAAK,GAAGD,gBAAgB,CAAA;MAC9B,IAAME,KAAK,GAAG,EAAE,CAAA;MAEhBrgB,MAAM,CAACmE,IAAI,CAACic,KAAK,CAAC,CAAChc,OAAO,CAAC,UAACkc,SAAS,EAAK;QACxC,IAAI,CAAC,CAAC,aAAa,EAAE,UAAU,CAAC,CAACrZ,QAAQ,CAACqZ,SAAS,CAAC,EAClDD,KAAK,CAACC,SAAS,CAAC,GAAGF,KAAK,CAACE,SAAS,CAAC,CAAA;AACvC,OAAC,CAAC,CAAA;AACFjf,MAAAA,SAAQ,CAAC6e,cAAc,CAAClZ,UAAU,EAAEqZ,KAAK,CAAC,CAAA;KAC3C;AACDrT,IAAAA,IAAI,EAAE,aAAa;AACnBzE,IAAAA,cAAc,EAAEwX,gBAAgB;AAChCvX,IAAAA,YAAY,EAAEwX,kBAAkB;AAChC/S,IAAAA,aAAa,EAAbA,aAAa;AACbC,IAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBxJ,IAAAA,aAAa,EAAbA,aAAa;AACb4I,IAAAA,IAAI,EAAJA,IAAI;AACJxH,IAAAA,YAAY,EAAZA,YAAY;AACZqI,IAAAA,IAAI,EAAJA,IAAI;AACJC,IAAAA,OAAO,EAAPA,OAAAA;AACF,GAAC,CAAC,CAAC/K,GAAG,CAAC,UAACmF,OAAY,EAAA;IAAA,oBAClB9H,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,GAAG,EAAE,OAAO8H,OAAO,CAACC,GAAG,KAAK,QAAQ,GAAGD,OAAO,CAACC,GAAG,GAAG,EAAG;AACxD,MAAA,SAAS,EAAC,wBAAA;AAAwB,KAAA,EAEjCD,OAAO,CACJ,CAAA;AAAA,GACP,CAAC,CAAA;EAEF,oBACE9H,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,cAAA;GACZugB,EAAAA,YAAY,EACZA,YAAY,CAACpW,MAAM,KAAK,CAAC,iBAAInK,yBAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,kCAAA,CAAuC,eACrEA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,aAAA;AAAa,GAAA,eAC1BA,wCAAC,GAAG,EAAA;AACF,IAAA,kBAAkB,EAAE,CAAC,CAAC4M,IAAI,IAAI,EAAE,EAAEkK,mBAAmB,IAAI,EAAE,EAAE1L,GAAI;IACjE,OAAO,EAAE,SAACmD,OAAAA,CAAAA,MAAc,EAAK;MAC3B,IAAIA,MAAM,KAAK,MAAM,EAAE;AACrB5B,QAAAA,UAAU,CAAC;AACThG,UAAAA,MAAM,EAAE;AAAEW,YAAAA,UAAU,EAAE+Y,gBAAAA;WAAkB;AACxCzZ,UAAAA,QAAQ,EAAE0Z,kBAAkB;AAC5B1T,UAAAA,IAAI,EAAEA,IAAI;AACVjL,UAAAA,QAAQ,EAAE,SAAA,QAAA,CAAC6e,cAAc,EAAEC,gBAAgB,EAAK;YAC9C,IAAMC,KAAK,GAAGD,gBAAgB,CAAA;YAC9B,IAAME,KAAK,GAAG,EAAE,CAAA;YAEhBrgB,MAAM,CAACmE,IAAI,CAACic,KAAK,CAAC,CAAChc,OAAO,CAAC,UAACmc,kBAAkB,EAAK;cACjD,IACE,CAAC,CAAC,aAAa,EAAE,UAAU,CAAC,CAACtZ,QAAQ,CAACsZ,kBAAkB,CAAC,EAEzDF,KAAK,CAACE,kBAAkB,CAAC,GAAGH,KAAK,CAACG,kBAAkB,CAAC,CAAA;AACzD,aAAC,CAAC,CAAA;AACFlf,YAAAA,SAAQ,CAAC6e,cAAc,CAAClZ,UAAU,EAAEqZ,KAAK,CAAC,CAAA;WAC3C;AACD9X,UAAAA,cAAc,EAAEwX,gBAAgB;AAChCvX,UAAAA,YAAY,EAAEwX,kBAAkB;AAChClb,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,MAAM,IAAImJ,MAAM,KAAK,SAAS,EAAE;AAC/BrB,QAAAA,aAAa,CAAC;AACZvG,UAAAA,MAAM,EAAE;AAAEW,YAAAA,UAAU,EAAE+Y,gBAAAA;WAAkB;AACxCzZ,UAAAA,QAAQ,EAAE0Z,kBAAkB;AAC5B3e,UAAAA,QAAQ,EAAE,SAAA,QAAA,CAAC6e,cAAc,EAAEC,gBAAgB,EAAK;YAC9C,IAAMC,KAAK,GAAGD,gBAAgB,CAAA;YAC9B,IAAME,KAAK,GAAG,EAAE,CAAA;YAEhBrgB,MAAM,CAACmE,IAAI,CAACic,KAAK,CAAC,CAAChc,OAAO,CAAC,UAACmc,kBAAkB,EAAK;cACjD,IACE,CAAC,CAAC,aAAa,EAAE,UAAU,CAAC,CAACtZ,QAAQ,CAACsZ,kBAAkB,CAAC,EAEzDF,KAAK,CAACE,kBAAkB,CAAC,GAAGH,KAAK,CAACG,kBAAkB,CAAC,CAAA;AACzD,aAAC,CAAC,CAAA;AACFlf,YAAAA,SAAQ,CAAC6e,cAAc,CAAClZ,UAAU,EAAEqZ,KAAK,CAAC,CAAA;WAC3C;AACD9X,UAAAA,cAAc,EAAEwX,gBAAgB;AAChCvX,UAAAA,YAAY,EAAEwX,kBAAkB;AAChClb,UAAAA,YAAY,EAAZA,YAAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAA;KACA;AACF,IAAA,MAAM,EACJ,CAAC,CAACib,gBAAgB,IAAI/f,MAAM,CAACmE,IAAI,CAAC4b,gBAAgB,CAAC,CAAClW,MAAM,KAAK,CAAA;AAChE,GAAA,CACD,CACE,CACF,CAAA;AAEV;;ACnHA,IAAMvL,SAAS,GAAGC,wBAAe,CAAC;EAChCiiB,iBAAiB,EAAA,QAAA,CAAA;AACf/hB,IAAAA,OAAO,EAAE,MAAM;AACf2S,IAAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,YAAY,EAAE,QAAQ;AACtB,IAAA,OAAO,EAAE;AACPhR,MAAAA,MAAM,EAAE,SAAA;KACT;AACD,IAAA,8CAA8C,EAAE;AAC9C0C,MAAAA,KAAK,EAAE,MAAA;KACR;AACD,IAAA,gBAAgB,EAAE;AAChB,MAAA,WAAW,EAAE,MAAM;AACnBA,MAAAA,KAAK,EAAE,OAAA;AACT,KAAA;AAAC,GAAA,EACEsc,MAAW,EAAA;AACd,IAAA,gBAAgB,EAAE;AAChB/e,MAAAA,SAAS,EAAE,KAAK;AAChBgT,MAAAA,SAAS,EAAE,QAAQ;AACnB,MAAA,OAAO,EAAE;AAAEjT,QAAAA,MAAM,EAAE,SAAS;AAAE0C,QAAAA,KAAK,EAAE,QAAQ;AAAEvC,QAAAA,QAAQ,EAAE,OAAA;AAAQ,OAAA;KAClE;AACD,IAAA,qCAAqC,EAAE;AACrCuC,MAAAA,KAAK,EAAE,OAAO;AACd,MAAA,WAAW,EAAE,OAAO;AACpB0Q,MAAAA,MAAM,EAAE,QAAA;KACT;AACD,IAAA,mBAAmB,EAAE;AACnB,MAAA,SAAS,EAAE;AACTF,QAAAA,MAAM,EAAE,iBAAA;OACT;AACDnC,MAAAA,KAAK,EAAE,KAAK;AACZ,MAAA,WAAW,EAAE,OAAO;AACpBqC,MAAAA,MAAM,EAAE,UAAU;AAClBF,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAK;AACtB,MAAA,kBAAkB,EAAE,OAAO;AAC3B,MAAA,MAAM,EAAE;AACNnC,QAAAA,KAAK,EAAE,MAAM;AACb,QAAA,YAAY,EAAE,MAAM;AACpB1S,QAAAA,OAAO,EAAE,cAAc;AACvBqE,QAAAA,KAAK,EAAE,SAAS;AAChB0Q,QAAAA,MAAM,EAAE,oBAAoB;AAC5B,QAAA,WAAW,EAAE,MAAA;OACd;AACD,MAAA,WAAW,EAAE;AACX,QAAA,eAAe,EAAE,gBAAA;OAClB;AACD,MAAA,UAAU,EAAE;QACV,OAAO,EAAA,MAAA;AACT,OAAA;KACD;AACD,IAAA,sBAAsB,EAAE;AACtBF,MAAAA,MAAM,EAAE,kBAAA;KACT;AACD,IAAA,sBAAsB,EAAE;AACtB,MAAA,SAAS,EAAE;AACTA,QAAAA,MAAM,EAAE,iBAAA;OACT;AACD7U,MAAAA,OAAO,EAAE,OAAO;AAChB0S,MAAAA,KAAK,EAAE,KAAK;AACZ,MAAA,WAAW,EAAE,OAAO;AACpBqC,MAAAA,MAAM,EAAE,UAAU;AAClBF,MAAAA,MAAM,EAAE,gBAAgB;AACxB,MAAA,eAAe,EAAE,KAAK;AACtB,MAAA,kBAAkB,EAAE,OAAO;AAC3B,MAAA,MAAM,EAAE;AACNnC,QAAAA,KAAK,EAAE,MAAM;AACb,QAAA,YAAY,EAAE,MAAM;AACpB1S,QAAAA,OAAO,EAAE,cAAc;AACvBqE,QAAAA,KAAK,EAAE,SAAS;AAChB0Q,QAAAA,MAAM,EAAE,oBAAoB;AAC5B,QAAA,WAAW,EAAE,MAAA;OACd;AACD,MAAA,WAAW,EAAE;AACX,QAAA,eAAe,EAAE,gBAAA;OAClB;AACD,MAAA,UAAU,EAAE;QACV,OAAO,EAAA,MAAA;AACT,OAAA;KACD;AACD,IAAA,sBAAsB,EAAE;AACtBF,MAAAA,MAAM,EAAE,iBAAA;KACT;AACD,IAAA,yBAAyB,EAAE;AACzBA,MAAAA,MAAM,EAAE,kBAAA;KACT;AACD,IAAA,gCAAgC,EAAE;AAChCA,MAAAA,MAAM,EAAE,mBAAmB;AAC3BxQ,MAAAA,KAAK,EAAE,SAAA;KACR;AACD,IAAA,eAAe,EAAE;AACfyc,MAAAA,SAAS,EAAE,OAAO;AAClBC,MAAAA,SAAS,EAAE,QAAA;KACZ;AACD,IAAA,yBAAyB,EAAE;AAAElM,MAAAA,MAAM,EAAE,iBAAA;KAAmB;AACxD,IAAA,mBAAmB,EAAE;AAAEA,MAAAA,MAAM,EAAE,iBAAA;KAAmB;AAClD,IAAA,aAAa,EAAE;AACblT,MAAAA,MAAM,EAAE,SAAS;AACjB3B,MAAAA,OAAO,EAAE,OAAO;AAChBqE,MAAAA,KAAK,EAAE,QAAQ;AACfvC,MAAAA,QAAQ,EAAE,OAAA;KACX;AAED,IAAA,4BAA4B,EAAE;AAAE+S,MAAAA,MAAM,EAAE,iBAAA;AAAkB,KAAA;AAAC,GAAA,CAAA;AAE/D,CAAC,CAAC,CAAA;AAEa,SAASmN,iBAAiB,CAUhC,IAAA,EAAA;EAAA,IATPpa,MAAM,QAANA,MAAM;AACNC,IAAAA,QAAQ,QAARA,QAAQ;AACRjF,IAAAA,SAAQ,QAARA,QAAQ;AACRiL,IAAAA,IAAI,QAAJA,IAAI,CAAA;EAOJ,IAAMhN,OAAO,GAAGhB,SAAS,EAAE,CAAA;AAC3B,EAAA,IAAM6L,UAAU,GAAGzK,gBAAK,CAACghB,OAAO,CAC9B,YAAA;AAAA,IAAA,OAAOtd,KAAK,CAACiD,MAAM,CAAC,IAAwB,EAAE,CAAA;GAC9C,EAAA,CAACA,MAAM,CAAC,CACT,CAAA;AACD,EAAA,IAAMyG,YAAY,GAAGpN,gBAAK,CAACghB,OAAO,CAChC,YAAA;AAAA,IAAA,OAAOtd,KAAK,CAACkD,QAAQ,CAAC,IAAwB,EAAE,CAAA;GAChD,EAAA,CAACA,QAAQ,CAAC,CACX,CAAA;AACD,EAAA,IAAM5C,aAAa,GAAGkM,WAAW,CAC/B5P,MAAM,CAACC,MAAM,CACX,EAAE,EACFgf,mBAAmB,EAClB3S,IAAI,IAAIA,IAAI,CAAC8R,gBAAgB,IAAK,EAAE,CACtC,EACD9R,IAAI,IAAIA,IAAI,CAAC6J,qBAAqB,CACnC,CAAA;AACD,EAAA,IAAMrR,YAAY,GAAGD,oBAAoB,CAACnB,aAAa,CAAC,CAAA;EAExDhE,gBAAK,CAAC2U,SAAS,CAAC,YAAM;AACpB,IAAA,IAAI,CAACvH,YAAY,CAACxB,WAAW,EAAE;AAC7B;AACAvF,MAAAA,OAAO,CAAC4a,GAAG,CAAC,gDAAgD,CAAC,CAAA;AAC7D;MACA,IAAMC,UAAU,GAAG,EAAE,CAAA;AACrB;MACA,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIzf,IAAI,EAAE0f,YAAY,EAAK;QACvC,IAAI,CAACA,YAAY,EAAE,OAAA;AACnB,QAAA,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAClC9gB,MAAM,CAACmE,IAAI,CAAC2c,YAAY,CAAC,CAAC1c,OAAO,CAAC,UAACqD,GAAG,EAAK;AACzC,UAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAIA,GAAG,KAAK,MAAM,EAAEmZ,UAAU,CAAC/Z,IAAI,CAACzF,IAAI,CAAC,CAAA;AACzCyf,YAAAA,QAAQ,CAACpZ,GAAG,EAAEqZ,YAAY,CAACrZ,GAAG,CAAC,CAAC,CAAA;AAClC,WAAA;AACF,SAAC,CAAC,CAAA;AACJ,QAAA,IAAIQ,KAAK,CAACC,OAAO,CAAC4Y,YAAY,CAAC,EAC7BA,YAAY,CAAC1c,OAAO,CAAC,UAAC2c,QAAQ,EAAK;AACjCF,UAAAA,QAAQ,CAACzf,IAAI,EAAE2f,QAAQ,CAAC,CAAA;AAC1B,SAAC,CAAC,CAAA;OACL,CAAA;AAEDF,MAAAA,QAAQ,CAAC,MAAM,EAAE1W,UAAU,CAAC,CAAA;AAE5B2C,MAAAA,YAAY,CAACxB,WAAW,GAAG,EAAE,CAAA;AAC7B,MAAA,IAAM0V,YAAY,GAAG,IAAI9a,GAAG,CAAC0a,UAAU,CAAC,CAAA;MACxC5gB,MAAM,CAACmE,IAAI,CAAC2I,YAAY,CAAC,CAAC1I,OAAO,CAAC,UAACsD,MAAM,EAAK;AAC5C,QAAA,IAAIsZ,YAAY,CAACpa,GAAG,CAACc,MAAM,CAAC,EAC1BoF,YAAY,CAACxB,WAAW,CAAC5D,MAAM,CAAC,GAAGoF,YAAY,CAACpF,MAAM,CAAC,CAAA;AAC3D,OAAC,CAAC,CAAA;MACF,IAAI,CAAC1H,MAAM,CAACmE,IAAI,CAAC2I,YAAY,CAACxB,WAAW,CAAC,CAACzB,MAAM,EAAE;QACjDiD,YAAY,CAACxB,WAAW,GAAG3L,SAAS,CAAA;AACtC,OAAA;MACA0B,SAAQ,CAACiC,SAAS,CAAC6G,UAAU,CAAC,EAAE7G,SAAS,CAACwJ,YAAY,CAAC,CAAC,CAAA;AAC1D,KAAA;GACD,EAAE,CAACA,YAAY,EAAE3C,UAAU,EAAE9I,SAAQ,CAAC,CAAC,CAAA;EACxC,oBACE3B,gBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAEJ,OAAO,CAACkhB,iBAAAA;AAAkB,GAAA,eACxC9gB,+BAAC,WAAW,EAAA;AACV,IAAA,gBAAgB,EAAEyK,UAAU,CAACmB,WAAW,IAAI,EAAG;AAC/C,IAAA,kBAAkB,EAAEwB,YAAY,CAACxB,WAAW,IAAI,EAAG;AACnD,IAAA,QAAQ,EAAE,SAAA,QAAA,CACR4U,cAAiC,EACjCe,gBAAmC,EAChC;AACH;;AAEA/R,MAAAA,0BAA0B,cACnB/E,UAAU,EAAA;AAAEmB,QAAAA,WAAW,EAAE4U,cAAAA;AAAc,OAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EACvCpT,YAAY,EAAA;AAAExB,QAAAA,WAAW,EAAE2V,gBAAAA;OAChC,CAAA,EAAA,UAACtW,SAAS,EAAEgB,WAAW,EAAA;QAAA,OACrBtK,SAAQ,CAACiC,SAAS,CAACqH,SAAS,CAAC,EAAErH,SAAS,CAACqI,WAAW,CAAC,CAAC,CAAA;AAAA,OAAA,EACxD7G,YAAY,CACb,CAAA;KACD;AACF,IAAA,IAAI,EAAEwH,IAAK;AACX,IAAA,YAAY,EAAExH,YAAAA;AAAa,GAAA,CAC3B,CACE,CAAA;AAEV;;;;;"}